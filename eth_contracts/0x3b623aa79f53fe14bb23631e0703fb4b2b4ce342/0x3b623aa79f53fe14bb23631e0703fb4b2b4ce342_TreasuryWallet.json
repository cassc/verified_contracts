{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/TreasuryWallet.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24;\\n\\ncontract TreasuryWallet {\\n    address payable public address1;\\n    address payable public address2;\\n    address payable public address3;\\n    address payable public address4;\\n    address payable public address5;\\n\\n    address payable admin;\\n\\n    uint256[] public amounts = [11, 11, 11, 11, 56];\\n\\n    constructor(address payable _address1, address payable _address2, address payable _address3, address payable _address4, address payable _address5) {\\n        address1 = _address1;\\n        address2 = _address2;\\n        address3 = _address3;\\n        address4 = _address4;\\n        address5 = _address5;\\n        admin = payable(msg.sender);\\n    }\\n\\n    receive() external payable {\\n        // Fallback function that accepts incoming Ether\\n    }\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n    function changeAdmin(address payable _admin) external onlyAdmin {\\n        admin = _admin;\\n    }\\n    function changeAddress1(address payable _address1) external onlyAdmin {\\n        address1 = _address1;\\n    }\\n    function changeAddress2(address payable _address2) external onlyAdmin {\\n        address2 = _address2;\\n    }\\n    function changeAddress3(address payable _address3) external onlyAdmin {\\n        address3 = _address3;\\n    }\\n    function changeAddress4(address payable _address4) external onlyAdmin {\\n        address4 = _address4;\\n    }\\n    function changeAddress5(address payable _address5) external onlyAdmin {\\n        address5 = _address5;\\n    }\\n    function changeAmounts(uint256[] memory _amounts) external onlyAdmin {\\n        require(_amounts.length == 5, \\\"MainWallet: amounts array must have 5 elements\\\");\\n        // require to sum to be equal to 100\\n        require(_amounts[0] + _amounts[1] + _amounts[2] + _amounts[3] + _amounts[4] == 100, \\\"MainWallet: amounts must sum to 100\\\");\\n        amounts = _amounts;\\n    }\\n\\n    function withdraw() external {\\n        uint256 balance = address(this).balance;\\n        uint256 amount1 = balance * amounts[0] / 100;\\n        uint256 amount2 = balance * amounts[1] / 100;\\n        uint256 amount3 = balance * amounts[2] / 100;\\n        uint256 amount4 = balance * amounts[3] / 100;\\n\\n        (bool ok1, ) = address1.call{value: amount1}(\\\"\\\");\\n        require(ok1, \\\"Transfer 1 failed.\\\");\\n        (bool ok2, ) = address2.call{value: amount2}(\\\"\\\");\\n        require(ok2, \\\"Transfer 2 failed.\\\");\\n        (bool ok3, ) = address3.call{value: amount3}(\\\"\\\");\\n        require(ok3, \\\"Transfer 3 failed.\\\");\\n        (bool ok4, ) = address4.call{value: amount4}(\\\"\\\");\\n        require(ok4, \\\"Transfer 4 failed.\\\");\\n        (bool ok5, ) = address5.call{value: balance - amount1 - amount2 - amount3 - amount4}(\\\"\\\");\\n        require(ok5, \\\"Transfer 5 failed.\\\");\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"paris\",\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_address2\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_address3\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_address4\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_address5\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"address1\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address2\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address3\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address4\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"address5\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address1\",\"type\":\"address\"}],\"name\":\"changeAddress1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address2\",\"type\":\"address\"}],\"name\":\"changeAddress2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address3\",\"type\":\"address\"}],\"name\":\"changeAddress3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address4\",\"type\":\"address\"}],\"name\":\"changeAddress4\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address5\",\"type\":\"address\"}],\"name\":\"changeAddress5\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"changeAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TreasuryWallet", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000f4668a205d264f9c094e4e1ce1e889f169dc440f0000000000000000000000009135d64e5d93e0762becc112348c69ffcd94fd49000000000000000000000000b0773a169dfd2a4963e224397b6512469e67cad1000000000000000000000000dbdd8330c7590cda7301d9fb867f86f854884407000000000000000000000000b4be303c3fcfe9c74825b302ec11eed570718099", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}