{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Relay {\r\n    // This function allows the contract to receive Ether.\r\n    receive() external payable {}\r\n    \r\n    // Function to execute meta-transaction\r\n    function executeMetaTransaction(address _to, bytes memory _data) public payable {\r\n        (bool success, ) = _to.call{value: msg.value}(_data);\r\n        require(success, \"Failed to execute transaction\");\r\n    }\r\n\r\n    // Example withdrawal function (restrict access to this!)\r\n    function withdrawEther(address payable to, uint256 amount) public {\r\n        require(msg.sender == 0xAaAB252408840B3971f2c9a544cEA478F850e10C, \"Not authorized\");\r\n        require(amount <= address(this).balance, \"Insufficient funds\");\r\n        to.transfer(amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Relay", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ce2dbac13cbe72d794c5f00471b5975679fb7c3497f33106054e0b971eeea297"}