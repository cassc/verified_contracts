// SPDX-License-Identifier: MIT
pragma solidity 0.8.15;

import "@openzeppelin/contracts/token/ERC721/IERC721.sol";
import "@openzeppelin/contracts/token/ERC1155/IERC1155.sol";
import "@openzeppelin/contracts/utils/introspection/IERC165.sol";

/*
:::::::::::::::::::::::::::::::@@@***[email protected]@%:::::::::::::::::::::::::
:::::::::::::::::::::::::::::::@@@***[email protected]@%:::::::::::::::::::::::::
:::::::::::::::::::::::[email protected]@@##*++++++++++++++++****[email protected]@%------:::::::::::::::::::
::::::::::::::::::::::[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*:::::::::::::::::::
:::::::::::::::::::-###########@@@@@@@@%#####*************************###-::::::::::::::::
:::::::::::::::::[email protected]@#[email protected]@@@@%########*************************%@@=::::::::::::::::
:::::::::::::::::@@@##+:::--:::@@@##+::*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@=::::::::::::::::
:::::::::::::::::@@@##+:::::[email protected]@@##+::*@@@@@@@@===++#@@@@@@@@==+##%@@*--:::::::::::::::::
:::::::::::::::::@@@**+::::::::@@@##+::=********===--+*****@@@===**#@@*:::::::::::::::::::
:::::::::::::::::@@@**+:::--:::@@@##+:::--------===:::-----%@@==+**#@@*:::::::::::::::::::
:::::::::::::::::@@@##+::::::::@@@@@#:::::---+++--------=++%@@--=##%@@*:::::::::::::::::::
:::::::::::::::::[email protected]@%++=::[email protected]@@@@%++=--:::%%%%%*--+%%%%%*++%%%@@#==-:::::::::::::::::::
:::::::::--::::::::-#####[email protected]@@%%%**+==-::%%%##*--+##%%%[email protected]@@##*::::::::::::::::::::::
::::::::-==-::::::::::[email protected]@%##***@@@******##=-----:::--:::---*##@@%:::::::::::::::::::::::::
:::===::---===+++===::---*@@@@@@@@*****=--:::::::::--::::::+**@@%::::::::::::::==-::::::::
---===+++++*********+++++#@@@@@@@@##***=:::::::::::--::::::[email protected]@%++=::::::::------::::::::
+++--=%%%%%%%%%%%%%%%%%%%%%%%%%@@@#####=::::::::::::::--::::::@@@%%*::::::::===:::::::::::
%%%%%%%%#**********#@@@@@%%%@@@@@@**+:::::::::::::::::--::::::@@@**#%%%%%%%%---:::::::::::
###**#@@#***********##%@@@%%%%%@@@**+::::::..........:::[email protected]@@**#@@@%%%%%###:::::::::::
######@@%##***********#@@@%%%@@@@@##*---::[email protected]@@**#@@@%%%%%%%%==-:::--:::
###%%%%%@@@#**********#@@@%%@@@@@@@@@##=..#@@@@@@@@@@@@@@@@@@@@@@**#@@%##%%%%%%%%*--===-::
%%%##*++*##%@@#*******#@@@@@@%%@@@[email protected]@@%%+================%@@##***#@@#++*##+++%%#++=--:::
%%%***++***#%%%%%*****#%%@@@@%%@@@--=%%%%%#****************@@@*****#%%###******###**=:::::
###+++********@@@********%@@@%%@@@##******%@@@@@@@@@@@@@@@@@@@********%@@#********%%+:::::
***+++--------%@@********%@@@@@@@@  :##-  =**%%%%%%##%%%#**%%%@@@*****%@@+-----++*###%%=::
+++++=---==---%@@********%@@%%%@@@==+##+==*##%%%###%%%%%#*****@@@*****%@@+=====+++++*##***
===++=========%@@********#@@%%%%%%********###*****#%%%%%%##[email protected]@@*****%@@*++++++++==+++#%%
======--+###**@@@***********@@@+++--=**+++++++++***###**%%%###@@@*****%@@%##@@@**+-----#@@
===+++**#%%#**@@@***********@@@===**+--=++===+++---========#%%@@@******##@@@@@@******++***
===++***%@@%##@@@***********%@@======::-==---===:::---=====#%%@@@********@@@@@@%%#***+++++
===++*##%@@%%%@@@***********%@@===:::..::::::::::::::-==***%%%@@@********@@@%%%@@%++++++==
+++**#@@%#####@@@***********%@@...:::...:::::::::::::---+**%%%@@@********@@@@@@@@@%%#***++
***###@@%##***@@@***********@@@+++:::...:::::===::::::--===#%%@@@********@@@@@@@@%*****+++
###%%%@@#**+++%@@***********@@@%%%::::::..:::+++:::--------#%%@@@********@@@%%%@@%+++**+==
###@@@##+--===%@@***********@@@%%%...:::.....:::===++*##=--#%%@@@********@@@@@@@@%******++
###@@%+++++***@@@***=====+**@@@@@@*****=::...:::*****=--+##%@@@@@***=====%@@###@@%**+=====
%%%@@%***#####@@@**+===--+**@@@@@@@@%##*++===+++#####+==#@@@@@@@@**+===--%@@###@@%***++===
@@@##%%%%#####@@@**+---==+**@@@@@@@@@%%%%%%%%%%%%%%%%%%%@@@@@@@@@**+--===%@@###@@%**###*++
@@@***########@@@***********@@@#####%@@@@@@@@@@@@@@@@@@@%#####@@@********@@@###@@@##*+++++
@@@###########%%%%%%%%%%%%%%%%%######%%%%%%%%%%%%%%%%%%%######%%%%%%%%%%%%%%###@@@%%###***
@@@##############@@@@@@@@@@@#####################################@@@@@@@@######@@@%%%%%###
@@@############################################################################@@@%%%%%###
@@@#########################################################################@@@+++=====*%%
@@@#########################################################################@@@-----:::+**
@@@#########################################################################@@@::----:::::
*/

/**
 * @title Optimized Batch Transfer Contract
 * @author davidbailey.eth
 * @notice Serves for batch transferring of NFTs.
 */
contract OptimizedBatchTransfer {
    // ========================================
    //     EVENT & ERROR DEFINITIONS
    // ========================================

    error MismatchedInput();
    error UnsupportedCollection();

    // ========================================
    //    VAR & STRUCT DEFINITIONS
    // ========================================

    struct PackedData {
        uint256 tokenId;
        address collection;
    }

    struct PackedDataWithAmounts {
        uint256 tokenId;
        uint256 amount;
        address collection;
    }

    // ========================================
    //    CONSTRUCTOR AND CORE FUNCTIONS
    // ========================================

    constructor() {}

    /**
     * @notice transfers multiple ERC721s
     * @param _packedData array of packed collection addresses and tokenIds
     * @param _to recipient address
     */
    function transferERC721(
        PackedData[] calldata _packedData,
        address _to
    ) external {
        for (uint256 i = 0; i < _packedData.length; ) {
            IERC721(_packedData[i].collection).transferFrom(
                msg.sender,
                _to,
                _packedData[i].tokenId
            );

            unchecked {
                ++i;
            }
        }
    }

    /**
     * @notice transfers multiple ERC1155s
     * @param _packedData array of packed collection addresses, tokenIds, and amounts
     * @param _to recipient address
     */
    function transferERC1155(
        PackedDataWithAmounts[] calldata _packedData,
        address _to
    ) external {
        for (uint256 i = 0; i < _packedData.length; ) {
            IERC1155(_packedData[i].collection).safeTransferFrom(
                msg.sender,
                _to,
                _packedData[i].tokenId,
                _packedData[i].amount,
                ""
            );

            unchecked {
                ++i;
            }
        }
    }

    /**
     * @notice transfers multiple ERC721s and ERC1155s
     * @param _packedData array of packed collection addresses, tokenIds, and amounts
     * @param _to recipient address
     */
    function transferEverything(
        PackedDataWithAmounts[] calldata _packedData,
        address _to
    ) external {
        for (uint256 i = 0; i < _packedData.length; ) {
            if (
                IERC165(_packedData[i].collection).supportsInterface(
                    type(IERC721).interfaceId
                )
            ) {
                IERC721(_packedData[i].collection).transferFrom(
                    msg.sender,
                    _to,
                    _packedData[i].tokenId
                );
            } else if (
                IERC165(_packedData[i].collection).supportsInterface(
                    type(IERC1155).interfaceId
                )
            ) {
                IERC1155(_packedData[i].collection).safeTransferFrom(
                    msg.sender,
                    _to,
                    _packedData[i].tokenId,
                    _packedData[i].amount,
                    ""
                );
            } else {
                revert UnsupportedCollection();
            }

            unchecked {
                ++i;
            }
        }
    }
}