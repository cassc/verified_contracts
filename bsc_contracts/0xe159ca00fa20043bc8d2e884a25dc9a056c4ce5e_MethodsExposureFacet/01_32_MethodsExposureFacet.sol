// SPDX-License-Identifier: MIT
// This file was generated by the expose.ts script
pragma solidity ^0.8.0;

// imports
import "./PonzuFacet.sol";
import "./QRNGFacet.sol";

contract MethodsExposureFacet {
  // function hasRole(bytes32, address) external view returns (bool) {}
  // function getRoleAdmin(bytes32) external view returns (bytes32) {}
  // function grantRole(bytes32, address) external {}
  // function revokeRole(bytes32, address) external {}
  // function renounceRole(bytes32, address) external {}
  // function getRoleMember(bytes32, uint256) external view returns (address) {}
  // function getRoleMemberCount(bytes32) external view returns (uint256) {}
  // function getRoleMembers(bytes32) external view returns (address[] memory) {}
  // function diamondCut(FacetCut[] calldata, address, bytes calldata) external {}
  // function facets() external view returns (Facet[] memory) {}
  // function facetFunctionSelectors(address) external view returns (bytes4[] memory) {}
  // function facetAddresses() external view returns (address[] memory) {}
  // function facetAddress(bytes4) external view returns (address) {}
  // function supportsInterface(bytes4) external view returns (bool) {}
  // function pause() external {}
  // function unpause() external {}
  // function isPaused() external view returns (bool) {}
  // function pausedAt() external view returns (uint256) {}
  // function deposit(uint256) external {}
  // function withdraw(uint256) external {}
  // function addSauce(uint256) external {}
  // function claimReward() external {}
  // function startRound(uint256) external {}
  // function setDefaultAdminRole(address) external {}
  // function manualClaim(bool) external {}
  // function setRoundSettings(uint256, uint256) external {}
  // function setRewardToken(address) external {}
  // function setBlackHole(address) external {}
  // function setBlackHoleShare(uint256) external {}
  // function getRewardToken() external view returns (address) {}
  // function getRoundSettings() external view returns (uint256, uint256) {}
  // function getBlackHole() external view returns (address) {}
  // function getBlackHoleShare() external view returns (uint256) {}
  // function getCurrentStoredRewards() external view returns (uint256) {}
  // function getCurrentRoundData() external view returns (PonzuRoundData memory) {}
  // function getRoundWinnerData(uint256) external view returns (RoundWinner memory) {}
  // function prizePool() external view returns (uint256) {}
  // function ponzuPool() external view returns (uint256) {}
  // function currentRoundInfo() external view returns (uint256, uint256, uint256, uint256) {}
  // function totalParticipants() external view returns (uint256) {}
  // function getParticipantList() external view returns (address[] memory) {}
  // function getParticipantDeposit(address) external view returns (uint256, uint256) {}
  // function getPausedTimeInRound() external view returns (uint256) {}
  // function fulfillUint256(bytes32, bytes calldata) external {}
  // function selectWinner() external {}
  // function fulfillUint256Array(bytes32, bytes calldata) external {}
  // function closeRoundManually(uint256) external {}
  // function closeRound() external returns (bytes32) {}
  // function endRoundWithoutWinner() external {}
  // function setRequestParameters(address, bytes32, address) external {}
  // function getRequestParameters() external view returns (address, bytes32, address) {}
  // function expectingRequestWithIdToBeFulfilled(bytes32) external view returns (bool) {}
}