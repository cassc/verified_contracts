{"SourceCode": "/*\r\n\r\n    Copyright 2021 DODO ZOO.\r\n    SPDX-License-Identifier: Apache-2.0\r\n\r\n*/\r\n\r\npragma solidity 0.6.9;\r\n\r\ninterface IERC20ForCheck {\r\n    function decimals() external view returns (uint);\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\ninterface IOldERC20ForCheck {\r\n    function decimals() external view returns (uint);\r\n    function name() external view returns (bytes32);\r\n    function symbol() external view returns (bytes32);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\n\r\ncontract ERC20Helper {\r\n    function isERC20(address token, address user, address spender) external view returns(bool isOk, string memory symbol, string memory name, uint decimals, uint256 balance, uint256 allownance) {\r\n        try this.judgeERC20(token, user, spender) returns (string memory _symbol, string memory _name, uint _decimals, uint256 _balance, uint256 _allownance) {\r\n            symbol = _symbol;\r\n            name = _name;\r\n            decimals = _decimals;\r\n            balance = _balance;\r\n            allownance = _allownance;\r\n            isOk = true;\r\n        } catch {\r\n            try this.judgeOldERC20(token, user, spender) returns (bytes32 _symbol, bytes32 _name, uint _decimals, uint256 _balance, uint256 _allownance) {\r\n                symbol = bytes32ToString(_symbol);\r\n                name = bytes32ToString(_name);\r\n                decimals = _decimals;\r\n                balance = _balance;\r\n                allownance = _allownance;\r\n                isOk = true;\r\n            } catch {\r\n                isOk = false;\r\n            }   \r\n        }      \r\n    }\r\n\r\n    function judgeERC20(address token, address user, address spender) external view returns(string memory symbol, string memory name, uint decimals, uint256 balance, uint256 allownance) {\r\n        name = IERC20ForCheck(token).name();\r\n        symbol = IERC20ForCheck(token).symbol();\r\n        decimals = IERC20ForCheck(token).decimals();\r\n        \r\n        balance = IERC20ForCheck(token).balanceOf(user);\r\n        allownance = IERC20ForCheck(token).allowance(user,spender);\r\n    }\r\n\r\n    function judgeOldERC20(address token, address user, address spender) external view returns(bytes32 symbol, bytes32 name, uint decimals, uint256 balance, uint256 allownance) {\r\n        name = IOldERC20ForCheck(token).name();\r\n        symbol = IOldERC20ForCheck(token).symbol();\r\n        decimals = IOldERC20ForCheck(token).decimals();\r\n        \r\n        balance = IOldERC20ForCheck(token).balanceOf(user);\r\n        allownance = IOldERC20ForCheck(token).allowance(user,spender);\r\n    }\r\n\r\n    function bytes32ToString(bytes32 _bytes) public pure returns (string memory _string) {\r\n        _string = string(abi.encodePacked(_bytes));\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_bytes\",\"type\":\"bytes32\"}],\"name\":\"bytes32ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_string\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"isERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOk\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allownance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"judgeERC20\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allownance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"judgeOldERC20\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allownance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "ERC20Helper", "CompilerVersion": "v0.6.9+commit.3e3065ac", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Apache-2.0", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://cb955339479c413376a27954265b7ff3791b974f3959b97df1c56e06c875598a"}