{"SourceCode": "/**\r\n\r\nBlubbler is a SaaS for developers to build their memecoin websites in just a few minutes.\r\nThe service can be paid with discount by burning $BLUBBLER tokens and a part of the platform\r\nincome is used to buy back and burn $BLUBBLER tokens.\r\n\r\nBlubbler is also fun, join our community groups to play with our memes.\r\n\r\nGive it a try on our website.\r\n\r\n\ud83d\udd35 Website: https://blubbler.app\r\n\r\n\ud83d\udd35 Telegram: https://t.me/BlubblerApp\r\n\r\n\ud83d\udd35 Twitter: https://x.com/BlubblerApp\r\n\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28c0\u28e4\u28e4\u28e4\u28e4\u28c0\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e4\u28f4\u283e\u283f\u289b\u287b\u283d\u281b\u280b\u2809\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u2819\u281b\u282f\u28bf\u285b\u283b\u2837\u28f6\u28e4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f4\u28ff\u281f\u2889\u28c0\u28e4\u28e4\u28ec\u28f5\u28f6\u28e6\u28c4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e0\u28f4\u28f2\u28fe\u28e5\u28e4\u28e4\u28c0\u28c9\u281b\u283f\u28e6\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u2877\u281b\u280b\u2809\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u281b\u283b\u2836\u28e4\u2800\u2800\u2800\u28e4\u2876\u281f\u281b\u2809\u2809\u2800\u2800\u2800\u2800\u2800\u2809\u2819\u281b\u2836\u28ec\u28fb\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u287f\u289b\u28e1\u2834\u28d2\u28d2\u28f6\u28f6\u28f6\u28e4\u28c4\u2840\u2800\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2877\u2880\u28e0\u28e4\u28f6\u28f6\u28f6\u28d6\u28d2\u2866\u288c\u2859\u28bf\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u288f\u2874\u28eb\u283e\u28db\u286d\u2894\u28d2\u28d2\u28d2\u28fb\u28fd\u28db\u28b6\u28e7\u28ff\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ef\u287f\u28df\u28eb\u28ed\u28f4\u28f6\u28f6\u2864\u28ad\u28d9\u2837\u28ff\u28e2\u2859\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28ff\u2883\u28fe\u287e\u28a3\u28fe\u28f7\u281f\u28bb\u2809\u2801\u2808\u285f\u283b\u28ff\u28bf\u28cc\u287b\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u28e3\u28f6\u287f\u289f\u281b\u281b\u283b\u28bf\u28bd\u287b\u28be\u28f7\u28cc\u28b7\u287d\u2858\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u2847\u28b8\u287f\u28f1\u28ff\u281f\u2801\u2800\u2847\u2800\u2800\u2800\u2847\u2800\u28e0\u28d7\u2859\u28bf\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u287f\u28bb\u280b\u2800\u28b8\u2800\u2800\u2800\u28b8\u2800\u287d\u2806\u2819\u28bf\u28e7\u28bf\u2847\u2838\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u28ff\u2800\u2838\u28a3\u287f\u2899\u2866\u2880\u28c0\u28e5\u28e4\u28f6\u28f6\u28e5\u28e4\u28e4\u28ec\u28ed\u28f3\u28bb\u28ff\u2846\u2800\u2800\u2800\u2800\u28b8\u28ff\u28d2\u28ef\u28e4\u28e4\u28ec\u28e4\u28e4\u28e4\u28e4\u28e4\u28c9\u2853\u2826\u28c4\u28bf\u285f\u2807\u2800\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28ff\u28ff\u2800\u2800\u28b8\u28ff\u2877\u281f\u280b\u28b9\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2809\u281b\u28ff\u2847\u2800\u2800\u2800\u2800\u28ff\u281b\u2809\u2801\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u2819\u281b\u28be\u28fd\u2867\u2800\u2800\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28bf\u2846\u2800\u28b8\u28c7\u2800\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u2800\u2800\u2800\u28ff\u2801\u2800\u2864\u28a4\u2800\u28ff\u2800\u2800\u2800\u2808\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u28f8\u2847\u2800\u28a0\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u28a0\u28ff\u280b\u2800\u2808\u28f7\u2800\u2808\u28ff\u2877\u28e4\u2840\u2800\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2880\u28e0\u28f4\u287e\u280b\u2800\u287c\u2800\u2808\u2846\u28b9\u28f7\u28a6\u28c4\u28c0\u2819\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2800\u2880\u28e0\u28fe\u28ff\u2803\u2800\u28fc\u281f\u2809\u281b\u28ff\u28c4\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2880\u28f4\u287f\u28e1\u2814\u280b\u2809\u2819\u2803\u2800\u2818\u28bf\u28fe\u28fd\u281b\u2832\u283f\u283f\u283f\u28bf\u28ff\u287f\u281f\u280b\u2801\u2800\u2880\u2874\u2801\u2800\u2800\u2839\u2844\u28bb\u28e6\u2808\u2809\u281b\u281b\u283f\u283f\u283f\u283f\u2816\u28db\u28ef\u28f7\u28ff\u2803\u2800\u2818\u282f\u28c4\u2800\u2800\u2808\u28bb\u28e6\u2840\u2800\u2800\r\n\u2800\u28a0\u28fe\u288b\u285c\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283b\u28bf\u28e6\u28c4\u28c0\u28f4\u281e\u280b\u2801\u2800\u2800\u2800\u2880\u2834\u280b\u2800\u2800\u2820\u2840\u2800\u2818\u28a6\u2859\u2837\u28e6\u28c0\u2840\u2800\u2800\u2800\u2800\u28e0\u28ff\u287f\u281f\u2801\u2800\u2800\u2800\u2800\u2808\u2831\u28c4\u2800\u2800\u2819\u28ff\u2844\u2800\r\n\u28a0\u28ff\u2883\u280e\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a8\u287f\u280b\u2800\u2800\u2800\u2800\u2880\u2860\u281e\u2801\u2800\u2800\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28a6\u2848\u2819\u283b\u28bf\u28df\u281b\u281b\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28b3\u2840\u2800\u2808\u28ff\u2844\r\n\u28fe\u2887\u285e\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u281f\u2800\u2800\u2800\u2800\u28e0\u2816\u2809\u2800\u2800\u2800\u2880\u2854\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28a6\u2840\u2800\u2819\u2833\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2831\u2840\u2800\u2838\u28ff\r\n\u28ff\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2840\u2800\u2800\u2880\u287e\u2803\u2800\u2800\u2800\u28e0\u280a\u2800\u2800\u2800\u2800\u2800\u2820\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2844\u2800\u2800\u2808\u28bb\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u28b3\u2800\u2800\u28ff\r\n\u28ff\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u285f\u2800\u2800\u2800\u28fe\u2801\u2800\u2800\u2800\u28f0\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b9\u2800\u2800\u2800\u2800\u28bf\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u28c4\u2800\u2800\u2800\u2800\u2818\u2846\u2800\u28f8\r\n\u28ff\u2848\u2847\u2800\u2800\u2830\u28f6\u28de\u28db\u28b7\u28c4\u2840\u28b8\u2847\u2800\u2800\u2800\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u2800\u2800\u2800\u2800\u28b8\u2806\u2800\u2800\u2800\u2880\u28e0\u2876\u28db\u28f3\u28f6\u2846\u2800\u28a0\u2807\u2800\u28ff\r\n\u28b9\u28e7\u28b3\u2800\u2800\u2800\u2800\u2800\u2808\u2813\u282e\u28db\u28bb\u28c7\u2800\u2800\u2800\u2800\u28a3\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2807\u2800\u2800\u2800\u2800\u28fe\u28c0\u28e4\u2874\u281e\u28fb\u2835\u280b\u2800\u2800\u2800\u2800\u2800\u285c\u2800\u28fc\u285f\r\n\u2800\u2839\u28e7\u28e3\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28bb\u28e7\u2840\u2800\u2800\u2818\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u280e\u2800\u2800\u2800\u2800\u28f0\u28cf\u28e9\u2824\u2812\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u281e\u2880\u28fc\u285f\u2800\r\n\u2800\u2800\u2819\u283f\u28f5\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28ce\u28bb\u28c6\u2800\u2800\u2818\u28a6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u280e\u2800\u2800\u2800\u2880\u28fc\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2870\u280b\u28e0\u287f\u280b\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2808\u283b\u28f6\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2886\u28bb\u2844\u2800\u2800\u2800\u28a3\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u2803\u2800\u2800\u28e0\u2876\u28fb\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u28f7\u281f\u2801\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283b\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2808\u28af\u28f7\u2800\u2800\u2800\u2808\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u280b\u2880\u28e0\u28f6\u283f\u28eb\u281e\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u287e\u281f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2808\u28bf\u28f7\u281f\u2800\u28a0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u288b\u28e4\u287e\u289b\u28e9\u2834\u280a\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2816\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28bf\u28c6\u2800\u2800\u2800\u2800\u28a0\u287f\u2801\u2800\u28e0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u280e\u28e0\u287e\u28eb\u2814\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u281e\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283b\u28e7\u2840\u2800\u2800\u28fc\u2801\u2800\u28a0\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2803\u28a0\u28ff\u2871\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28bf\u28e6\u2840\u28ff\u2800\u2800\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2874\u2801\u2800\u28fe\u28b3\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u283e\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u281b\u28bb\u2840\u2800\u2818\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u280e\u2800\u2800\u28f8\u284f\u284e\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28f4\u281e\u281f\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28e7\u2800\u2800\u2808\u2832\u2884\u28c0\u28c0\u2824\u2812\u2801\u2800\u2800\u28f0\u28ff\u28ff\u28c1\u28e0\u2864\u2834\u2816\u281b\u281b\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u287c\u280b\u2801\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28b7\u28e4\u28c0\u2800\u2800\u2800\u2880\u28e0\u2874\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u281b\u281b\u281b\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\r\n**/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), msg.sender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function getAmountsOut(\r\n        uint amountIn,\r\n        address[] memory path\r\n    ) external view returns (uint[] memory amounts);\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract BLUBBLER is IERC20, Ownable {\r\n    address payable private _taxWallet;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    string private constant _name = \"Blubbler\";\r\n    string private constant _symbol = \"BLUBBLER\";\r\n\r\n    uint256 private _tTotal = 1_000_000 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\r\n    uint256 private _initialBuyTax = 20;\r\n    uint256 private _initialSellTax = 20;\r\n    uint256 private _finalBuyTax = 0;\r\n    uint256 private _finalSellTax = 0;\r\n    uint256 private _reduceBuyTaxAt = 20;\r\n    uint256 private _reduceSellTaxAt = 30;\r\n\r\n    uint256 private _buyCount = 0;\r\n    uint256 private _preventSwapBefore = 20;\r\n\r\n    address public uniswapV2Pair;\r\n    bool private tradingOpen = false;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n    uint256 private lastBlock = 0;\r\n    uint256 private swapsThisBlock = 0;\r\n\r\n    uint256 public _maxTxAmount = (_tTotal * 16) / 1000;\r\n    uint256 public _maxWalletSize = (_tTotal * 16) / 1000;\r\n    uint256 public _taxSwapThreshold = (_tTotal * 1) / 10000;\r\n    uint256 public _maxTaxSwap = (_tTotal * 8) / 1000;\r\n\r\n    event _maxTxAmountUpdated(uint _maxTxAmount);\r\n\r\n    uint256 private _invoicesBurnRatio = 50;\r\n    mapping(address => uint256) public invoicePayments;\r\n    event InvoicePayment(address indexed payer, address indexed invoiceId, uint256 amount);\r\n\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _taxWallet = payable(0x0876ceA5681B6966338EC9437C376893969AEe98);\r\n\r\n        _balances[address(this)] = (_tTotal * 97) / 100;\r\n        emit Transfer(address(0), address(this), _balances[address(this)]);\r\n\r\n        _balances[msg.sender] = (_tTotal * 3) / 100;\r\n        emit Transfer(address(0), msg.sender, _balances[msg.sender]);\r\n\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[0x71B5759d73262FBb223956913ecF4ecC51057641] = true; // Pinksale LP locker\r\n        _isExcludedFromFee[_taxWallet] = true; // Treasury address\r\n\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        require (_allowances[sender][msg.sender] >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = (amount * ((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax)) / 100;\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds _maxTxAmount\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds _maxWalletSize\");\r\n\r\n                _buyCount++;\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = (amount * ((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax)) / 100;\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n\r\n            if (block.number != lastBlock) {\r\n                swapsThisBlock = 0;\r\n                lastBlock = block.number;\r\n            }\r\n\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore && swapsThisBlock <= 4) {\r\n                swapsThisBlock++;\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (taxAmount > 0 ) {\r\n            _balances[address(this)] = _balances[address(this)] + taxAmount;\r\n            emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        _balances[from] = _balances[from] - amount;\r\n        _balances[to] = _balances[to] + (amount - taxAmount);\r\n        emit Transfer(from, to, amount - taxAmount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount) private {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n        _balances[account] = _balances[account] - amount;\r\n        _tTotal = _tTotal - amount;\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    // Regular burn\r\n    function burn(uint256 amount) external {\r\n        _burn(msg.sender, amount);\r\n    }\r\n\r\n    // Function used in the SaaS platform to pay for the service by burning tokens\r\n    function burnForInvoice(address invoiceId, uint256 amount) external {\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n        // At least half of the paid amount is instantly burned, remaining is sent to the treasury wallet\r\n        uint256 burnAmount = amount * _invoicesBurnRatio / 100;\r\n        _burn(msg.sender, burnAmount);\r\n        // Remaining of the payment is sent to the treasury wallet\r\n        if (amount - burnAmount > 0) {\r\n            _transfer(msg.sender, _taxWallet, amount - burnAmount);\r\n        }\r\n        // Save the total paid for this invoice id\r\n        invoicePayments[invoiceId] = invoicePayments[invoiceId] + amount;\r\n        emit InvoicePayment(msg.sender, invoiceId, amount);\r\n    }\r\n\r\n    function buyTax() public view returns (uint256) {\r\n        return (_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax;\r\n    }\r\n\r\n    function sellTax() public view returns (uint256) {\r\n        return (_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function buyCount() public view returns (uint256) {\r\n        return _buyCount;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n        return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n        emit _maxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function reduceFee() external onlyOwner{\r\n        _reduceBuyTaxAt = 0;\r\n        _reduceSellTaxAt = 0;\r\n        _preventSwapBefore = 0;\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) internal {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function openTrading() external payable onlyOwner {\r\n        require(!tradingOpen);\r\n\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwap() external onlyOwner {\r\n        uint256 tokenBalance = balanceOf(address(this));\r\n        if(tokenBalance > 0) {\r\n            swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance = address(this).balance;\r\n        if(ethBalance > 0) {\r\n            sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    function setInvoiceBurnRatio(uint256 _ratio) external {\r\n        require(_ratio <= 100 && _ratio >= 50, \"Invalid ratio\");\r\n        if (msg.sender == _taxWallet) {\r\n            _invoicesBurnRatio = _ratio;\r\n        }\r\n    }\r\n\r\n    function recoverStuckTokens(address token) external {\r\n        if (msg.sender == _taxWallet) {\r\n            IERC20(token).transfer(_taxWallet, IERC20(token).balanceOf(address(this)));\r\n        }\r\n    }\r\n\r\n    function recoverStuckETH() external {\r\n        if (msg.sender == _taxWallet) {\r\n            _taxWallet.transfer(address(this).balance);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"invoiceId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvoicePayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"_maxTxAmountUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"invoiceId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnForInvoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"invoicePayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverStuckETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"recoverStuckTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reduceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setInvoiceBurnRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BLUBBLER", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e3efca0015d961e24df1e8d43aeff529bf510b9c03f8d513039ef714781d2a4e"}