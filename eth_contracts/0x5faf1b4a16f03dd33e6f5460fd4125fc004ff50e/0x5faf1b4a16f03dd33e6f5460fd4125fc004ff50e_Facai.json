{"SourceCode": "{\"IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller\\u0027s account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\\u0027s tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender\\u0027s allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller\\u0027s\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\"},\"\u81ea\u521b (1).sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.17;\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\ninterface IChildren {\\r\\n    function call(address token, bytes calldata data) external payable;}\\r\\n\\r\\ncontract Facai {\\r\\n    address  payable private owner;\\r\\n    address[] private  allChildren;\\r\\n    constructor() {owner = payable(msg.sender);}\\r\\n    modifier onlyOwner {require(msg.sender == owner, \\\"only owner\\\");_;}\\r\\n    \\r\\n    function registerChildren(uint32 count) external payable onlyOwner{\\r\\n        for(uint32 i = 0; i \\u003c count; i++){\\r\\n            Children children = new Children();\\r\\n            allChildren.push(address(children));\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    function callChildren(uint32 start, uint32 end, address token, bytes[] calldata data, uint256 amountInWei) external payable onlyOwner {\\r\\n        for(uint32 i = start; i \\u003c end; i++){\\r\\n            for(uint32 j = 0; j \\u003c data.length; j++) {\\r\\n                IChildren(allChildren[i]).call{value:amountInWei}(token, data[j]);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n     function callOneChildren(uint32 index, address token, bytes calldata data) external payable onlyOwner {\\r\\n        IChildren(allChildren[index]).call{value:msg.value}(token, data);\\r\\n    }\\r\\n\\r\\n    function A(uint32 count,uint32 start, uint32 end, address token, bytes[] calldata data,uint256 amountInWei)external payable onlyOwner {\\r\\n    for(uint32 m = 0; m\\u003c count; m++){\\r\\n        Children children = new Children();\\r\\n       allChildren.push(address(children));  }\\r\\n           for(uint32 i =start; i \\u003c end; i++){\\r\\n            for(uint32 j = 0; j \\u003c data.length; j++) \\r\\n            IChildren(allChildren[i]).call{value:amountInWei}(token, data[j]);\\r\\n    \\r\\n    }\\r\\n    }\\r\\n\\r\\n    function B(uint32 start, uint32 end, address token, bytes[] calldata data , uint256 amountInWei,address token1, bytes[] calldata data1, uint256 amountInWei1) external payable onlyOwner {\\r\\n    for (uint32 i = start; i \\u003c end; i++) {\\r\\n        for (uint32 j = 0; j \\u003c data.length; j++) {\\r\\n            IChildren(allChildren[i]).call{value: amountInWei}(token, data[j]);\\r\\n            IChildren(allChildren[i]).call{value: amountInWei1}(token1, data1[j]);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n}\\r\\n\\r\\n   \\r\\ncontract Children is IChildren{\\r\\n\\r\\n    address  payable private owner;\\r\\n    \\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == owner, \\\"only owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function call(address token, bytes calldata data) external payable onlyOwner {\\r\\n        (bool res,) = token.call{value: msg.value }(data);\\r\\n        if(!res) {\\r\\n            revert(\\\"children call error\\\");\\r\\n        }\\r\\n    }\\r\\n}\"}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"A\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data1\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei1\",\"type\":\"uint256\"}],\"name\":\"B\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"start\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"end\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"amountInWei\",\"type\":\"uint256\"}],\"name\":\"callChildren\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"callOneChildren\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"count\",\"type\":\"uint32\"}],\"name\":\"registerChildren\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "Facai", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://40944afc471d816b71def0d4357c2f98cf13ceb5f9b13236deec21ca4375e73f"}