{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// Giving free Rick Rolls to everybody at https://t.me/retardeth20\r\n//\r\n//\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u28fc\u285f\u2840\u2800\u2800\u2800\u2800\u2801\u2874\u280b\u2809\u2809\u2819\u2867\u2844\u28c6\u2800\u2800\u2800\u2800\u2800\u28e0\u28ef\u2847\u2800\u2880\u28f4\u2876\u28ff\u288d\u28c4\u2884\u2840\u2800\u2800\u2800\u28f6\u2846\u2800\u2800\u2880\u28e4\u2856\u2840\u2800\u2800\u2800\u2800\r\n// \u2800\u2808\u28ff\u287f\u283f\u28ff\u28f7\u28c6\u2800\u28df\u28cf\u28c0\u2840\u28c0\u28e0\u28c7\u28f7\u28bb\u2846\u2800\u2800\u2800\u287c\u28ff\u280b\u28c0\u28e6\u284b\u282f\u2809\u2800\u2801\u2803\u2837\u28fd\u2800\u2800\u2800\u28ff\u2847\u2860\u287f\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2810\u28ff\u2805\u2800\u2808\u283b\u28ff\u2844\u28ef\u285f\u281b\u281b\u281b\u281b\u281b\u280b\u2809\u28f7\u2800\u2800\u285f\u287d\u2801\u2880\u2895\u2877\u28f7\u28f6\u28f6\u28f6\u28f6\u2876\u281b\u2802\u2800\u2800\u2800\u28ff\u284f\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u28ff\u2847\u2800\u2800\u2800\u28ff\u2847\u2809\u2833\u28e4\u28c0\u28c0\u28c0\u28c4\u2840\u2800\u283d\u2847\u28ff\u280f\u2800\u2800\u2818\u28ff\u2847\u2800\u2800\u2800\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u287f\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2809\u2800\u2800\u2800\u2800\u2831\u2807\u2800\u2800\u2808\u2819\u281b\u281b\u2809\u2801\u2800\u2800\u283f\u2803\u2800\u2800\u2800\u2800\u2819\u281b\u28ff\u28d3\u28f6\u28e6\u28e4\u28e4\u2844\u2800\u2800\u2800\u2800\u28f7\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u28e4\u28e4\u28c4\u2800\u2800\u2800\u2800\u28c0\u2824\u2864\u2844\u2840\u2800\u2802\u2800\u28f6\u28c6\u28c0\u2840\u2800\u2800\u2800\u2809\u2809\u281b\u2813\u281b\u2803\u2800\u2800\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u28f8\u280f\u284f\u281b\u289d\u28e7\u2800\u2800\u28ff\u280f\u2809\u2811\u282b\u28dd\u2847\u2800\u2800\u287f\u285f\u283b\u281f\u28df\u28e7\u2840\u2820\u28fe\u28ff\u2837\u28b6\u28e6\u28c4\u2800\u2800\u28a0\u287e\u282f\u28ff\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u28ff\u2886\u2843\u2800\u2860\u285f\u2844\u2800\u2867\u2803\u2800\u2800\u2800\u2820\u2847\u2800\u2800\u28ff\u2847\u2800\u2800\u2829\u284f\u2847\u2800\u28ff\u28ff\u2800\u2800\u2809\u28bb\u28f7\u2844\u28bf\u2847\u2800\u2838\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2823\u28d5\u289f\u28db\u281f\u28e7\u2847\u2800\u28fb\u28cf\u28c6\u28e2\u28d4\u280b\u2801\u2800\u2800\u281b\u283f\u2800\u2800\u2800\u2803\u2803\u2800\u28bb\u287f\u2800\u2800\u2800\u2808\u28ff\u28bf\u2808\u281b\u283f\u281f\u28b9\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u28c0\u2840\u2800\u2809\u28c1\u286e\u287f\u2801\u2800\u2808\u2809\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2801\u2800\u2800\u2800\u2800\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2803\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2811\u282d\u282d\u283f\u281b\u2813\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2822\u2844\u2800\u2846\u2880\u2800\u2800\u2800\u2800\u2844\u2800\u2800\u2880\u2860\u2804\u2804\u2804\u2840\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u281f\u281b\u281b\u28bf\u2846\u2800\u2800\u2800\u282f\u280b\u2800\u2800\u2829\u28ff\u2800\u2800\u2880\u28be\u2807\u2801\u28c0\u28e5\u2836\u2813\u283b\u28af\u2872\u284c\u2871\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2841\u2800\u2800\u2800\u2878\u28ff\u2800\u2800\u2800\u28c4\u2800\u2800\u2800\u2808\u28ee\u2822\u2800\u28ee\u280f\u2800\u28a8\u28ef\u28e7\u28c6\u28d2\u28e8\u28e1\u28ef\u280f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2808\u2819\u2826\u28e4\u2864\u281f\u289d\u2844\u2800\u2800\u2827\u2805\u2800\u2800\u2800\u28df\u2844\u285f\u2805\u2800\u2800\u2800\u284f\u28c7\u2808\u2819\u2813\u2813\u2801\u2800\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u289f\u2845\u2800\u2800\u2818\u2847\u2800\u2800\u2800\u2808\u283f\u2803\u2800\u2800\u2800\u2800\u2809\u283b\u28ff\u28e6\u28e4\u28e4\u28d4\u28ef\u284d\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2876\u28c4\u2880\u2800\u2800\u2880\u285f\u2851\u2801\u2800\u2800\u2800\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u280b\u280b\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u280b\u282d\u282c\u280b\u280b\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2840\u2840\u2840\u2800\u2800\u2800\u2800\u2800\u2880\u2880\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2832\u2866\u2840\u2800\u2800\u2880\u2877\u280b\u28f4\u2803\u2801\u2801\u2847\u283b\u28c4\u2800\u2800\u2800\u28f8\u28b8\u2839\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28bf\u2866\u28f0\u280f\u2801\u2800\u28bf\u28c0\u2880\u28f4\u2807\u2800\u2808\u28af\u28c6\u2866\u28ef\u284b\u281e\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fd\u280b\u2800\u2800\u2800\u2811\u281b\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2808\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e4\u28af\u2801\u2800\u2800\u2800\u28a0\u2846\u2800\u2800\u2800\u2844\u2800\u2800\u2800\u28fe\u287f\u283f\u2827\u28bf\u28f7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2800\u2800\u2800\u2800\u2800\u28ff\u284f\u2800\u2800\u2800\u28ff\u2846\u2800\u2800\u28ff\u28f7\u2801\u2870\u283f\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u282f\u28ff\u28c6\u2840\u28d6\u285f\u2800\u2800\u2800\u28b9\u28ff\u287f\u2807\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n// \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u2809\u2809\u2800\u2800\u2800\u2800\u2838\u28a7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\r\npragma solidity 0.8.19;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval (address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract RETARD is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyFees = 10;\r\n    uint256 private _initialSellFees = 10;\r\n    uint256 private _finalBuyFees = 3;\r\n    uint256 private _finalSellFees = 3;\r\n    uint256 public buyFees = _initialBuyFees;\r\n    uint256 public sellFees = _initialSellFees;\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 69420e6 * 10**_decimals;\r\n    string private constant _name = \"RickRollDatBoiGruBadLuckBrianBigDickAmongUs\";\r\n    string private constant _symbol = unicode\"RETARD\";\r\n    uint256 public _maxWallet = _tTotal * 2 / 100;\r\n    uint256 _minTokensBeforeSwap = _tTotal / 200;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool public tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[address(uniswapV2Router)] = true;\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount;\r\n        if (!_isExcludedFromFee[from] && !_isExcludedFromFee[to]) {\r\n            require(tradingOpen, \"Trading is not open\");\r\n            \r\n            if (from == uniswapV2Pair) {\r\n                taxAmount = amount.mul(buyFees).div(100);\r\n                require(balanceOf(to) + amount <= _maxWallet, \"Exceeds the maxWalletSize.\");\r\n            }\r\n\r\n            if(to == uniswapV2Pair ){\r\n                taxAmount = amount.mul(sellFees).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance > _minTokensBeforeSwap) {\r\n                swapBack(_minTokensBeforeSwap);\r\n            }\r\n        }\r\n\r\n        if(taxAmount > 0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n    function setSwapbackSettings(uint amount) external onlyOwner {\r\n        _minTokensBeforeSwap = amount;\r\n    }\r\n\r\n    function swapBack(uint256 amount) private {        \r\n        bool success;\r\n        swapTokensForEth(amount);\r\n        (success, ) = address(_taxWallet).call{value: address(this).balance}(\"\");\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxWallet =_tTotal;\r\n        buyFees = _finalBuyFees;\r\n        sellFees = _finalSellFees;\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setSwapbackSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "RETARD", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://cd0243527fc48b42739ae85f891642ca397826249e67a553004504bb3907585e"}