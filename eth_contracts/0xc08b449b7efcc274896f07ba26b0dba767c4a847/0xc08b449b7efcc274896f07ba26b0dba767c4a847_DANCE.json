{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n/*\r\n    Telegram:   https://t.me/aramsamsamdance\r\n    Website:    https://aramsamsamerc.xyz/\r\n    Twitter:    https://twitter.com/aramsamsamdance\r\n*/\r\n// 55PJ!!7!!YGPG?!5577?!!!!!!!!!!!77?GB5!!7?!!!!!5PPPBBBBGPY?5!!???7!!!!!!!!!!!!!!!!!!!!5PPPGY??JJ7?J77\r\n// Y55?~!!!!YGGG?!5P?J777!!!!!!!7!7YJ5PY!!!!!!!!!5GGGGGBBBG57Y7!!!!7!!!!!!!!!!!!!!!!!!!!5GGGB5!7!7!7J7J\r\n// GGGJ~~~~~YPPG7~5G?!~??JJ??Y7~7Y!!JPPJ~~~~~~~~~JYYYYY5555Y!7!~!!!!!!!~~~~~~~~~~~~~~~~~5555PY~~~~~~7!Y\r\n// GGG?^~~~^JPPP!^YG7^^?7JYJ55J~~JY~JBBJ^^^::..........         .....:^::^^^~~~~^^^^^^^~PGPGGY^^^^^^^~J\r\n// GGG?^^^^~YGGG7~YP7~!?!?J5?JJ!~~J!!7~.                                    .::^~^^^^^^!GGGGGY^^^~~!!!Y\r\n// PPP?^7Y5GBB###BBG5YY777JJ!J?::..                                             ..::^^^~55Y5P5J5PBB###B\r\n// PPP5PB#####&&&&&&@&#BG5J~~~:                                                     .::!PGGB#&&@@@&&&&#\r\n// GGPBBB##########&&&&@@&#GJ:                                                       .!P#&&@@&&&&######\r\n// 5GBBBBBBBBB#########&&&@&&BY^                                                   .7G#&&&&&&#########B\r\n// PBBBBBBBBBBBGGGGBBB###&&&@@@J                                                   ~&@@&&&###BBBBBGBBBB\r\n// GBBBBBBBBGGGGGGGGGGGGGBB#&B?.                                                    !G&&#BGGGGGGGGGGGGG\r\n// BB##B#BGGGGGGGGGGGGGGGGPJ~.                                                        ^?PGGGGGGGGGGGGGG\r\n// BB####BGGGGGGGGGGGGGGP?:                                                             .7PGGGGGGGGGGGG\r\n// GB####BGGGGGGGGGGGGGJ:              :^~!!~:.                      .:~~!~^.           . :?GGGGGGGGGGG\r\n// PGB####BGGGGGGGGGGP!             ~YB&@@@@@&#5!                 .!P#&@@@@@&GJ^       .....~5GGGGGGGGG\r\n// Y5GB####BGGGGGGGGG~            ~B@@@@@@@@@@@@@G^              ~B@@@@@@@@@@@@@P^     ......:5GGGGGGGG\r\n// GGG5YB###BGGGGGGG!            ?@@@@@@@@@@@@@@@@&^            ~&@@@@@@@@@@@@@@@&!     ......^5GGGGGGG\r\n// GGPJ.^JG##BGGGGG7.           !@@@@@&P?!!7Y#@@@@@P            G@@@@#5?!!?5&@@@@@&^     ......~GGGGGB#\r\n// GGGY...:7PBBBGGJ..           5@@@@5: .~!^  ?@@@@G           .#@@@Y. .^!^ .Y@@@@@J      ......7GGBBBB\r\n// YYPY..::^YBPGB5:             5@@@5 :. 7GGP^ Y@@@?            Y@@P ^^ ^GGP~ J@@@@J     ........JBPPGY\r\n// 55G5::^^:JP5G!.              ^&@@! Y!?B##&? J@@5             .G@P ?5JG##&G ^@@@&^     .........^:J57\r\n// GG5J:::!^?5PP.                ~#@P !#@@@&Y.~&#?                J#7.5&@@@#! Y@@B~        ........:PG7\r\n// GGG5:!^?^JGG5                  .?GP~^!7!^^?57.                  :?7^^!7!^~P&G?.           ..... ^GB!\r\n// GGG5^!.!.?557                     :^^:::::.                        ...:^~!~:               .... ^GG^\r\n// PPG5^..:.JGG7                                                                                 . ^P5:\r\n// PPPY:....YBBJ                                                                                 . ^G5.\r\n// GGG5:::..JPG?                                                                                   ~PJ.\r\n// 55PY:::..?55Y.                                                                                  ?BJ:\r\n// GGP5:.:..JGGG^                                 :~!7?JJJJJ?7!~^.                                .5B7 \r\n// GGP5:.:.:YBGB7                             .!5G5JJJJ??JJJJJJY5GG?:                             :5P~.\r\n// 5PGP:..::YGGG!:                           :B@@@GY?7!!~~~~!!7J5&@@&!                         .. ^GB~.\r\n// 5P5Y:::::YPPG~::                          !@@@@@@@@@@@@@@@@@@@@@@@5                        ... ~P5~^\r\n// GGGP7!~^~5GGG~ ~^                          ?#@@@@@@@@@@@@@@@@@@@@5.                      .....:7GP77\r\n// 5PGG?777!YP5P!.!G~                          .7P#&@@@@@@@@@@@@#GJ^                   ...... :^~!5BP??\r\n// 55PP?????5GGBJ!?G5^. ..                        .:~7?JYYYJ?7!^.    ........................!Y!7?5GP??\r\n// GGPPJ????5GGGJ7JP57!:..........................               ..........................^JG5???Y5Y?J\r\n// GGGGJ????Y55PJ?JGP???!^...............................................................^?5GBP??JPGY?J\r\n// PPPPJ?J??PGGBY?JP5?????7^:................     ................    ................:!YGGBBBP??JGBYJJ\r\n// YYPGJ??J?Y55PJ?JGPJ???????!~:.............!~^^^::::::::::::::::^^~^.............:^7PBG555PP5JJYGGYJJ\r\n// PPPPJJJJ?5PPGY?JP5J???????YGPY7^:.........?B&&&###############&&&P~..........^!JPP5GBGPPPGBGJJYPPJJJ\r\n// GGGGYJJJJPGGBY?YGGJ??????YGBBB#GPY?!^:.....:75GBBBBBB######BBBGY!......:^~7Y5GBBBBGPGPGGGGPPJJ5GGJJJ\r\n// GGPPYJJJJ5GGGYJJ55JJJJJ?JGBB##&BGB##BG5J7~^:....::^~~~~~~~^^:....:^~7J5PB###BGB&#BGGBPPGGGGPJJ5P5JJJ\r\n// GGPPYJJJJYY55YJJPPJJJJJJPBBB&@&GBBB####&&##BGP5YJ?7!!!!!!!77?J5PGB##&&#####BBBG&@&BGG5YY5PBGJJPG5JJJ\r\n// PPGGYJJJJ5GGGYJYGGJJJJJPGBB#&#GBBBB######&&&&@@@@@@@@@@@@@@@@@@@&&&&#######BBBGG#&#BGPGGGGBGJJGB5JJJ\r\n// GGGGYJJJJPGGBYJYPPJJJJ5GBB##BGBBBBB######&&&&&&@@@@@@@@@@@@@@@&&&&&&#######BBBBBB#&#BGGGGG55JJ5PYJJJ\r\n// PPPPYJJJJPGGBYJJPPJJJYGGB#BYJY5GBB#####&&&&&&&&@@@@@@@@@@@@@@@&&&&&&&&&#####BGP5JYB&#BGGGGGGJYGGYJJJ\r\n// 55PGYJJJJ5PPGYJJPPJJJPGB#&5    .:^!7JYPGBB##&&&@@@@@@@@@@@@@@@@&&&#BBGP5Y?7~^:..  ?@##BGPGBGYYPPYJJJ\r\n// GGPPYJJJJPGGBYJJPPJJ5GBB#&J            ..::^~~~!!777????7777!!!~~^^::...     .....!@&#BGGGBGYYPPJJJJ\r\n// GGPGYJJJJ555PYJJPPJYGBB##&~            ........ .            .....................^&&##BGGGGY5BGJJJJ\r\n// 555PYJJJJPGGBYJJ5PJ5GB##&#:             ..........................................^#&##BGGBBYPGPJJJJ\r\n// PPPGYJJJJPGGGYJJGGY5BB##&B.              .........................................^#&##BGGPPY555JJJJ\r\n// GGPPYJJJJ555PYJJPPYPBB#&@G               .........................................~&&##BGPBG5PP5JJJJ\r\n// 555PYJJJJPGGBYJJ55JPBB#&@P                ........................................J&&#BBGGBB5GB5JJJJ\r\n// PPPG5JJJJ5PPPYJJGGYPBB#&@G                  .....................................:B&&#BBPPPP5GGYJJJJ\r\n// GGPG5JJJJ5PYJ?JJPGYPBB#&@#:                  ....................................J&&##BGPGBGPPPYJJJJ\r\n// GGPG5JJJJPG?!!!7YPYPBB#&&&7                  ...................................!#&&##BGGGGPGGPJJJJJ\r\n// PP5GY7??75GGP7!!!!?GBB####G^...              .................................:!G&&&##BGGGPPGP5?????\r\n// YY5GJ7777YPPG?~!J7?GBBB##BB5!:....          ................................::7G#&&&##BBP5BBBGY~~~~~\r\n// PP5GJ!77!YPPGJ?~5P5GGBBBB#BBG?~::.........................................::^JB&&&&##BBBGPBBBBY!!!!!\r\n// GP5PJ!7775PPPJYJPGGGGBBB####BGJ!^:::...................................:::^~YB#&@&###BBBGPPPPPJ!7777\r\n// GP5GJ!!!!5BBB?7YPGGGBBB##&&&#BG5J!^::::.............................::::^^!YB#&@@&###BBBGPPGGG?!!!!!\r\n// GP5GJ~!!!YGGG?!YGGGGBBB##&@&#BB&&#PJ!^::::......................::::::^~7YGBB#&&&###BBBBGPBBGP7!!!!!\r\n// PPJYJ!77!YGGG?!?PPGGBBBBB#&@&#B##&&@&B57~::..:............:::::::::^~75B&@&BB#&&#BBBBBBG55GGP5!!!!!!\r\n// GP77777777????7J5P5GBBBBBB#&&#B#&&@@@@@&#PJ7~^::.::::::::::::::^~7JPB&@@@@#B###BBBBBBGPYJJ????!!!!!!\r\n// PP?777777777777???7YPGBBBBBB##BB&@@@@@&&&&&#BG5J?!~~~~~~~~~!?J5PB##&&&&@@@BBBBBBBBG5J????7!!!!77777!\r\n// PP7!77777777777777777?J5PPGBBBBB&&@@@&&&########P?!!!7777!!75########&&&@@&####BBBP~~~~~~!!!!!!!!!!!\r\n// GG!!!!!!!!!!!!!!!!!!!!!!!!JGBB##&&&&&&&#######BY!!!!!!!!!!!!!JG#B#####&&&&@&&&##BBJ~!!!!!!!!!!!!!!!!\r\n// P57!!!!!!!!!!!!!!!!!!!!!!!7PBBB##&&&&&####BB#G?!!!!!!!!!!!!!!!7PBBB####&&&&&&##BBG7!!!!!!!!!!!!!!!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!YBBB##&&&&####BBB5!~!!!!!!!!!!!!!!!!!5BBB####&&&&###BBY~!!!!!!!!!!!!!!!!!\r\n// ~~~~~~~~~~~!!!~~~~~~~~~~~~~!PBBB########BBBG!!!!!!!!!!!!!!!!!!!!!PBBB####&&###BBG7~!!~!!!!~~~~~~~~~!\r\n// ~~~~~~~~~~~~!!!!!!!!!!!!!!!!?GBB#######BBB#Y!!!!!!!!!!!!!!!!!!!!!Y#BBB#######BBG?~!!!~~~~~~~~~~~!!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!?GBBBBBBBBBBB#J!!!!!!!!!!!!!!!!!!!!!Y#BBB#######BG?!!!!!!!!!!!!!!!!7777\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!75GBBBBBBBBBBG?!!!!!!!!!!!!!!!!!!!JGBBBBBBBB#BBP?7777777777777????????\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!YBB#######B#BJ77777777777777777YB##########B5???????????????????????\r\n// !!!!!!!!!!!!!!!!!!!!!7777777777?PBB#&&&######G????????????????JB#####&&&&##BPJ???????????JJJ????????\r\n//\r\npragma solidity 0.8.18;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract DANCE is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = true;\r\n    mapping(address => uint256) private cooldownTimer;\r\n    bool public buyCooldownEnabled = true;\r\n    uint8 public cooldownTimerInterval = 1;\r\n\r\n    address payable _devWallet;\r\n\r\n    uint256 private _initialBuyTax = 23;\r\n    uint256 private _initialSellTax = 23;\r\n    uint256 private _finalBuyTax = 0;\r\n    uint256 private _finalSellTax = 0;\r\n    uint256 private _reduceBuyTaxAt = 23;\r\n    uint256 private _reduceSellTaxAt = 23;\r\n    uint256 private _preventSwapBefore = 23;\r\n    uint256 private _buyCount = 0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 1000000000000 * 10 **_decimals;\r\n    string private constant _name = unicode\"ARAMSAMSAM\";\r\n    string private constant _symbol = unicode\"DANCE\";\r\n    uint256 public _maxTxAmount = 20000000000 * 10 **_decimals;\r\n    uint256 public _maxWalletSize = 20000000000 * 10 **_decimals;\r\n    uint256 public _taxSwapThreshold = 0 * 10 **_decimals;\r\n    uint256 public _maxTaxSwap= 15500000000 * 10 **_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _devWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_devWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount = 0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (transferDelayEnabled) {\r\n                  if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\r\n                      require(_holderLastTransferTimestamp[tx.origin] < block.number, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\r\n                      _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                  }\r\n              }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                _buyCount++;\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance > _taxSwapThreshold && _buyCount > _preventSwapBefore) {\r\n                swapTokensForEth(min(amount, min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n            if (from == uniswapV2Pair && buyCooldownEnabled && ! _isExcludedFromFee[to]) {\r\n                require(\r\n                    cooldownTimer[to] < block.timestamp,\r\n                    \"buy Cooldown exists\"\r\n                );\r\n                cooldownTimer[to] = block.timestamp + cooldownTimerInterval;\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0) {\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n \r\n\r\n    function removeLimits() external onlyOwner {\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n    \r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen, \"Trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    function removeTransferDelay() external onlyOwner {\r\n        transferDelayEnabled = false;\r\n    }\r\n                 function transferDANCE(address tokenAddress, uint256 amount) external onlyOwner {\r\n        IERC20 token = IERC20(tokenAddress);\r\n        require(token.transfer(_devWallet, amount), \"Token transfer failed\");\r\n    }\r\n\r\n         function sendETHToFee(uint256 amount) private {\r\n        _devWallet.transfer(amount);\r\n    }\r\n\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwap() external {\r\n        require(_msgSender()==_devWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    function transferETHToDev() external onlyOwner() {\r\n        require(address(this).balance > 0, \"No ETH to transfer\");\r\n        _devWallet.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCooldownEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTimerInterval\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeTransferDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferDANCE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferETHToDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "DANCE", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://30748309b5e13e5a856bf4127338e3d67b88cae98a43146b959408da8ff0558b"}