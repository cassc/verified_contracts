{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/jkai241.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Interface for the Polygon Bridge Deposit contract\\r\\ninterface PolygonBridgeDeposit {\\r\\n    function deposit() external payable;\\r\\n}\\r\\n\\r\\n// Interface for the Polygon Bridge Withdrawal contract\\r\\ninterface PolygonBridgeWithdrawal {\\r\\n    function withdraw(uint256 amount) external;\\r\\n}\\r\\n\\r\\ncontract EthTransferWithPolygonBridge {\\r\\n\\r\\n    \\r\\n    mapping(address => uint256) public balances;\\r\\n\\r\\n    event Deposit(address indexed from, uint256 amount);\\r\\n    event Withdrawal(address indexed to, uint256 amount);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n\\r\\n    PolygonBridgeDeposit public polygonBridgeDepositContract;\\r\\n    PolygonBridgeWithdrawal public polygonBridgeWithdrawalContract;\\r\\n\\r\\n    constructor(address _polygonDepositContract, address _polygonWithdrawalContract) {\\r\\n        polygonBridgeDepositContract = PolygonBridgeDeposit(_polygonDepositContract);\\r\\n        polygonBridgeWithdrawalContract = PolygonBridgeWithdrawal(_polygonWithdrawalContract);\\r\\n    }\\r\\n\\r\\n    function deposit() external payable {\\r\\n        balances[msg.sender] += msg.value;\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 amount) external {\\r\\n        require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\r\\n        balances[msg.sender] -= amount;\\r\\n        payable(msg.sender).transfer(amount);\\r\\n        emit Withdrawal(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 amount) external {\\r\\n        require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\r\\n        balances[msg.sender] -= amount;\\r\\n        balances[to] += amount;\\r\\n        emit Transfer(msg.sender, to, amount);\\r\\n    }\\r\\n\\r\\n    function depositToPolygonBridge() external payable {\\r\\n        // Deposit ETH to Polygon Bridge Deposit contract\\r\\n        polygonBridgeDepositContract.deposit{value: msg.value}();\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdrawFromPolygonBridge(uint256 amount) external {\\r\\n        // Withdraw ETH from Polygon Bridge Withdrawal contract\\r\\n        polygonBridgeWithdrawalContract.withdraw(amount);\\r\\n        payable(msg.sender).transfer(amount);\\r\\n        emit Withdrawal(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function getBalance(address account) external view returns (uint256) {\\r\\n        return balances[account];\\r\\n    }\\r\\n}\\r\\n\\r\\n// contract EthTransfer {\\r\\n//     mapping(address => uint256) public balances;\\r\\n\\r\\n//     event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n\\r\\n//     function transfer(address to, uint256 amount) external {\\r\\n//         require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\r\\n//         balances[msg.sender] -= amount;\\r\\n//         balances[to] += amount;\\r\\n//         emit Transfer(msg.sender, to, amount);\\r\\n//     }\\r\\n\\r\\n//     function getBalance(address account) external view returns (uint256) {\\r\\n//         return balances[account];\\r\\n//     }\\r\\n// }\\r\\n\\r\\ncontract EthTransfer {\\r\\n    mapping(address => uint256) public balances;\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Deposit(address indexed from, uint256 amount);\\r\\n    event Withdrawal(address indexed to, uint256 amount);\\r\\n\\r\\n    function transfer(address to, uint256 amount) external {\\r\\n        require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\r\\n        balances[msg.sender] -= amount;\\r\\n        balances[to] += amount;\\r\\n        emit Transfer(msg.sender, to, amount);\\r\\n    }\\r\\n\\r\\n    function deposit() external payable {\\r\\n        require(msg.value > 0, \\\"Deposit amount must be greater than 0\\\");\\r\\n        balances[msg.sender] += msg.value;\\r\\n        emit Deposit(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 amount) external {\\r\\n        require(amount > 0, \\\"Withdrawal amount must be greater than 0\\\");\\r\\n        require(balances[msg.sender] >= amount, \\\"Insufficient balance\\\");\\r\\n        balances[msg.sender] -= amount;\\r\\n        payable(msg.sender).transfer(amount);\\r\\n        emit Withdrawal(msg.sender, amount);\\r\\n    }\\r\\n\\r\\n    function getBalance(address account) external view returns (uint256) {\\r\\n        return balances[account];\\r\\n    }\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "EthTransfer", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}