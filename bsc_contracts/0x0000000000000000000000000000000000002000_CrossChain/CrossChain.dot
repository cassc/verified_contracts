strict digraph {
subgraph cluster_IApplication {
  graph [label = "IApplication", style = "filled", color =
            "gray", bgcolor = "gray"]
    28 [ label = "handleSynPackage"]
    29 [ label = "handleAckPackage"]
    30 [ label = "handleFailAckPackage"]
}
subgraph cluster_ICrossChain {
  graph [label = "ICrossChain", style = "filled", color =
                    "gray", bgcolor = "gray"]
    31 [ label = "sendSynPackage"]
}
subgraph cluster_ILightClient {
  graph [label = "ILightClient", style = "filled", color =
                    "gray", bgcolor = "gray"]
    12 [ label = "getAppHash"]
    13 [ label = "getSubmitter"]
    32 [ label = "isHeaderSynced"]
}
subgraph cluster_IRelayerIncentivize {
  graph [label = "IRelayerIncentivize", style = "filled", color =
                    "gray", bgcolor = "gray"]
    14 [ label = "addReward"]
}
subgraph cluster_IRelayerHub {
  graph [label = "IRelayerHub", style = "filled", color =
                    "gray", bgcolor = "gray"]
    33 [ label = "isRelayer"]
}
subgraph cluster_Memory {
  graph [label = "Memory", style = "filled", color =
                    "gray", bgcolor = "gray"]
    0 [ label = "equals"]
    1 [ label = "toBytes"]
    2 [ label = "copy"]
    4 [ label = "dataPtr"]
    6 [ label = "fromBytes"]
    34 [ label = "compareStrings"]
    35 [ label = "ptr"]
    36 [ label = "toUint"]
    37 [ label = "toBytes32"]
}
subgraph cluster_BytesToTypes {
  graph [label = "BytesToTypes", style = "filled", color =
                    "gray", bgcolor = "gray"]
    18 [ label = "bytesToUint256"]
    38 [ label = "bytesToAddress"]
    39 [ label = "bytesToBool"]
    40 [ label = "getStringSize"]
    41 [ label = "bytesToString"]
    42 [ label = "bytesToBytes32"]
    43 [ label = "bytesToInt8"]
    44 [ label = "bytesToInt16"]
    45 [ label = "bytesToInt24"]
    46 [ label = "bytesToInt32"]
    47 [ label = "bytesToInt40"]
    48 [ label = "bytesToInt48"]
    49 [ label = "bytesToInt56"]
    50 [ label = "bytesToInt64"]
    51 [ label = "bytesToInt72"]
    52 [ label = "bytesToInt80"]
    53 [ label = "bytesToInt88"]
    54 [ label = "bytesToInt96"]
    55 [ label = "bytesToInt104"]
    56 [ label = "bytesToInt112"]
    57 [ label = "bytesToInt120"]
    58 [ label = "bytesToInt128"]
    59 [ label = "bytesToInt136"]
    60 [ label = "bytesToInt144"]
    61 [ label = "bytesToInt152"]
    62 [ label = "bytesToInt160"]
    63 [ label = "bytesToInt168"]
    64 [ label = "bytesToInt176"]
    65 [ label = "bytesToInt184"]
    66 [ label = "bytesToInt192"]
    67 [ label = "bytesToInt200"]
    68 [ label = "bytesToInt208"]
    69 [ label = "bytesToInt216"]
    70 [ label = "bytesToInt224"]
    71 [ label = "bytesToInt232"]
    72 [ label = "bytesToInt240"]
    73 [ label = "bytesToInt248"]
    74 [ label = "bytesToInt256"]
    75 [ label = "bytesToUint8"]
    76 [ label = "bytesToUint16"]
    77 [ label = "bytesToUint24"]
    78 [ label = "bytesToUint32"]
    79 [ label = "bytesToUint40"]
    80 [ label = "bytesToUint48"]
    81 [ label = "bytesToUint56"]
    82 [ label = "bytesToUint64"]
    83 [ label = "bytesToUint72"]
    84 [ label = "bytesToUint80"]
    85 [ label = "bytesToUint88"]
    86 [ label = "bytesToUint96"]
    87 [ label = "bytesToUint104"]
    88 [ label = "bytesToUint112"]
    89 [ label = "bytesToUint120"]
    90 [ label = "bytesToUint128"]
    91 [ label = "bytesToUint136"]
    92 [ label = "bytesToUint144"]
    93 [ label = "bytesToUint152"]
    94 [ label = "bytesToUint160"]
    95 [ label = "bytesToUint168"]
    96 [ label = "bytesToUint176"]
    97 [ label = "bytesToUint184"]
    98 [ label = "bytesToUint192"]
    99 [ label = "bytesToUint200"]
    100 [ label = "bytesToUint208"]
    101 [ label = "bytesToUint216"]
    102 [ label = "bytesToUint224"]
    103 [ label = "bytesToUint232"]
    104 [ label = "bytesToUint240"]
    105 [ label = "bytesToUint248"]
}
subgraph cluster_IParamSubscriber {
  graph [label = "IParamSubscriber", style = "filled", color =
                    "gray", bgcolor = "gray"]
    106 [ label = "updateParam"]
}
subgraph cluster_ISystemReward {
  graph [label = "ISystemReward", style = "filled", color =
                    "gray", bgcolor = "gray"]
    107 [ label = "claimRewards"]
}
subgraph cluster_System {
  graph [label = "System", style = "filled", color =
                    "gray", bgcolor = "gray"]
    20 [ label = "onlyNotInit"]
    21 [ label = "onlyInit"]
    22 [ label = "onlyRelayer"]
    27 [ label = "onlyGov"]
    108 [ label = "onlyCoinbase"]
    109 [ label = "onlySlash"]
    110 [ label = "onlyTokenHub"]
    111 [ label = "onlyValidatorContract"]
    112 [ label = "onlyCrossChainContract"]
    113 [ label = "onlyRelayerIncentivize"]
    114 [ label = "onlyTokenManager"]
    115 [ label = "isContract"]
}
subgraph cluster_MerkleProof {
  graph [label = "MerkleProof", style = "filled", color =
                    "gray", bgcolor = "gray"]
    3 [ label = "validateMerkleProof"]
}
subgraph cluster_CrossChain {
  graph [label = "CrossChain", style = "filled", color =
                    "gray", bgcolor = "gray"]
    5 [ label = "encodePayload"]
    7 [ label = "decodePayloadHeader"]
    8 [ label = "handlePackage"]
    9 [ label = "ILightClient"]
    10 [ label = "generateKey"]
    11 [ label = "IRelayerIncentivize"]
    15 [ label = "sendSynPackage"]
    16 [ label = "sendPackage"]
    17 [ label = "updateParam"]
    19 [ label = "init"]
    23 [ label = "sequenceInOrder"]
    24 [ label = "blockSynced"]
    25 [ label = "channelSupported"]
    26 [ label = "onlyRegisteredContractChannel"]
}
    0 -> 0 [ color = "blue" ]
    1 -> 2 [ color = "blue" ]
    3 -> 4 [ color = "red" ]
    3 -> 2 [ color = "red" ]
    3 -> 2 [ color = "red" ]
    3 -> 2 [ color = "red" ]
    5 -> 6 [ color = "red" ]
    5 -> 2 [ color = "red" ]
    7 -> 6 [ color = "red" ]
    7 -> 2 [ color = "red" ]
    8 -> 9 [ color = "blue" ]
    8 -> 10 [ color = "blue" ]
    8 -> 9 [ color = "blue" ]
    8 -> 7 [ color = "blue" ]
    8 -> 11 [ color = "blue" ]
    8 -> 3 [ color = "red" ]
    8 -> 12 [ color = "red" ]
    8 -> 13 [ color = "red" ]
    8 -> 14 [ color = "red" ]
    15 -> 16 [ color = "blue" ]
    15 -> 5 [ color = "blue" ]
    17 -> 18 [ color = "red" ]
    19 -> 20 [ color = "red" ]
    8 -> 21 [ color = "red" ]
    8 -> 22 [ color = "red" ]
    8 -> 23 [ color = "blue" ]
    8 -> 24 [ color = "blue" ]
    8 -> 25 [ color = "blue" ]
    15 -> 21 [ color = "red" ]
    15 -> 26 [ color = "blue" ]
    17 -> 27 [ color = "red" ]
	rankdir=LR
	node [shape=plantext]

}