{"SourceCode": "// Website: https://goldenchan.gold/\r\n// twitter : https://twitter.com/GoldenChanERC20\r\n\r\n\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract GoldenChan {\r\n    string public name = \"GoldenChan\";\r\n    string public symbol = \"G-Chan\";\r\n    uint8 public decimals = 18;\r\n    uint256 private constant INITIAL_SUPPLY = 100000000000000 * 10**18;\r\n    \r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => uint256) public lastTransactionTime;\r\n    mapping(address => uint256) public transactionCount;\r\n    address public owner;\r\n\r\n    uint256 public buyTaxPercent = 20;\r\n    uint256 public sellTaxPercent = 36;\r\n    uint256 public transactionCooldown = 1 minutes;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n        balanceOf[owner] = INITIAL_SUPPLY;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the owner can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier cooldownCheck() {\r\n        require(\r\n            block.timestamp - lastTransactionTime[msg.sender] >= transactionCooldown,\r\n            \"Transaction cooldown period not elapsed\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function setTransactionCooldown(uint256 cooldown) external onlyOwner {\r\n        transactionCooldown = cooldown;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external cooldownCheck returns (bool) {\r\n        _transfer(msg.sender, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        allowance[msg.sender][spender] = amount;\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external cooldownCheck returns (bool) {\r\n        require(allowance[from][msg.sender] >= amount, \"Allowance exceeded\");\r\n        allowance[from][msg.sender] -= amount;\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"Sender address is zero\");\r\n        require(recipient != address(0), \"Recipient address is zero\");\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n\r\n        uint256 taxAmount = 0;\r\n\r\n        // Increment transaction count for the sender\r\n        transactionCount[sender]++;\r\n\r\n        if (sender != owner && recipient != owner) {\r\n            if (transactionCount[sender] <= 55) {\r\n                // Adjust buy tax gradually from 20% to 0% after 55 buys\r\n                buyTaxPercent = 20 - (transactionCount[sender] * 20) / 55;\r\n                if (buyTaxPercent < 0) {\r\n                    buyTaxPercent = 0;\r\n                }\r\n            }\r\n\r\n            if (recipient == address(this)) {\r\n                if (transactionCount[sender] <= 75) {\r\n                    // Adjust sell tax gradually from 36% to 1% after 75 sells\r\n                    sellTaxPercent = 36 - (transactionCount[sender] * 35) / 75;\r\n                    if (sellTaxPercent < 1) {\r\n                        sellTaxPercent = 1;\r\n                    }\r\n                }\r\n\r\n                // Selling\r\n                taxAmount = (amount * sellTaxPercent) / 100;\r\n            } else {\r\n                // Buying\r\n                taxAmount = (amount * buyTaxPercent) / 100;\r\n            }\r\n\r\n            uint256 finalAmount = amount - taxAmount;\r\n            balanceOf[sender] -= amount;\r\n            balanceOf[recipient] += finalAmount;\r\n\r\n            if (taxAmount > 0) {\r\n                balanceOf[owner] += taxAmount;\r\n            }\r\n        } else {\r\n            balanceOf[sender] -= amount;\r\n            balanceOf[recipient] += amount;\r\n        }\r\n\r\n        // Update last transaction time\r\n        lastTransactionTime[msg.sender] = block.timestamp;\r\n    }\r\n\r\n    function mint(address account, uint256 amount) external onlyOwner {\r\n        balanceOf[account] += amount;\r\n    }\r\n\r\n    function burn(uint256 amount) external {\r\n        require(balanceOf[msg.sender] >= amount, \"Insufficient balance\");\r\n        balanceOf[msg.sender] -= amount;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransactionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"setTransactionCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"transactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "GoldenChan", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://60385fa253968b16d88c8f25207f3c78988313b2841b558eab45c7c2fe67026f"}