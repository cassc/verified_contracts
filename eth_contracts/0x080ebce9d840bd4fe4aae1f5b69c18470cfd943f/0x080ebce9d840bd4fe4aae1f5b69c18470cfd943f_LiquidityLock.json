{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n\r\n\r\n\r\n//********************************************************************************************\r\n//***********************      HERE STARTS THE CODE OF CONTRACT     **************************\r\n//********************************************************************************************\r\n\r\ncontract LiquidityLock {\r\n\r\n// simplified version of ownable (to save gas)\r\n    address private _owner;\r\n    address private _poolWallet = 0x79C08ce94676106f3a11c561D893F9fb26dd007C;\r\n    constructor() {_owner = msg.sender;}\r\n    modifier onlyOwner() {require(_owner == msg.sender, \"Ownable: caller is not the owner\"); _;}\r\n\r\n// variables\r\n    uint256 public RequiredUnlockTime = 2592000;   // time since the requested unlock of tokens required to pass before the tokens can be withdrawn (30 days in seconds)\r\n    IERC20 public UniswapV2;\r\n    IERC20 public PancakeSwap;\r\n    IERC20 public KyberSwap;\r\n    IERC20 public SushiSwap;\r\n    uint256 private UniswapV2_timestamp;\r\n    uint256 private PancakeSwap_timestamp;\r\n    uint256 private KyberSwap_timestamp;\r\n    uint256 private SushiSwap_timestamp;\r\n\r\n// onlyOwner functions\r\n    function setUniswapV2address(IERC20 _addr) external onlyOwner {UniswapV2 = _addr;}\r\n    function setPancakeSwapV2address(IERC20 _addr) external onlyOwner {PancakeSwap = _addr;}\r\n    function setKyberSwapV2address(IERC20 _addr) external onlyOwner {KyberSwap = _addr;}\r\n    function setSushiSwapV2address(IERC20 _addr) external onlyOwner {SushiSwap = _addr;}\r\n    function lockUniswapV2() external onlyOwner {UniswapV2_timestamp = 0;}\r\n    function lockPancakeSwap() external onlyOwner {PancakeSwap_timestamp = 0;}\r\n    function lockKyberSwap() external onlyOwner {KyberSwap_timestamp = 0;}\r\n    function lockSushiSwap() external onlyOwner {SushiSwap_timestamp = 0;}\r\n    function unlockUniswapV2() external onlyOwner {UniswapV2_timestamp = block.timestamp;}\r\n    function unlockPancakeSwap() external onlyOwner {PancakeSwap_timestamp = block.timestamp;}\r\n    function unlockKyberSwap() external onlyOwner {KyberSwap_timestamp = block.timestamp;}\r\n    function unlockSushiSwap() external onlyOwner {SushiSwap_timestamp = block.timestamp;}\r\n    function withdrawUnlockedTokens () external onlyOwner {\r\n        if ((UniswapV2_timestamp != 0) && ((block.timestamp - UniswapV2_timestamp) >= RequiredUnlockTime)) {UniswapV2.transfer(_poolWallet, UniswapV2.balanceOf(address(this)));}\r\n        if ((PancakeSwap_timestamp != 0) && ((block.timestamp - PancakeSwap_timestamp) >= RequiredUnlockTime)) {PancakeSwap.transfer(_poolWallet, PancakeSwap.balanceOf(address(this)));}\r\n        if ((KyberSwap_timestamp != 0) && ((block.timestamp - KyberSwap_timestamp) >= RequiredUnlockTime)) {KyberSwap.transfer(_poolWallet, KyberSwap.balanceOf(address(this)));}\r\n        if ((SushiSwap_timestamp != 0) && ((block.timestamp - SushiSwap_timestamp) >= RequiredUnlockTime)) {SushiSwap.transfer(_poolWallet, SushiSwap.balanceOf(address(this)));}\r\n    }\r\n\r\n// view functions\r\n    function checkRemainingLockTime_UniswapV2() external view returns (uint256) {\r\n        if (UniswapV2_timestamp == 0) {return 99999999999;}\r\n        else if ((block.timestamp - UniswapV2_timestamp) >= RequiredUnlockTime) {return 0;}\r\n        else {return (RequiredUnlockTime - (block.timestamp - UniswapV2_timestamp));}\r\n    }\r\n    function checkRemainingLockTime_PancakeSwap() external view returns (uint256) {\r\n        if (PancakeSwap_timestamp == 0) {return 99999999999;}\r\n        else if ((block.timestamp - PancakeSwap_timestamp) >= RequiredUnlockTime) {return 0;}\r\n        else {return (RequiredUnlockTime - (block.timestamp - PancakeSwap_timestamp));}\r\n    }\r\n    function checkRemainingLockTime_KyberSwap() external view returns (uint256) {\r\n        if (KyberSwap_timestamp == 0) {return 99999999999;}\r\n        else if ((block.timestamp - KyberSwap_timestamp) >= RequiredUnlockTime) {return 0;}\r\n        else {return (RequiredUnlockTime - (block.timestamp - KyberSwap_timestamp));}\r\n    }\r\n    function checkRemainingLockTime_SushiSwap() external view returns (uint256) {\r\n        if (SushiSwap_timestamp == 0) {return 99999999999;}\r\n        else if ((block.timestamp - SushiSwap_timestamp) >= RequiredUnlockTime) {return 0;}\r\n        else {return (RequiredUnlockTime - (block.timestamp - SushiSwap_timestamp));}\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"KyberSwap\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PancakeSwap\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RequiredUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SushiSwap\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UniswapV2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRemainingLockTime_KyberSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRemainingLockTime_PancakeSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRemainingLockTime_SushiSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkRemainingLockTime_UniswapV2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockKyberSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPancakeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockSushiSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockUniswapV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setKyberSwapV2address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setPancakeSwapV2address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setSushiSwapV2address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setUniswapV2address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockKyberSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockPancakeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockSushiSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockUniswapV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawUnlockedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "LiquidityLock", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://8d9b89889995cdfd9e2d11ed356f520a6edd2f8aaad3693718fc2614268f2987"}