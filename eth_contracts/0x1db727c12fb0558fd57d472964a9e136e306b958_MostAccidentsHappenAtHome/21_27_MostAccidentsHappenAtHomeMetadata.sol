// SPDX-License-Identifier: GPL-3.0
// presented by Wildxyz

pragma solidity ^0.8.17;

import {Strings} from '@openzeppelin/contracts/utils/Strings.sol';
import {Base64} from '@openzeppelin/contracts/utils/Base64.sol';
import {Math} from '@openzeppelin/contracts/utils/math/Math.sol';

contract MostAccidentsHappenAtHomeMetadata {

  uint16[256] private stability = [6,4,3,6,22,10,9,5,15,5,3,5,19,13,10,28,14,63,11,17,2,13,3,60,7,11,7,5,6,12,24,7,6,57,7,8,22,6,7,10,6,15,5,3,51,24,4,72,5,4,10,8,21,26,14,15,7,7,22,30,6,5,17,42,2,5,5,4,4,39,5,2,7,3,7,6,10,4,22,4,10,6,7,19,63,3,20,12,10,4,6,77,9,9,11,40,3,20,3,33,100,5,7,15,2,4,23,4,26,5,17,16,6,8,2,4,94,15,11,18,9,38,9,21,14,5,95,8,4,18,11,7,11,2,4,5,6,8,26,12,6,12,18,79,2,2,3,15,26,13,6,3,5,7,15,11,3,15,6,5,11,5,10,3,28,5,11,4,29,5,82,22,6,32,14,7,13,4,10,11,1,10,33,30,3,15,1,14,6,11,21,29,10,13,8,4,4,40,11,5,18,9,2,3,17,4,5,7,4,2,8,4,12,11,2,3,4,3,2,7,5,14,2,19,6,1,23,7,36,2,6,4,5,20,1,0,12,17,15,13,2,93,23,8,19,11,16,12,8,7,4,1,3,10,4,24];
  string[256] private baseItem = ["Chair","Bottle","Air conditioner","Table","Plate","Chair","Fridge","Stove top","Oven","Oven","Vase","Table","Table","Kettle","Couch","Cupboard","wine cooler","Pool Table","Glass","Table","Blender","Trampoline","Door","piano","Chair","Display Case","Bottle","Bottle","Locker","Bottle","Locker","Couch","Chair","Locker","Bath","Pram","Piano","Table","Table","Table","Jukebox","Table","Chair","Chair","Locker","Piano","Table","Door","Tray","Teapot","Locker","Couch","Seat","Table","Couch","Fridge","Couch","Couch","Couch","Chair","Bottle","Locker","Couch","Table","Chair","Chair","Couch","Daybed","Chair","Seat","Door","Chair","Table","Clock","Kettle","Table","Couch","Door","Locker","Trampoline","Cupboard","Table","Chimney Smoke Extractor","Table","Locker","Vase","Shelf","Chair","Piano","Coffee Machine","Day bed","Couch","Fridge","Jukebox","Kettle","Seat","Table","Chair","Chair","Piano","Piano","Piano","Chair","Seat","Locker","Plate","Kettle","Chair","Couch","Table","Chair","Couch","Chair","Bottle","Chair","Locker","Piano","Table","Couch","Couch","Bottle","Table","Fireplace","Table","TV Stand","Table","Table","Treadmill","Couch","Couch","Pram","Chest","Air conditioner","Bottle","Chair","Chair","Locker","Couch","Seat","Couch","Chair","Piano","Plate","Piano","Speaker","Vase","Table","Sofa","Treadmill","Chair","Oven","Seat","Coffee Pot","Fork","Couch","Nightstand","Chair","Table","Table","Teapot","Fridge","Vase","Teapot","Display Case","Cupboard","Coffee Machine","Chair","Chair","TV Stand","Door","Piano","Piano","Table","Table","Couch","Locker","Jukebox","Kettle","Pram","Sink","Mirror","Couch","Shelf","Wine cooler","Bottle","Table","Plate","Locker","Table","Air Purifier","Table","Locker","Oven","Chair","Chair","Rack","Couch","Jukebox","Couch","Door","Couch","Coffee Machine","Teapot","Table","Shelf","Chair","Locker","Oven","Vase","Monitor","TV Stand","Couch","Couch","Table","Chair","Table","Locker","Door","Table","Couch","Table","Couch","Glass","Couch","Wine cooler","Bottle","Treadmill","Piano","Table","Couch","Chair","Seat","Chair","Display Case","Chimney Smoke Extractor","Kettle","Chair","Chair","Chair","Table","Chair","Teapot","Couch","Shelf","Piano","Couch","Piano","Trampoline","Oven","Chair","Sink","Coffee Grinder","Teapot","Locker","Locker","Dishwasher"];
  string[256] private topItem = ["Juicebox","Table","Radiator","Glass","Bath","Juicebox","Lamp","Couch","Table","Pliers","Coffee Machine","Table","Bath","Chair","Door","Chair","piano","Video Camera","Stove Top","Hammer","Coffee Pot","Door","Kettle","teapot","Locker","Jar","Table","Clock","Chair","Chair","Oven","Chair","Door","Treadmill","Shelf","Monitor","Vase","Chair","Stove Top","Mirror","Couch","Fridge","Bottle","Lamp","Shelf","Bath","Wine cooler","Nightstand","Speaker","Table","Sink","Door","Table","Table","Rack","Chair","Teapot","Electric Screwdriver","Bath","Piano","Chair","Kettle","Bottle","Cup","Chair","Stove Top","Nightstand","Tray","Screwdriver","Couch","Sink","Chimney Smoke Extractor","Chair","Kettle","Chair","Seat","Window","Kettle","Kettle","Teapot","Video camera","Coffee Machine","Chair","Jug","Couch","Sink","Table","Bottle","Locker","Chair","Screwdriver","Locker","Vase","Plate","Table","Plates","Bottle","Table","Electric Screwdriver","Clock","Rack","Chair","Fridge","Table","Clock","Mirror","Table","TV","Bath","Chair","Door","Table","Chair","Guitar","Screwdriver","TV","Storage Box","Locker","TV","Seat","Chair","Door","Chair","Chair","Chair","Rack","Chair","Kettle","Water Cooler","Bottle","Table","Mug","Chair","Chair","Couch","Smart Phone","Oven","Nightstand","Couch","Water Cooler","Radiator","Locker","Chair","Chair","Vase","Table","Juicebox","Locker","Nightstand","Jar","Coffee Pot","Couch","Dishwasher","Shelf","Chair","Table","Stove top","Chair","Couch","Chair","Pliers","Vase","Locker","Chair","Binoculars","Bottle","Guitar","Bottle","Table","Chair","Stove Top","Armchair","TV","Couch","Pot","Chair","Table","Chair","Chair","Chair","Sink","Radiator","Table","Sink","Dishwasher","Chair","Guitar","Chair","Hammer","Coffee Pot","Chair","Locker","Chair","Door","Rack","Couch","Table","Pot","DVD Player","Pliers","Chair","Cup","Chair","Vase","Door","Chair","Sink","Clock","Vase","Mug","Couch","Door","Chair","Coffee Machine","Coffee Cup","Fork","Vase","Table","Rack","Seat","Video camera","Table","Chair","Shelf","Seat","Screwdriver","Nightstand","Teapot","Couch","Radiator","Bottle","Juicebox","Bottle","Chair","Bottle","Bottle","Chair","Chair","Vase","Air conditioner","Bottle","Piano","Screwdriver","Locker","Shovel","Screwdriver","Locker","Clock","Kitchen Rack","Table","Chair","Coffee Machine","Vase","Shovel","Vase","Shelf"];
  string[256] private stackingAlgo = ["Vertical","Branched","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Branched","Branched","Vertical","Arched","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Branched","Arched","Arched","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Branched","Vertical","Arched","Vertical","Arched","Arched","Arched","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Arched","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Arched","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Branched","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Arched","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Vertical","Branched","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Branched","Arched","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Branched","Vertical","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Vertical","Arched","Arched","Branched","Vertical","Vertical","Arched","Branched","Vertical","Vertical","Arched","Branched","Branched","Vertical","Branched","Vertical","Vertical","Vertical","Vertical","Arched","Vertical","Vertical","Vertical","Vertical","Branched","Vertical"];
  string[256] private backgroundColour = ["e3e3e3","e4d0d9","dbdfe2","d5d9e2","d9d9d9","dddcda","e3d7db","dadedd","d9d1dc","d9d1dc","e4d0d9","dddfde","dfd6d9","dddfde","dedde2","e3dddf","e4d5da","e3c1cf","e4d0d9","dfd6d9","e4e0c5","d5d9e2","d5d9e2","d9d1dc","dddfde","dddfde","e4d1d7","dfd6d9","e3e3e3","e4d0d9","e3e3e3","dbdfe2","c5d2da","dadedd","e4e0c5","dedde2","d9d1dc","e4d5da","e4e0c5","d3deda","e4d1d7","e3e0d7","dadedd","cfe1d3","cfe1d3","dedde2","d9d9d9","e3c1cf","e3e3e3","d9d9d9","e4d1d7","dddcda","e4d5da","e3c1cf","e3d5ca","e2e1dc","cbd9e2","e3d7db","e4d1d7","e3dddf","e4e0c5","e3d7db","e3c1cf","dfd6d9","e4d5da","dfd6d9","e2e1dc","cfe1d3","e2e1dc","e2e1dc","c5d2da","d5d9e2","dedde2","dedde2","e3e3e3","dedde2","e4d0d9","dddcda","e3e0d7","d4dde4","dbdfe2","dddfde","ced6e3","cfe1d3","dedde2","e4d0d9","d9d1dc","d9d1dc","dddcda","cbd9e2","e4d0d9","d4dde4","ced6e3","e3c1cf","e3d7db","dedde2","e3dddf","e2e1dc","dddcda","c5d2da","dadedd","c5d2da","d3deda","d9d9d9","dedde2","dbdfe2","e3c1cf","d4dde4","e4d5da","e3d7db","e4d0d9","dbdfe2","e3d5ca","d9d1dc","cfe1d3","d3deda","d3deda","e3d7db","e4d5da","d5d9e2","e3d5ca","e2e1dc","e2e1dc","e3c1cf","c5d2da","e3e0d7","e3e0d7","d9d9d9","e3e0d7","d9d9d9","dddfde","ced6e3","dadedd","dbdfe2","d3deda","c5d2da","dedde2","dbdfe2","e3d7db","ced6e3","c5d2da","e2e1dc","cfe1d3","d5d9e2","d5d9e2","e4d0d9","e3c1cf","dddcda","dddfde","c5d2da","d9d1dc","c5d2da","e4d0d9","d3deda","e3d5ca","cfe1d3","e3d7db","dbdfe2","e2e1dc","e2e1dc","e4d0d9","e3d5ca","dfd6d9","e4d5da","dadedd","c5d2da","c5d2da","e3e3e3","e2e1dc","dddfde","e4d5da","e4e0c5","dddcda","dddcda","e3e3e3","cfe1d3","cbd9e2","d9d1dc","d9d9d9","e4d1d7","d9d1dc","dddcda","c5d2da","d3deda","d4dde4","e3e0d7","e3c1cf","dfd6d9","e3e0d7","e3e0d7","e3e0d7","dbdfe2","e4d5da","e3dddf","e3d7db","dddcda","dddcda","dfd6d9","d5d9e2","cbd9e2","dddcda","ced6e3","dadedd","cfe1d3","c5d2da","d4dde4","d5d9e2","d4dde4","dedde2","e3e3e3","d4dde4","e3d5ca","d3deda","dddcda","dfd6d9","d4dde4","c5d2da","dadedd","e4e0c5","e3e0d7","dddfde","d9d9d9","dfd6d9","c5d2da","dedde2","dbdfe2","e3e0d7","e3d7db","dedde2","dddcda","d5d9e2","dadedd","d3deda","dfd6d9","e4e0c5","dadedd","d5d9e2","dadedd","e3d5ca","e3e3e3","e3e0d7","e3e0d7","e3d7db","d9d1dc","d3deda","d4dde4","e3e0d7","cbd9e2","e4d5da","e3d5ca","e4d5da","e3dddf","dfd6d9","c5d2da","d9d9d9","dfd6d9"];
  uint16[256] private items = [6,6,5,5,5,4,5,5,4,5,5,6,4,4,5,6,5,5,5,5,5,5,7,5,5,6,4,6,5,5,4,5,5,5,4,5,6,4,6,5,4,4,4,5,5,5,6,5,5,5,5,7,5,5,5,6,6,7,6,4,5,6,7,5,5,5,5,7,5,5,4,5,5,5,4,5,5,4,4,6,5,5,7,5,5,4,5,5,5,5,5,5,6,5,5,5,5,4,5,5,4,5,4,7,5,7,6,5,6,5,5,5,5,5,5,7,5,4,8,5,6,5,5,5,5,6,5,7,4,5,6,7,5,7,4,4,6,7,5,5,5,4,8,5,5,5,4,5,5,5,7,7,5,7,6,5,5,5,5,5,5,5,4,7,4,5,4,6,5,5,4,5,4,7,5,4,7,6,7,7,4,5,5,5,4,4,5,5,6,6,6,5,6,5,5,5,5,5,9,6,5,4,4,7,5,4,5,4,5,4,5,5,4,5,4,6,7,5,6,5,7,5,5,5,5,4,6,5,4,4,9,7,6,7,5,4,7,4,4,4,5,4,5,4,7,4,4,5,5,6,4,5,7,5,7,5];

  function getAllMetadataForTokenId(uint256 _index) public view returns (string[] memory) {
    string[] memory data = new string[](6);
    data[0] = baseItem[_index];
    data[1] = topItem[_index];
    data[2] = stackingAlgo[_index];
    data[3] = Strings.toString(items[_index]);
    data[4] = backgroundColour[_index];
    data[5] = Strings.toString(stability[_index]);
    return data;
  }

  // tokenURI function returns json metadata for the token
  function generateTokenURI(uint256 tokenId, string memory baseURI, string memory tokenToToppledURI, string memory itemsDropped, bool tokenToToppled) public view returns (string memory) {
    string memory imgUrl = 'https://static.wild.xyz/tokens/unrevealed/assets/unrevealed.webp';
    string memory attributesStr = '';
    string memory animationUrl = '';
    string memory tokenIdStr = Strings.toString(tokenId);

    if (bytes(baseURI).length > 0) {

      // image: baseUri + tokenId + "/image.jpg"
      {
        imgUrl = string(abi.encodePacked(baseURI, tokenIdStr, '/image.jpg'));
        // animation_url: baseUri + tokenId + "/index.html"
        animationUrl = string(abi.encodePacked(baseURI, tokenIdStr, '/index.html'));
      }

      {
        // Stability, Collapsed, Base Item, Top Item, Stacking Algo,Items, Item Dropped, Background Color
        string[] memory data = getAllMetadataForTokenId(tokenId);

        string memory toppled = 'False';
        string memory itemDropped = 'N/A';
        if (tokenToToppled) {
          toppled = 'True';
          itemDropped =  itemsDropped;
          // image: tokenToToppledURI[tokenId] + "image.jpg"
          imgUrl = string(abi.encodePacked(tokenToToppledURI, 'image.jpg'));
          // animation_url: tokenToToppledURI[tokenId]  + "index.html"
          animationUrl = string(abi.encodePacked(tokenToToppledURI, 'index.html'));
        }
        string memory attributesStr1 = string(abi.encodePacked(',"attributes":[{"trait_type":"Collapsed","value":"', toppled, '"}, {"trait_type": "Item Dropped", "value": "', itemDropped, '"}, {"trait_type": "Items", "value":"', data[3], '"}, {"trait_type": "Base Item", "value":"', data[0], '"}, {"trait_type": "Top Item", "value":"'));
        attributesStr = string(abi.encodePacked(attributesStr1, data[1], '"},{"trait_type": "Stacking Algo", "value":"', data[2], '"},  {"trait_type": "Background", "value":"', data[4], '"},  {"trait_type": "Stability", "value":"', data[5], '"}]'));
      }       
    }
    
    string memory json;
    {
      string memory name = string(abi.encodePacked('Most Accidents Happen at Home #', tokenIdStr));
      string memory description = 'Most Accidents Happen at Home is a collection of 3D artworks that explores the dissonance between real and imagined physics across both tangible and virtual environments. Each artwork is composed of a series of teetering towers of common household objects arranged in seemingly impossible or maybe just highly improbable balancing configurations. Wading through the tension between perceived improbability, Most Accidents Happen at Home is concerned with finding the boundaries and limits of what we consider real vs. artificial in the world. Each piece is uniquely generated from a broad library of common household items and stand perfectly balanced. However, as soon as the artist (or anyone in his family) drops something at home, one of the stacks topples through an on-chain event. Through the on-chain event the artist will share an image of what was dropped, and its aftermath - was it a cup of tea, perhaps a plate full of food? Most Accidents Happen at Home is positioned as a way to be a bit more mindful about keeping track of things and for the artist do his very best to not accidentally drop things at home.';
      string memory externalUrl = string.concat('https://wild.xyz/jonas-lund/most-accidents-happen-at-home/', tokenIdStr);
      
      json = Base64.encode(bytes(abi.encodePacked('{"name":"', name, '", "description": "', description, '", "image": "', imgUrl, '", "animation_url": "', animationUrl, '", "external_url": "', externalUrl, '"', attributesStr, '}')));
    }
    return string(abi.encodePacked('data:application/json;base64,', json));
  }

}