{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/TeamRevShare.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract Splitter {\\n    uint256 public constant PRECISION = 100_00;\\n\\n    // Addresses for distribution\\n    address public ZKitty;\\n    address public ClipFinance;\\n\\n    // Proportions\\n    uint256 public currentZKittyProportion;\\n    uint256 public currentClipFinanceProportion;\\n\\n    // For multi-signature proportion change\\n    uint256 public customZKittyProportion;\\n    uint256 public customClipFinanceProportion;\\n\\n    // Basic Multisig\\n    bool public ZKittyAgree;\\n    bool public ClipFinanceAgree;\\n\\n    constructor(\\n        address _ZKitty,\\n        address _ClipFinance,\\n        uint256 _ZKittyProportion\\n    ) {\\n        ZKitty = _ZKitty;\\n        ClipFinance = _ClipFinance;\\n\\n        currentZKittyProportion = _ZKittyProportion;\\n        currentClipFinanceProportion = PRECISION - _ZKittyProportion;\\n    }\\n\\n    function setAddress(address _newAddress) external {\\n        if (msg.sender == ZKitty) {\\n            ZKitty = _newAddress;\\n        } else if (msg.sender == ClipFinance) {\\n            ClipFinance = _newAddress;\\n        } else {\\n            revert(\\\"Not authorized\\\");\\n        }\\n    }\\n\\n    function activatePhaseTwo() external {\\n        require(\\n            msg.sender == ZKitty || msg.sender == ClipFinance,\\n            \\\"Not Allowed!\\\"\\n        );\\n        currentZKittyProportion = 6000;\\n        currentClipFinanceProportion = 4000;\\n    }\\n\\n    function setCustomFee(\\n        uint256 _customZKittyProportion,\\n        uint256 _customClipFinanceProportion\\n    ) external {\\n        require(\\n            msg.sender == ZKitty || msg.sender == ClipFinance,\\n            \\\"Not Allowed!\\\"\\n        );\\n        require(\\n            _customZKittyProportion + _customClipFinanceProportion <= PRECISION,\\n            \\\"Invalid proportion\\\"\\n        );\\n        ZKittyAgree = false;\\n        ClipFinanceAgree = false;\\n        customZKittyProportion = _customZKittyProportion;\\n        customClipFinanceProportion = _customClipFinanceProportion;\\n    }\\n\\n    function approveChange() external {\\n        if (msg.sender == ZKitty) {\\n            ZKittyAgree = true;\\n        } else if (msg.sender == ClipFinance) {\\n            ClipFinanceAgree = true;\\n        } else {\\n            revert(\\\"Not authorized\\\");\\n        }\\n        if (ZKittyAgree == true && ClipFinanceAgree == true) {\\n            ZKittyAgree = false;\\n            ClipFinanceAgree = false;\\n            currentZKittyProportion = customZKittyProportion;\\n            customClipFinanceProportion = customClipFinanceProportion;\\n        }\\n    }\\n\\n    function distribute() public {\\n        uint256 balance = address(this).balance;\\n\\n        uint256 ZKittyAmount = (balance * currentZKittyProportion) / PRECISION;\\n        uint256 ClipFinanceAmount = balance - ZKittyAmount;\\n\\n        // Sending to ZKitty\\n        (bool successZKitty, ) = ZKitty.call{value: ZKittyAmount}(\\\"\\\");\\n        require(successZKitty, \\\"Transfer to ZKitty failed\\\");\\n\\n        // Sending to ClipFinance\\n        (bool successClipFinance, ) = ClipFinance.call{\\n            value: ClipFinanceAmount\\n        }(\\\"\\\");\\n        require(successClipFinance, \\\"Transfer to ClipFinance failed\\\");\\n    }\\n\\n    // Fallback and receive functions\\n    fallback() external payable {\\n        distribute();\\n    }\\n\\n    receive() external payable {\\n        distribute();\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ZKitty\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ClipFinance\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ZKittyProportion\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ClipFinance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ClipFinanceAgree\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZKitty\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZKittyAgree\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activatePhaseTwo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentClipFinanceProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentZKittyProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customClipFinanceProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"customZKittyProportion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_customZKittyProportion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_customClipFinanceProportion\",\"type\":\"uint256\"}],\"name\":\"setCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Splitter", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000cad3e8a8a2d3959a90674ada99feade204826202000000000000000000000000dc12ea64fbe3a96a4ac47113f63e42d6de162a770000000000000000000000000000000000000000000000000000000000001d4c", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}