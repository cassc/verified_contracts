{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n    ____  _______  __ ___    ____   ____  __          \r\n   / __ \\/ ____/ |/ //   |  /  _/  / __ \\/ /_  _______\r\n  / / / / __/  |   // /| |  / /   / /_/ / / / / / ___/\r\n / /_/ / /___ /   |/ ___ |_/ /   / ____/ / /_/ (__  ) \r\n/_____/_____//_/|_/_/  |_/___/  /_/   /_/\\__,_/____/  \r\n        -- Coded for DexAI.PLUS with \u2764\ufe0f by CC.DID.BI\r\n\r\n\u8be5\u4ee3\u7801\u662f\u7528\u4e8eDEXAI+\u2122\ufe0f\u673a\u5668\u4eba\u6838\u5fc3\u7a0b\u5e8f\u5728\u786e\u4fdd\u7528\u6237\u8d44\u91d1\u5b89\u5168\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u7684\u4ea4\u6613\u5176\u63a5\u53e3\u5b9e\u73b0\u81ea\u52a8\u5316\u4ea4\u6613\u7684\u5408\u7ea6\u3002\r\n\r\n\u8be5\u4ee3\u7801\u6d89\u53ca\u5b89\u5168\u7684\u6838\u5fc3\u53d8\u91cf\u5728\u53d1\u5e03\u540e\uff08\u6216\u8005\u7ecf\u8fc7onlyOneTimeConf\u65b9\u6cd5\u521d\u59cb\u5316\u540e\uff09\u5747\u4e0d\u53ef\u4ee5\u4fee\u6539:\r\n\r\n\u7ba1\u7406\u5458\u6743\u9650:\r\n\r\n    \u7ba1\u7406\u5458\u6743\u9650\uff08\u4f9b AI Core \u7a0b\u5e8f\u8c03\u7528\uff0c\u867d\u7136\u7ba1\u7406\u5458\u7684\u6743\u9650\u6781\u4e3a\u6709\u9650\uff0c\u7edd\u5bf9\u4e0d\u53ef\u80fd\u5e26\u6765\u672c\u91d1\u635f\u5931\uff0c\u4f46\u662f\u51fa\u4e8e\u4ece\u4ee3\u7801\u4e0a100%\u786e\u5b9a\u673a\u5668\u4eba\u548c\u76f8\u5173\u8d44\u4ea7\u7684\u6240\u6709\u6743\uff0c\u51fa\u8d44\u4eba\u53ef\u4ee5\u968f\u65f6\u6536\u56de\u7ba1\u7406\u5458\u6743\u9650\uff09:\r\n    1.swapFunction \u65b9\u6cd5\u53d1\u8d77\u4ea4\u6613\uff0c\u4e14\u5151\u6362\u6240\u5f97\u7684\u76ee\u6807\u5730\u5740\u4e3a\u9ed8\u8ba4\u503c\uff08\u5373\u672c\u5408\u7ea6\u672c\u8eab\u7684\u5730\u5740\uff09\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n    \u4ea4\u6613\u7684\u76ee\u6807\u5730\u5740\u767d\u540d\u5355:\r\n    targetWhiteListA\u3001B\u3001C:\r\n    0xbCe268B24155dF2a18982984e9716136278f38d6\uff08\u7b2c\u4e09\u65b9\u805a\u5408\u4ea4\u6613\u5668\u7684\u5408\u7ea6\u5730\u5740\uff09\r\n    0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE\uff08\u7b2c\u4e09\u65b9\u805a\u5408\u4ea4\u6613\u5668\u7684\u5408\u7ea6\u5730\u5740\uff09\r\n    0x0000000000000000000000000000000000000000\uff08\u591a\u94fe\u5c01\u88c5\u5e01\u8de8\u94fe\u9500\u6bc1\u7684\u96f6\u5730\u5740\uff09\r\n    2.withdrawToken \u6309\u7167\u7ea6\u5b9a\u6bd4\u4f8b\u5206\u53d1\u4f59\u989d\u3002\r\n    3.\u5176\u4ed6\u4e0d\u6d89\u53ca\u672c\u91d1\u5b89\u5168\u7684\u5199\u65b9\u6cd5\u6743\u9650\u8bf7\u770b\u6ce8\u91ca\u3002\r\n    \r\n\u51fa\u8d44\u4eba\u6743\u9650:\r\n\r\n    setAdmin \u51fa\u8d44\u4eba\u53ef\u4ee5\u8bbe\u5b9a\u65b0\u7684\u7ba1\u7406\u5458\uff08\u89e6\u53d1\u8be5\u65b9\u6cd5\u7684\u540c\u65f6\uff0c\u65e7\u7684\u7ba1\u7406\u5458\u5373\u523b\u4f5c\u5e9f\uff09\u3002\r\n\r\n\u514d\u8d23\u58f0\u660e:\r\n\r\n    \u4e0a\u8ff0\u4ea4\u6613\u7684\u76ee\u6807\u5730\u5740\u767d\u540d\u5355\u6240\u6d89\u53ca\u7684\u7b2c\u4e09\u65b9\u5408\u7ea6\u7684\u5b89\u5168\u6027\u8bba\u8ff0\u8bf7\u8be6\u7ec6\u9605\u8bfb\u5176\u6587\u6863\uff0cDEXAI.PLUS \u9ed8\u8ba4\u4f7f\u7528\u8005\u8ba4\u53ef\u8be5\u6587\u6863\u8bba\u8ff0\u5185\u5bb9\u7684\u6b63\u786e\u6027\u6216\u8005\u9009\u62e9\u4fe1\u4efb\u5176\u6240\u5217\u5ba1\u8ba1\u673a\u6784\u7684\u4e13\u4e1a\u6027\u4e0e\u516c\u6b63\u6027\uff0cDEXAI.PLUS \u4ece\u672a\u4e5f\u6c38\u8fdc\u4e0d\u4f1a\u4e3a\u4efb\u4f55\u7b2c\u4e09\u65b9\u534f\u8bae\u7684\u5b89\u5168\u6027\u505a\u4efb\u4f55\u5f62\u5f0f\u7684\u4fdd\u8bc1\u3002\r\n    \u82e5\u4f60\u65e0\u6cd5\u63a5\u53d7\u4ee5\u4e0a\u58f0\u660e\u7684\u5185\u5bb9\uff0c\u60a8\u4f9d\u7136\u6709\u4e24\u4e2a\u9009\u62e9:\r\n    1.\u81ea\u884c\u63d0\u4f9b\u4f60\u4fe1\u4efb\u7684\u7b2c\u4e09\u65b9\u805a\u5408\u4ea4\u6613\u5668\u5408\u7ea6\u5730\u5740\u53ca\u5176ABI\u3002\r\n    2.\u653e\u5f03\u4f7f\u7528DEXAI PLUS\u7684\u4efb\u4f55\u670d\u52a1\u3002\r\n\r\n\u7279\u522b\u8bf4\u660e:\u672c\u5408\u7ea6\u4e3a DEXAI.Plus \u5b89\u5168\u5f3a\u5316\u7248\uff0cwithdrawToken \u7684\u65b9\u6cd5\u4e0e DEXAI.Plus \u65e9\u671f\u516c\u5171\u7248\uff08\u9010\u6b65\u5f03\u7528\u4e2d\uff09\u5b58\u5728\u5dee\u5f02\u3002 \r\n\r\n\u7f16\u8bd1\u73af\u5883: \r\n\r\n    https://remix.ethereum.org/#lang=en&optimize=true&runs=200&version=soljson-v0.8.20+commit.a1b79de6.js&evmVersion=shanghai\r\n\r\n\u4e00\u81f4\u6027\u6821\u9a8c:\u8bf7\u81ea\u884c\u6309\u7167\u6307\u5b9a\u7f16\u8bd1\u53c2\u6570\u8bbe\u7f6e\u4f60\u7684\u7f16\u8bd1\u73af\u5883\u540e\uff0c\u5b8c\u6210\u7f16\u8bd1\u3002\u5c06\u5f97\u5230\u7684Bytecode\uff08\u7f16\u8bd1\u7ed3\u679c\uff09\u4e0e\u60a8\u79c1\u6709\u5408\u7ea6\u5730\u5740\u5728\u533a\u5757\u6d4f\u89c8\u5668\u4e0a\u663e\u793a Bytecode \u8fdb\u884c\u4e00\u81f4\u6027\u6bd4\u5bf9\uff0c\u786e\u4fdd\u4e00\u81f4\u5219\u81f3\u5c11\u80fd\u8bc1\u660e\u4f60\u5f53\u524d\u770b\u5230\u7684\u6e90\u4ee3\u7801\u4e0e\u4f60\u79c1\u6709\u5408\u7ea6\u5730\u5740\u7684\u6e90\u7801\u5185\u5bb9\u5b8c\u5168\u4e00\u81f4\u3002\u786e\u4fdd\u4ee3\u7801\u4e00\u81f4\u6027\uff0c\u662f\u4f60\u8bc4\u4f30\u4ee3\u7801\u5b89\u5168\u6027\u7684\u524d\u63d0\u3002\r\n\r\n\u4ee3\u5e01\u6388\u6743:\r\n\r\n    \u6388\u6743\u4ea4\u6613\u7684\u4ee3\u5e01\u5408\u7ea6:\u6839\u636e\u9700\u8981\u81ea\u884c\u6388\u6743\u5404\u79cd\u4ee3\u5e01\uff0c\u76ee\u524dDEXAI PLUS\u4e3b\u8981\u9488\u5bf9:weth9\u3001weth10\u3001interETH\u3001wETH.Fi(wETH20)\u3001Aave WETH (aWETH)\u3001interBTC\u3001wBTC\u7b49\u5c01\u88c5\u5e01\u8fdb\u884c\u4f18\u5316\u3002\r\n\r\n    \u6388\u6743\u4ea4\u6613\u7684\u4ee3\u5e01\u6570\u91cf:\u4e3a\u907f\u514d\u9891\u7e41\u51fa\u73b0\u6388\u6743\u989d\u5ea6\u4e0d\u8db3\u5efa\u8bae\u4e0d\u4f4e\u4e8e10000\u679a\uff0c\u8fdb\u884c\u6388\u6743\u5373\u4ee3\u8868\u9601\u4e0b\u80fd\u7406\u89e3\u6216\u5145\u5206\u4fe1\u4efb\u672c\u5408\u7ea6\u8db3\u4ee5\u4fdd\u8bc1\u9601\u4e0b\u8d44\u91d1\u5b89\u5168\u3002\r\n\r\n**/\r\n\r\npragma solidity  = 0.8.20;\r\n\r\ninterface ERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transferFrom(address src,address dst,uint256 amount) external returns (bool);\r\n    function allowance(address src,address dst) external returns (uint256);\r\n}\r\n\r\ninterface IThirdPartyContract {\r\n    struct ILiFiBridgeData {\r\n        uint256 minAmount;\r\n        uint256 receivedAmount;\r\n    }\r\n\r\n    struct LibSwapSwapData {\r\n        address callTo;\r\n        address approveTo;\r\n        address sendingAssetId;\r\n        address receivingAssetId;\r\n        uint256 fromAmount;\r\n        bytes callData;\r\n        bool requiresDeposit;\r\n    }\r\n\r\n    struct HopData {\r\n        uint256 bonderFee;\r\n        uint256 amountOutMin;\r\n        uint256 deadline;\r\n        uint256 destinationAmountOutMin;\r\n        uint256 destinationDeadline;\r\n        address hopBridge;\r\n    }\r\n\r\n    function swapAndStartBridgeTokensViaHopL1ERC20(\r\n        ILiFiBridgeData memory _bridgeData,\r\n        LibSwapSwapData[] calldata _swapData,\r\n        HopData calldata _hopData\r\n    ) external payable;\r\n}\r\n\r\n\r\ncontract DEXBotPlus {\r\n    address public admin;\r\n    address public targetContractAddressA; \r\n    address public targetContractAddressB; \r\n\r\n    address public addressA;\r\n    address public addressB;\r\n    address public addressC;\r\n    address public addressD;\r\n    address public addressE;\r\n    address public addressDev;\r\n    uint256 public costA;\r\n    uint256 public costB;\r\n    uint256 public costC;\r\n    uint256 public costD;\r\n    uint256 public costE;\r\n    uint256 public lineOfBurn = 1000000000000000000;\r\n\r\n    address public swapper;\r\n    address   targetWhiteListA = 0xbCe268B24155dF2a18982984e9716136278f38d6;\r\n    address   targetWhiteListB = 0x1231DEB6f5749EF6cE6943a275A1D3E7486F4EaE;\r\n    address   targetWhiteListC = address(0);\r\n\r\n    event TokensSwapped(address indexed tokenA, address indexed tokenB, address indexed user, uint256 amount);\r\n    event TokensWithdrawn(address indexed token, address indexed user, uint256 amount);\r\n    IThirdPartyContract bridgeProxy;\r\n\r\n    //\u6784\u9020\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u53ea\u80fd\u5728\u53d1\u5e03\u5408\u7ea6\u65f6\u6267\u884c\u4e00\u6b21\uff0c\u4e14\u6240\u6709\u8d4b\u503c\u5747\u5728\u4ee3\u7801\u4e2d\u660e\u6587\u5b8c\u6210\uff0c\u6bcf\u4e2a\u7528\u6237\u72ec\u7acb\u8bbe\u7f6e\u3002\r\n    constructor() {\r\n        admin = msg.sender;//\u5408\u7ea6\u53d1\u5e03\u8005\u4e3a\u7ba1\u7406\u5458\uff0c\u7ba1\u7406\u5458\u7531DEXBot Plus\u6838\u5fc3AI\u63a7\u5236\uff0c\u53ea\u6709\u5411\u4e0d\u53ef\u7be1\u6539\u7684\u4ea4\u6613\u805a\u5408\u5668\u4ee3\u7406\u5730\u5740\u53d1\u8d77\u4ea4\u6613\u3002\r\n\r\n\r\n        swapper  = address(0);//\u51fa\u8d44\u4eba\u5730\u5740\u3002        \r\n        addressA = address(0);//\u5206\u6da6\u5730\u5740A\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressB = address(0);//\u5206\u6da6\u5730\u5740B\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressC = address(0);//\u5206\u6da6\u5730\u5740C\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressD = address(0);//\u5206\u6da6\u5730\u5740D\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressE = address(0);//\u5206\u6da6\u5730\u5740E\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        costA = lineOfBurn; costB = lineOfBurn; costC = lineOfBurn; costD = lineOfBurn; costE = lineOfBurn;\r\n\r\n        addressDev = 0x78c0F0fF1d9b36F53FEa77312BB4465073399999;\r\n        \r\n\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"This function only for owner!\");\r\n        _;\r\n    }\r\n    //\u51fa\u8d44\u4eba\u6743\u9650\uff0c\u6536\u56de\u73b0\u6709\u7ba1\u7406\u5458\u7684\u6743\u9650\uff0c\u5e76\u8d4b\u4e88\u65b0\u7528\u6237\u7ba1\u7406\u5458\u6743\u9650\r\n    function setAdmin(address _admin) external {\r\n        require(msg.sender == swapper, \"This function only for owner!\");\r\n        admin = _admin;\r\n    }\r\n\r\n    //\u7ba1\u7406\u5458\u6743\u9650\uff08\u9884\u7559\u4f9bAI Core\u4fee\u6539\u5404\u7ea7\u63a8\u8350\u4eba\u6295\u8d44\u989d\u6570\u503c\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u5b9e\u73b0\u70e7\u4f24\u4e0e\u5426\u4e0e\u70e7\u4f24\u503c\u4e0e\u672a\u6765\u63a8\u8350\u4eba\u6295\u8d44\u53d8\u52a8\u540c\u6b65\uff09\r\n    function setRefCost(uint256 _costA,uint256 _costB,uint256 _costC,uint256 _costD,uint256 _costE) public onlyAdmin {\r\n        costA = _costA;\r\n        costB = _costB;\r\n        costC = _costC;\r\n        costD = _costD;\r\n        costE = _costE;\r\n    }\r\n\r\n    function onlyOneTimeConf(address _swapper, address _addressA, address _addressB, address _addressC, address _addressD, address _addressE)external onlyAdmin {\r\n        require(swapper == address(0), \"This function only can be used once!\");\r\n        swapper  = _swapper;\r\n        addressA = _addressA;//\u5206\u6da6\u5730\u5740A\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressB = _addressB;//\u5206\u6da6\u5730\u5740B\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressC = _addressC;//\u5206\u6da6\u5730\u5740C\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressD = _addressD;//\u5206\u6da6\u5730\u5740D\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n        addressE = _addressE;//\u5206\u6da6\u5730\u5740E\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002\r\n\r\n    }\r\n\r\n    struct SwapData {\r\n        uint256 minAmount;\r\n        uint256 receivedAmount;\r\n        address callTo;\r\n        address approveTo;\r\n        address sendingAssetId;\r\n        address receivingAssetId;\r\n        uint256 fromAmount;\r\n        bytes callData;\r\n        bool requiresDeposit;\r\n        uint256 bonderFee;\r\n        uint256 amountOutMin;\r\n        uint256 deadline;\r\n        uint256 destinationAmountOutMin;\r\n        uint256 destinationDeadline;\r\n        address hopBridge;\r\n    }\r\n\r\n\r\n\r\n    function swapFunction(\r\n        address _tokenA,\r\n        address _tokenB,\r\n        address _targetContractAddress,\r\n        uint256 _amount,\r\n        bytes memory _callData\r\n    ) external onlyAdmin {\r\n        require ((_targetContractAddress == targetWhiteListA)||\r\n        (_targetContractAddress == targetWhiteListB)||\r\n        (_targetContractAddress == targetWhiteListC));\r\n        uint256 amount;\r\n        if(_amount==0){\r\n            amount=ERC20(_tokenA).balanceOf(swapper);\r\n        }else{\r\n            amount=_amount;\r\n        }\r\n\r\n        address toAddress = address(this);\r\n\r\n        if(_callData.length > 0){\r\n\r\n        SwapData memory swapData = SwapData({\r\n            minAmount: _amount,\r\n            receivedAmount: 0,\r\n            callTo: _targetContractAddress,\r\n            approveTo: toAddress,\r\n            sendingAssetId: _tokenA,\r\n            receivingAssetId: _tokenB,\r\n            fromAmount: 1,\r\n            callData: _callData, \r\n            requiresDeposit: false,\r\n            bonderFee: 0,\r\n            amountOutMin: 0,\r\n            deadline: 0,\r\n            destinationAmountOutMin: 0,\r\n            destinationDeadline: 3000000,\r\n            hopBridge: _targetContractAddress\r\n        });\r\n\r\n        IThirdPartyContract.ILiFiBridgeData memory bridgeData = IThirdPartyContract.ILiFiBridgeData({\r\n            minAmount: swapData.minAmount,\r\n            receivedAmount: swapData.receivedAmount\r\n        });\r\n\r\n\r\n        // \u6784\u9020 _swapData\r\n        IThirdPartyContract.LibSwapSwapData[] memory swapArray = new IThirdPartyContract.LibSwapSwapData[](1);\r\n        swapArray[0] = IThirdPartyContract.LibSwapSwapData({\r\n            callTo: swapData.callTo,\r\n            approveTo: swapData.approveTo,\r\n            sendingAssetId: swapData.sendingAssetId,\r\n            receivingAssetId: swapData.receivingAssetId,\r\n            fromAmount: swapData.fromAmount,\r\n            callData: swapData.callData,\r\n            requiresDeposit: swapData.requiresDeposit\r\n        });\r\n\r\n        // \u6784\u9020 _hopData\r\n        IThirdPartyContract.HopData memory hopData = IThirdPartyContract.HopData({\r\n            bonderFee: swapData.bonderFee,\r\n            amountOutMin: swapData.amountOutMin,\r\n            deadline: swapData.deadline,\r\n            destinationAmountOutMin: swapData.destinationAmountOutMin,\r\n            destinationDeadline: swapData.destinationDeadline,\r\n            hopBridge: swapData.hopBridge\r\n        });\r\n\r\n        bridgeProxy = IThirdPartyContract(_targetContractAddress);\r\n\r\n\r\n        // \u8c03\u7528\u76ee\u6807\u5408\u7ea6\u7684\u65b9\u6cd5\r\n        bridgeProxy.swapAndStartBridgeTokensViaHopL1ERC20(\r\n            bridgeData,\r\n            swapArray,\r\n            hopData\r\n        );\r\n\r\n        }\r\n\r\n        require(ERC20(_tokenA).balanceOf(swapper) >= amount);\r\n        require(ERC20(_tokenA).allowance(swapper,address(this))>= amount);\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u76ee\u6807\u5408\u7ea6\u5730\u5740\r\n        require(ERC20(_tokenA).transferFrom(swapper,_targetContractAddress,amount), \"Swap failed\");\r\n        emit TokensSwapped(_tokenA,_tokenB,swapper,amount);\r\n    }\r\n\r\n    function setRefCostAndwithdrawToken(uint256 _costA,uint256 _costB,uint256 _costC,uint256 _costD,uint256 _costE, address _token, uint256 _cost, uint256 _exProfit)external onlyAdmin{\r\n        setRefCost( _costA, _costB, _costC, _costD, _costE);\r\n        withdrawToken( _token,  _cost,  _exProfit);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function withdrawToken(address _token, uint256 _cost, uint256 _exProfit) public onlyAdmin {\r\n        ERC20 token = ERC20(_token);\r\n        uint256 balance = token.balanceOf(address(this));\r\n        require (_cost <= balance);\r\n        uint256 profit  = balance - _cost;\r\n        require (profit <= ( balance * 2)/100);//\u5229\u6da6\u4e0a\u9650\u5236\u9501\uff1b\r\n        uint256 basicProfit = profit - _exProfit;\r\n        \r\n        uint256 amountToSwapper = (basicProfit * 60) / 100 + _cost;\r\n        amountToSwapper = (_exProfit * 40) / 100 + amountToSwapper;\r\n        uint256 amountA = 0;\r\n        if(addressA!=address(0)){\r\n             amountA = (basicProfit * 6) / 100;\r\n             if((costA<lineOfBurn)&&(costA<_cost)){\r\n                 amountA = (amountA * costA) /_cost;\r\n             }else{\r\n                amountA = (_exProfit * 40) / 100 + amountA;\r\n             }\r\n        }\r\n        uint256 amountB = 0;\r\n        if(addressB!=address(0)){\r\n             amountB = (basicProfit * 5) / 100;\r\n             if((costB<lineOfBurn)&&(costB<_cost)){\r\n                 amountB = (amountB * costB) /_cost;\r\n             }\r\n        }\r\n        uint256 amountC = 0;\r\n        if(addressC!=address(0)){\r\n             amountC = (basicProfit * 4) / 100;\r\n             if((costC<lineOfBurn)&&(costC<_cost)){\r\n                 amountC = (amountC * costC) /_cost;\r\n             }\r\n        }\r\n        uint256 amountD = 0;\r\n        if(addressD!=address(0)){\r\n             amountD = (basicProfit * 3) / 100;\r\n             if((costD<lineOfBurn)&&(costD < _cost)){\r\n                 amountD = (amountD * costD) /_cost;\r\n             }\r\n        }\r\n        uint256 amountE = 0;\r\n        if(addressE!=address(0)){\r\n             amountE = (basicProfit * 2) / 100;\r\n             if((costE<lineOfBurn)&&(costE < _cost)){\r\n                 amountE = (amountE * costE) /_cost;\r\n             }\r\n        }\r\n        uint256 amountDev = balance -  amountA - amountB -  amountC -  amountD -  amountE - amountToSwapper;\r\n\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u4ea4\u6362\u5730\u5740\r\n        require(token.transfer(swapper, amountToSwapper), \"Transfer failed\");\r\n        emit TokensWithdrawn(_token, swapper, amountToSwapper);\r\n        \r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740A\r\n        if((addressA!=address(0))&&(amountA>0)){\r\n            require(token.transfer(addressA, amountA), \"Transfer failed\");\r\n            emit TokensWithdrawn(_token, addressA, amountA);\r\n        }\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740B\r\n        if((addressB!=address(0))&&(amountB>0)){\r\n            require(token.transfer(addressB, amountB), \"Transfer failed\");\r\n            emit TokensWithdrawn(_token, addressB, amountB);\r\n        }\r\n\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740C\r\n        if((addressC!=address(0))&&(amountC>0)){\r\n            require(token.transfer(addressC, amountC), \"Transfer failed\");\r\n            emit TokensWithdrawn(_token, addressC, amountC);\r\n        }\r\n\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740D\r\n        if((addressD!=address(0))&&(amountD>0)){\r\n            require(token.transfer(addressD, amountD), \"Transfer failed\");\r\n            emit TokensWithdrawn(_token, addressD, amountD);\r\n        }\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740E\r\n        if((addressE!=address(0))&&(amountE>0)){\r\n        require(token.transfer(addressE, amountE), \"Transfer failed\");\r\n        emit TokensWithdrawn(_token, addressE, amountE);\r\n        }\r\n        // \u5c06\u4ee3\u5e01\u8f6c\u79fb\u5230\u5730\u5740Dev\r\n        if((addressDev!=address(0))&&(amountDev>0)){\r\n            require(token.transfer(addressDev, amountDev), \"Transfer failed\");\r\n            emit TokensWithdrawn(_token, addressDev, amountDev);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressDev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"costE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lineOfBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapper\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressD\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressE\",\"type\":\"address\"}],\"name\":\"onlyOneTimeConf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_costA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costE\",\"type\":\"uint256\"}],\"name\":\"setRefCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_costA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costC\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_costE\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exProfit\",\"type\":\"uint256\"}],\"name\":\"setRefCostAndwithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_targetContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_callData\",\"type\":\"bytes\"}],\"name\":\"swapFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContractAddressA\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContractAddressB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exProfit\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DEXBotPlus", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://cef09e09d74c3327737b295283b447f392e9298ae19be8e216d23ec2edf71689"}