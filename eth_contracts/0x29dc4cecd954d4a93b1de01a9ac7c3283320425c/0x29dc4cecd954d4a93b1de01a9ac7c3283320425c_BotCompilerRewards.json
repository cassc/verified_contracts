{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity >= 0.8.7;\r\n\r\ncontract BotCompilerRewards {\r\n    address private _owner;\r\n\r\n    mapping(address => uint256) public amountsClaimable;\r\n    mapping(address => uint256) public totalRewards;\r\n\r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == _owner, \"only owner.\");\r\n        _;\r\n    }\r\n\r\n    function claim() public {\r\n        uint256 amount = amountsClaimable[msg.sender];\r\n        require(amount > 0, \"nothing to claim.\");\r\n        amountsClaimable[msg.sender] = 0;\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    function myTotalRewards() public view returns (uint256) {\r\n        return totalRewards[msg.sender];\r\n    }\r\n\r\n    function myClaimableRewards() public view returns (uint256) {\r\n        return amountsClaimable[msg.sender];\r\n    }\r\n\r\n    function addRewards(address[] memory recipients, uint256[] memory amounts) public payable onlyOwner {\r\n        require(recipients.length == amounts.length, \"invalid input.\");\r\n        uint256 total = 0;\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            amountsClaimable[recipients[i]] += amounts[i];\r\n            totalRewards[recipients[i]] += amounts[i];\r\n            total += amounts[i];\r\n        }\r\n        require(msg.value >= total, \"not enough funds.\");\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function recoverFunds() public onlyOwner {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountsClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myClaimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myTotalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BotCompilerRewards", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4c933d50fa02d8e377c5c1fb2b5ed41466da081a7382526793f8c07d97e96f9c"}