{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract BatchTransfer {\r\n    function distribute(address[] calldata recipients, uint256[] calldata amounts) external payable {\r\n        require(recipients.length == amounts.length, \"Recipients and amounts arrays must be the same length\");\r\n\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            require(address(this).balance >= amounts[i], \"Insufficient contract balance\");\r\n            payable(recipients[i]).transfer(amounts[i]);\r\n        }\r\n    }\r\n\r\n    // Fallback function to receive ETH\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BatchTransfer", "CompilerVersion": "v0.8.25+commit.b61c2a91", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7d8aabb140b704e93777b08c679937a18ba01ce9941f178615d5be3bb0f0f896"}