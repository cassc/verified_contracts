{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract DonationContract {\r\n    address public owner;\r\n    uint256 public maxDonation = 0.25 ether;\r\n    uint256 public cap = 30 ether;\r\n    uint256 public totalReceived;\r\n    mapping(address => bool) public donors;\r\n\r\n    constructor() {\r\n        owner = 0xB5F97F9E147589e03CFA49850a64172c353fBB87;\r\n    }\r\n\r\n    // Modifier to restrict the access to the owner only\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    // Function to receive donations\r\n    receive() external payable {\r\n        require(totalReceived + msg.value <= cap, \"Pre-sale Cap Reached\");\r\n        require(msg.value <= maxDonation, \"Donation Exceeds Max Limit\");\r\n        require(!donors[msg.sender], \"Already Deposit\");\r\n\r\n        totalReceived += msg.value;\r\n        donors[msg.sender] = true;\r\n\r\n        // Forward the funds to the owner\r\n        payable(owner).transfer(msg.value);\r\n    }\r\n\r\n    // Function for the owner to withdraw funds (for safety, though funds are forwarded upon donation)\r\n    function withdraw() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No funds to withdraw\");\r\n        payable(owner).transfer(balance);\r\n    }\r\n\r\n    // Function to check the contract's current balance (total ETH received)\r\n    function getBalance() public view returns (uint256) {\r\n        return totalReceived;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "DonationContract", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0edec895555847fa24f2e55154338910c4659edcfb089c3d0deac4b94040e28d"}