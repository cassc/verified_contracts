{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\ncontract Bulksender {\r\n    address private _owner;\r\n    \r\n    constructor() {\r\n        _owner = msg.sender;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function bulksendToken(IERC20 _token, address[] memory _to, uint256[] memory _values) external onlyOwner {\r\n        require(_to.length == _values.length);\r\n        for (uint256 i = 0; i < _to.length; i++) {\r\n            require(_token.transfer(_to[i], _values[i]));\r\n        }\r\n    }\r\n    function bulksendTokenSingleValue(IERC20 _token, uint256 _value, address[] memory _to) external onlyOwner {\r\n        require(_value > 0);\r\n        for (uint256 i = 0; i < _to.length; i++) {\r\n            require(_token.transfer(_to[i], _value));\r\n        }\r\n    }\r\n    function withdraw(IERC20 _token) external onlyOwner {\r\n        require(_token.transfer(msg.sender, _token.balanceOf(address(this))));\r\n    }\r\n    function setOwner(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0));\r\n        _owner = _newOwner;\r\n    }\r\n    function getOwner() external view returns (address) {\r\n        return _owner;\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"bulksendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"}],\"name\":\"bulksendTokenSingleValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Bulksender", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "2000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b02858de2c9f0149faa18c758aa257e39aa1b2956e869c7f45e709b098b2c19c"}