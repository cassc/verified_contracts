{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/erc721/custom/BitRot/SplitFunds.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.10;\\n\\ncontract SplitFunds {\\n    function split(address payable[] calldata recipients, uint256[] calldata amounts) external payable {\\n        uint256 recipientsLength = recipients.length;\\n        require(recipientsLength == amounts.length, \\\"ii\\\");\\n\\n        uint256 totalAmount = 0;\\n\\n        for (uint256 i = 0; i < recipientsLength; i++) {\\n            (bool sentToRecipient, bytes memory data) = recipients[i].call{ value: amounts[i] }(\\\"\\\");\\n            totalAmount += amounts[i];\\n            require(sentToRecipient, \\\"fs\\\");\\n        }\\n        require(totalAmount == msg.value, \\\"lc\\\");\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"split\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "SplitFunds", "CompilerVersion": "v0.8.10+commit.fc410830", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}