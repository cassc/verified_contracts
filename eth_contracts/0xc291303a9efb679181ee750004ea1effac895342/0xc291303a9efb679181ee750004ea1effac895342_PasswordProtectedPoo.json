{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"/eth_kasma/contracts/HelloWorld.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n// Deployed with the Atlas IDE\\n// https://app.atlaszk.com\\n\\npragma solidity ^0.8.0;\\n\\ncontract PasswordProtectedPool {\\n    address payable public owner;\\n    string private constant PASSWORD = \\\"Baka240445\\\";\\n    uint256 public poolBalance;\\n\\n    constructor() {\\n        owner = payable(msg.sender);\\n    }\\n\\n    function deposit(string memory password) public payable {\\n        require(keccak256(abi.encodePacked(password)) == keccak256(abi.encodePacked(PASSWORD)), \\\"Incorrect password\\\");\\n        poolBalance += msg.value;\\n    }\\n\\n    function withdraw(uint256 amount, string memory password) public {\\n        require(keccak256(abi.encodePacked(password)) == keccak256(abi.encodePacked(PASSWORD)), \\\"Incorrect password\\\");\\n        require(poolBalance >= amount, \\\"Insufficient balance in the pool\\\");\\n\\n        poolBalance -= amount;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n\\n    function getPoolBalance() public view returns (uint256) {\\n        return poolBalance;\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"libraries\": {},\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PasswordProtectedPool", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}