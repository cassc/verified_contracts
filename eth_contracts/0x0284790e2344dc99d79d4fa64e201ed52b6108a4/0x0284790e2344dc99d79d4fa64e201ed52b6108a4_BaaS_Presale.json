{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/BaaS_Presale.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"./interfaces/IBull20.sol\\\";\\nimport \\\"./interfaces/IToken.sol\\\";\\nimport \\\"./interfaces/IRateProvider.sol\\\";\\nimport \\\"./interfaces/Stage.sol\\\";\\nimport \\\"./helpers/Holder.sol\\\";\\n\\ncontract BaaS_Presale is Holder {\\n    event SetInstanceAddressEvent(address indexed instance);\\n    event SendEthToInstance(uint256 value);\\n    event BuyEvent();\\n    event StatusEvent(bool enabled);\\n    event SetRateProviderEvent(address indexed rateProvider);\\n    event EditStageEvent(uint indexed index, uint256 priceUSD, uint256 expectedValue);\\n    event DeleteLastStageEvent();\\n    event AirdropEvent();\\n    event WithdrawEvent();\\n\\n    address private _instance;\\n\\n    function setInstanceAddress(address instance) onlyHolder external {\\n        require(instance.code.length != 0, \\\"Invalid contract\\\");\\n        _instance = instance;\\n        emit SetInstanceAddressEvent(instance);\\n    }\\n\\n    function getInstanceAddress() external view returns (address) {\\n        return _instance;\\n    }\\n\\n    function _getInstance() private view returns (IBull20) {\\n        address inst = _instance;\\n        require(inst != address(0x0), \\\"Instance is not configured\\\");\\n        return IBull20(inst);\\n    }\\n\\n    // public overrides\\n\\n    function holders() external view returns (address[] memory) {\\n        return _getInstance().holders();\\n    }\\n\\n    function enabled() external view returns (bool) {\\n        return _getInstance().enabled();\\n    }\\n\\n    function rateProvider() external view returns (IRateProvider) {\\n        return _getInstance().rateProvider();\\n    }\\n\\n    function stages() public view returns (Stage[] memory) {\\n        return _getInstance().stages();\\n    }\\n\\n    function activeStage() public view returns (Stage memory) {\\n        return _getInstance().activeStage();\\n    }\\n\\n    function totalRaised() external view returns (uint256) {\\n        return _getInstance().totalRaised();\\n    }\\n\\n    function presaleAmount(address _wallet) external view returns (uint256) {\\n        return _getInstance().presaleAmount(_wallet);\\n    }\\n\\n    // user overrides\\n\\n    function buy(uint256 amount, address token) external payable {\\n        _getInstance().buy(amount, token, msg.value, msg.sender);\\n\\n        if (address(this).balance == 0) {\\n            return;\\n        }\\n\\n        payable(_instance).transfer(address(this).balance);\\n    }\\n\\n    // owner overrides\\n\\n    function disable() external onlyHolder {\\n        emit StatusEvent(false);\\n        return _getInstance().disable();\\n    }\\n\\n    function enable() external onlyHolder {\\n        emit StatusEvent(true);\\n        return _getInstance().enable();\\n    }\\n\\n    function setRateProvider(address rateProvider_) public onlyHolder {\\n        emit SetRateProviderEvent(rateProvider_);\\n        return _getInstance().setRateProvider(rateProvider_);\\n    }\\n\\n    function addStage(uint256 priceUSD, uint256 expectedValue) external onlyHolder returns (Stage memory) {\\n        Stage memory stage = _getInstance().addStage(priceUSD, expectedValue);\\n        return stage;\\n    }\\n\\n    function addStages(uint256[] memory prices, uint256[] memory expectedValues) external onlyHolder {\\n        return _getInstance().addStages(prices, expectedValues);\\n    }\\n\\n    function editStage(uint index, uint256 priceUSD, uint256 expectedValue) external onlyHolder returns (Stage memory) {\\n        emit EditStageEvent(index, priceUSD, expectedValue);\\n        return _getInstance().editStage(index, priceUSD, expectedValue);\\n    }\\n\\n    function deleteLastStage() external onlyHolder {\\n        emit DeleteLastStageEvent();\\n        return _getInstance().deleteLastStage();\\n    }\\n\\n    function airdrop(address wallet, uint256 amount) external onlyHolder {\\n        emit AirdropEvent();\\n        return _getInstance().airdrop(wallet, amount);\\n    }\\n\\n    function airdropMany(address[] memory wallets, uint256[] memory amounts) external onlyHolder {\\n        emit AirdropEvent();\\n        return _getInstance().airdropMany(wallets, amounts);\\n    }\\n\\n    function withdraw() external onlyHolder payable {\\n        emit WithdrawEvent();\\n        return _getInstance().withdraw(holder());\\n    }\\n}\"\r\n    },\r\n    \"contracts/helpers/Holder.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nabstract contract Holder {\\n    event ChangeHolderEvent(address holder);\\n\\n    address private _holder;\\n\\n    constructor() {\\n        _setHolder(msg.sender);\\n    }\\n\\n    function changeHolder(address newHolder) external virtual onlyHolder {\\n        require(newHolder != address(0), \\\"New holder is the zero address\\\");\\n        _setHolder(newHolder);\\n    }\\n\\n    modifier onlyHolder() {\\n        _checkHolder();\\n        _;\\n    }\\n\\n    function holder() public view virtual returns (address) {\\n        return _holder;\\n    }\\n\\n    function _checkHolder() internal view virtual {\\n        require(holder() == msg.sender, \\\"Caller is not the holder\\\");\\n    }\\n\\n    function _setHolder(address newHolder) internal virtual {\\n        _holder = newHolder;\\n        emit ChangeHolderEvent(newHolder);\\n    }\\n}\"\r\n    },\r\n    \"contracts/interfaces/IBull20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\nimport \\\"./IRateProvider.sol\\\";\\nimport \\\"./IToken.sol\\\";\\nimport \\\"./Stage.sol\\\";\\n\\ninterface IBull20 {\\n    // public\\n\\n    function holders() external view returns (address[] memory);\\n\\n    function enabled() external view returns (bool);\\n\\n    function rateProvider() external view returns (IRateProvider);\\n\\n    function stages() external view returns (Stage[] memory);\\n\\n    function activeStage() external view returns (Stage memory);\\n\\n    function totalRaised() external view returns (uint256);\\n\\n    function presaleAmount(address _wallet) external view returns (uint256);\\n\\n    // user\\n\\n    function buy(uint256 amount, address token, uint256 msgValue, address msgSender) external payable;\\n\\n    function disable() external;\\n\\n    function enable() external;\\n\\n    function setRateProvider(address rateProvider_) external;\\n\\n    function addStage(uint256 priceUSD, uint256 expectedValue) external returns (Stage memory);\\n\\n    function addStages(uint256[] memory prices, uint256[] memory expectedValues) external;\\n\\n    function editStage(uint index, uint256 price, uint256 expectedValue) external returns (Stage memory);\\n\\n    function deleteLastStage() external;\\n\\n    function airdrop(address wallet, uint256 amount) external;\\n\\n    function airdropMany(address[] memory wallets, uint256[] memory amounts) external;\\n\\n    function withdraw(address holder) external payable;\\n}\"\r\n    },\r\n    \"contracts/interfaces/IRateProvider.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\ninterface IRateProvider {\\n    function getAmountForUSD(address token, uint256 usd) external view returns (uint256);\\n\\n    function tokens() external view returns (address[] memory);\\n}\"\r\n    },\r\n    \"contracts/interfaces/IToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\ninterface IToken {\\n    function decimals() external view returns (uint8);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n}\\n\"\r\n    },\r\n    \"contracts/interfaces/Stage.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.18;\\n\\n    struct Stage {\\n        uint index;\\n        uint256 price; // usd\\n        uint256 expectedValue;  // usd\\n        uint256 raisedValue; // usd\\n    }\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[],\"name\":\"AirdropEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BuyEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"ChangeHolderEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DeleteLastStageEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceUSD\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"}],\"name\":\"EditStageEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SendEthToInstance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"SetInstanceAddressEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rateProvider\",\"type\":\"address\"}],\"name\":\"SetRateProviderEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"StatusEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WithdrawEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activeStage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedValue\",\"type\":\"uint256\"}],\"internalType\":\"struct Stage\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"}],\"name\":\"addStage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedValue\",\"type\":\"uint256\"}],\"internalType\":\"struct Stage\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expectedValues\",\"type\":\"uint256[]\"}],\"name\":\"addStages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"airdropMany\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newHolder\",\"type\":\"address\"}],\"name\":\"changeHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteLastStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"}],\"name\":\"editStage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedValue\",\"type\":\"uint256\"}],\"internalType\":\"struct Stage\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInstanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"presaleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateProvider\",\"outputs\":[{\"internalType\":\"contract IRateProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"setInstanceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rateProvider_\",\"type\":\"address\"}],\"name\":\"setRateProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stages\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raisedValue\",\"type\":\"uint256\"}],\"internalType\":\"struct Stage[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "BaaS_Presale", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}