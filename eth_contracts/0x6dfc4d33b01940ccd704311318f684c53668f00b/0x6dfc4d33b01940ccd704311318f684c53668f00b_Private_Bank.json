{"SourceCode": "pragma solidity ^0.4.24;\r\n\r\ncontract Private_Bank {\r\n    mapping(address => uint256) balances;\r\n    uint256 public MinDeposit = 0.1 ether;  // Just assuming this, as it's not provided\r\n    Log TransferLog;\r\n\r\n    function Private_Bank(address _log) public { \r\n        TransferLog = Log(_log); \r\n    } \r\n\r\n    function Deposit() public payable { \r\n        if(msg.value >= MinDeposit) { \r\n            balances[msg.sender] += msg.value; \r\n            TransferLog.AddMessage(\"Deposit\"); \r\n        } \r\n    } \r\n\r\n    function CashOut(uint _am) public { \r\n        if(_am <= balances[msg.sender]) { \r\n            if(msg.sender.call.value(_am)()) { \r\n                balances[msg.sender] -= _am; \r\n                TransferLog.AddMessage(\"CashOut\"); \r\n            } \r\n        } \r\n    }\r\n} \r\n\r\ncontract Log {\r\n    struct Message {\r\n        uint256 Time;\r\n        string Data;\r\n    }\r\n\r\n    Message[] public History;\r\n    Message public LastMsg;\r\n\r\n    function AddMessage(string _data) public { \r\n        LastMsg.Time = now; \r\n        LastMsg.Data = _data; \r\n        History.push(LastMsg); \r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"MinDeposit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_am\",\"type\":\"uint256\"}],\"name\":\"CashOut\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_log\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]", "ContractName": "Private_Bank", "CompilerVersion": "v0.4.24+commit.e67f0147", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000c2aa3256f86f6ee8f91e280a07791817c6285f57", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://b8cc558699c7ad78181b2a36f2a054305f92b5b0d28c63712ce835ade1e62552"}