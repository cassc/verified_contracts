{"SourceCode": "pragma solidity ^0.8.4;\r\n\r\ninterface Token {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ncontract BatchTokenDistribution {\r\n\r\n    receive() external payable {}\r\n\r\n    mapping(address => uint) public sign;\r\n\r\n    constructor() {\r\n        sign[msg.sender] = 1;\r\n    }\r\n\r\n    function addSign(address signaddress) public onlySign(msg.sender) {\r\n        sign[signaddress] = 1;\r\n    }\r\n\r\n    function deleteSign(address signaddress) public onlySign(msg.sender) {\r\n        sign[signaddress] = 0;\r\n    }\r\n\r\n    modifier onlySign(address checkaddress){\r\n        require(sign[checkaddress] == 1, 'ns');\r\n        _;\r\n    }\r\n\r\n    function batch_transfer(address _token, address[] memory to, uint amount) public onlySign(msg.sender) {\r\n        Token token = Token(_token);\r\n        for (uint i = 0; i < to.length; i++) {\r\n            require(token.transfer(to[i], amount), \"amount is not enough\");\r\n        }\r\n    }\r\n\r\n    function batch_transfer_amount(address _token, address[] memory _recipients, uint256[] memory _amounts) public onlySign(msg.sender) {\r\n        require(_recipients.length == _amounts.length, \"Recipient and amount arrays must have same length\");\r\n        Token token = Token(_token);\r\n        // \u5faa\u73af\u904d\u5386\u6240\u6709\u5730\u5740\uff0c\u5206\u53d1\u4ee3\u5e01\r\n        for (uint256 i = 0; i < _recipients.length; i++) {\r\n            require(token.transfer(_recipients[i], _amounts[i]),\"amount is not enough\");\r\n        }\r\n    }\r\n\r\n    function distributeETH(address[] memory addresses, uint amount) public onlySign(msg.sender) {\r\n        uint256 total = 0;\r\n        for (uint i; i < addresses.length; i++) {\r\n            total = address(this).balance;\r\n            payable(addresses[i]).transfer(amount);\r\n        }\r\n    }\r\n\r\n    function transferAllETH() public onlySign(msg.sender) {\r\n        uint256 total = address(this).balance;\r\n        payable(msg.sender).transfer(total);\r\n    }\r\n\r\n    function transferAllToken(address _token) public onlySign(msg.sender){\r\n        Token token = Token(_token);\r\n        token.transfer(msg.sender,token.balanceOf(address(this)));\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signaddress\",\"type\":\"address\"}],\"name\":\"addSign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"batch_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batch_transfer_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signaddress\",\"type\":\"address\"}],\"name\":\"deleteSign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferAllETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"transferAllToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BatchTokenDistribution", "CompilerVersion": "v0.8.4+commit.c7e474f2", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://76c1d57e6fe1b3015013a3a9fbacc5cc05347cafa3d57d8c417a7f99d34a807b"}