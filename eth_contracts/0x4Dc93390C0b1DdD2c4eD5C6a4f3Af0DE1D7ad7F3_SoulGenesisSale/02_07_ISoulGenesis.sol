pragma solidity ^0.8.0;

interface ISoulGenesis {
    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);
    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);
    event PermanentURI(string _value, uint256 indexed _id);
    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);

    function MAX_Souls() external view returns (uint256);
    function Presale(uint8 numberOfTokens, bytes memory signature) external payable;
    function Sale(uint256 numberOfTokens) external payable;
    function SoulsOnSell() external view returns (uint256);
    function SoulsOnWhitelist() external view returns (uint256);
    function adminAddress() external view returns (address);
    function approve(address to, uint256 tokenId) external;
    function balanceOf(address owner) external view returns (uint256);
    function baseExtension() external view returns (string memory);
    function cost() external view returns (uint256);
    function getApproved(uint256 tokenId) external view returns (address);
    function getState() external view returns (bool state);
    function isApprovedForAll(address owner, address operator) external view returns (bool);
    function maxMintAmount() external view returns (uint256);
    function name() external view returns (string memory);
    function onlyEternalHolders() external view returns (bool);
    function onlyWhitelisted() external view returns (bool);
    function owner() external view returns (address);
    function ownerOf(uint256 tokenId) external view returns (address);
    function pause(bool _state) external;
    function paused() external view returns (bool);
    function renounceOwnership() external;
    function safeTransferFrom(address from, address to, uint256 tokenId) external;
    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) external;
    function setAdminAddress(address _address) external;
    function setApprovalForAll(address operator, bool approved) external;
    function setBaseExtension(string memory _newBaseExtension) external;
    function setBaseURI(string memory _newBaseURI) external;
    function setCost(uint256 _newCost) external;
    function setMaxMintAmount(uint256 _newmaxMintAmount) external;
    function setOnlyEternalHolders(bool _state) external;
    function setOnlyWhitelisted(bool _state) external;
    function setSoulsOnSell(uint256 _newSouls) external;
    function setWhitelistSoulsOnSell(uint256 _newSouls) external;
    function supportsInterface(bytes4 interfaceId) external view returns (bool);
    function symbol() external view returns (string memory);
    function teamMint(address user, uint256 numberOfTokens) external payable;
    function tokenByIndex(uint256 index) external view returns (uint256);
    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);
    function tokenURI(uint256 tokenId) external view returns (string memory);
    function token_id() external view returns (uint256);
    function totalSupply() external view returns (uint256);
    function transferFrom(address from, address to, uint256 tokenId) external;
    function transferOwnership(address newOwner) external;
    function verifiedAddress(bytes memory signature) external view returns (bool);
    function walletHoldsEternal(address _wallet) external view returns (bool);
    function walletOfOwner(address _owner) external view returns (uint256[] memory);
    function withdraw() external payable;
}