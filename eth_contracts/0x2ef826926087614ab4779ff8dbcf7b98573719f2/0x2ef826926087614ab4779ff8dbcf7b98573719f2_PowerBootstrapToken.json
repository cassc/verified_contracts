{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"lib/ttg/src/PowerBootstrapToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.23;\\n\\nimport { IPowerBootstrapToken } from \\\"./interfaces/IPowerBootstrapToken.sol\\\";\\n\\n// NOTE: This is a production-ready example of a token that can be used to bootstrap the PowerToken for the first time.\\n\\n/**\\n * @title  A token implementing the minimal interface to be used to bootstrap a Power Token contract.\\n * @dev    The timepoints queried is ignored as this token is not time-dependent.\\n * @author M^0 Labs\\n */\\ncontract PowerBootstrapToken is IPowerBootstrapToken {\\n    /* ============ Variables ============ */\\n\\n    /// @dev The total supply of token.\\n    uint256 internal immutable _totalSupply;\\n\\n    /// @dev Mapping to keep track of token balances per account.\\n    mapping(address account => uint256 balance) internal _balances;\\n\\n    /* ============ Constructor ============ */\\n\\n    /**\\n     * @notice Constructs a new PowerBootstrapToken contract.\\n     * @param  initialAccounts_ The initial accounts to mint tokens to.\\n     * @param  initialBalances_ The initial token balances to mint to each accounts.\\n     */\\n    constructor(address[] memory initialAccounts_, uint256[] memory initialBalances_) {\\n        uint256 accountsLength_ = initialAccounts_.length;\\n        uint256 balancesLength_ = initialBalances_.length;\\n\\n        if (accountsLength_ != balancesLength_) revert ArrayLengthMismatch(accountsLength_, balancesLength_);\\n\\n        uint256 totalSupply_;\\n\\n        for (uint256 index_; index_ < accountsLength_; ++index_) {\\n            uint256 balance_ = initialBalances_[index_];\\n\\n            _balances[initialAccounts_[index_]] += balance_;\\n            totalSupply_ += balance_;\\n        }\\n\\n        if (totalSupply_ >= type(uint240).max) revert TotalSupplyTooLarge();\\n\\n        _totalSupply = totalSupply_;\\n    }\\n\\n    /* ============ View/Pure Functions ============ */\\n\\n    /// @inheritdoc IPowerBootstrapToken\\n    function pastBalanceOf(address account_, uint256) external view returns (uint256) {\\n        return _balances[account_];\\n    }\\n\\n    /// @inheritdoc IPowerBootstrapToken\\n    function pastTotalSupply(uint256) external view returns (uint256) {\\n        return _totalSupply;\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/ttg/src/interfaces/IPowerBootstrapToken.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.23;\\n\\n/**\\n * @title  A token implementing the minimal interface to e used to bootstrap a Power Token contract.\\n * @author M^0 Labs\\n */\\ninterface IPowerBootstrapToken {\\n    /* ============ Custom Errors ============ */\\n\\n    /**\\n     * @notice Revert message when the length of some accounts array does not equal the length of some balances array.\\n     * @param  accountsLength The length of the accounts array.\\n     * @param  balancesLength The length of the balances array.\\n     */\\n    error ArrayLengthMismatch(uint256 accountsLength, uint256 balancesLength);\\n\\n    /// @notice Revert message when the total supply is larger than `type(uint240).max`, rendering the contract\\n    ///         incompatible as a bootstrap token for the PowerToken.\\n    error TotalSupplyTooLarge();\\n\\n    /* ============ View/Pure Functions ============ */\\n\\n    /**\\n     * @notice Returns the token balance of `account` at a past clock value `epoch`.\\n     * @param  account The address of some account.\\n     * @param  epoch   The epoch number as a clock value.\\n     * @return The token balance `account` at `epoch`.\\n     */\\n    function pastBalanceOf(address account, uint256 epoch) external view returns (uint256);\\n\\n    /**\\n     * @notice Returns the total token supply at a past clock value `epoch`.\\n     * @param  epoch The epoch number as a clock value.\\n     * @return The total token supply at `epoch`.\\n     */\\n    function pastTotalSupply(uint256 epoch) external view returns (uint256);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"common/=lib/protocol/lib/common/src/\",\r\n      \"contract-test-utils/=lib/ttg/lib/erc20-helper/lib/contract-test-utils/contracts/\",\r\n      \"ds-test/=lib/protocol/lib/solmate/lib/ds-test/src/\",\r\n      \"erc20-helper/=lib/ttg/lib/erc20-helper/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"protocol/=lib/protocol/\",\r\n      \"solmate/=lib/protocol/lib/solmate/src/\",\r\n      \"ttg/=lib/ttg/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999999\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"shanghai\",\r\n    \"viaIR\": false,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"initialAccounts_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"initialBalances_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"accountsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balancesLength\",\"type\":\"uint256\"}],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyTooLarge\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pastBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "PowerBootstrapToken", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "999999", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000056000000000000000000000000333c9430c42ca172ccf744c139107f9fdad0c44b000000000000000000000000ab36309a87fc548f5e4b40e1b1f326feb5ee7772000000000000000000000000333c9430c42ca172ccf744c139107f9fdad0c44b000000000000000000000000ab36309a87fc548f5e4b40e1b1f326feb5ee77720000000000000000000000004248d178838903f956bf154584effd38d7ced1fc0000000000000000000000002f44b390f52bd0c9c72295b091bd6e5dfa65f12a0000000000000000000000000d2063d4c8007d597a88016f9196cdb3fa06ca9600000000000000000000000084d34c7839a6751a3ab0eebe616b3bf73194bace00000000000000000000000084d34c7839a6751a3ab0eebe616b3bf73194bace0000000000000000000000000eaeed79102fd7510cacb87a3c960b6a79689806000000000000000000000000e158da50d6d53fde91663c593e3a20b9f44a5aa3000000000000000000000000061a753d73d0700cb8f894dacbe42432c31815770000000000000000000000003d7fe4a2369f025e8a0d9b70fc896ed07255be9e0000000000000000000000008469d3c96adf5911eb7abc9f47df860bfe8821fb0000000000000000000000008da33d16f3c2352c77e48f4b67b4a3261e0cdeb90000000000000000000000000398279f142fbfbbe567d7e6cea5a18d49a54298000000000000000000000000fb0d8bc6b04da98dd504d6cf59b95f4f8be0c7d8000000000000000000000000b7c7e7448a846207d9c956a7b313cbfb12915c15000000000000000000000000322226000f3ffae4ab2eb63fba8e92c0a450b76f000000000000000000000000e433806ae97914136593e25270817d358e5b33e5000000000000000000000000f061aac244fa92ba6badd7ea6815810b4f9d2811000000000000000000000000ca8942a599fbc0670837e426bbb735a8d4470268000000000000000000000000189e9ad92147d536116b0b0baf9c8b67287247ab00000000000000000000000009ee936406c1751ee8b5c05487a6e1b63690f68a0000000000000000000000007c1dc56f042baffcd6a05591ee74284b8b5a064c0000000000000000000000008a9b796778dcd2a8bd1835242e4f8a65440405110000000000000000000000003904fa57e8243ede7e53ac767ee327159b60d191000000000000000000000000d7cad055fe785767007e385980946cad137f6065000000000000000000000000bb2ba020d0df95a99aa12f86d171d8f7f48532ce00000000000000000000000060c2a8a421a5cdcfd517c9b7295c8fe01b02e6ec00000000000000000000000055dc2d92ed5d1299d8eed8efef37966c03d29d1b000000000000000000000000a0c865618efb3c9af63fa60e4440b32a3723009e00000000000000000000000061f228e8b770cb8bdcce6a603269851d5aa636be0000000000000000000000002223ed3a3e38e04182be9400393449b3ec5eab56000000000000000000000000a25ea37c36f724e4c0ee7dd215ff1d3093a1c6020000000000000000000000001715136c01889ec0fd243cb933b4d6ec4a9bd05a00000000000000000000000036513366146c133608696a8bca5b84f14ed1319200000000000000000000000075c97e183d309b945cd71e872519cd827f4a81d30000000000000000000000003fa21fd164aba0753c79ca4072429917a9079c2200000000000000000000000048a9f30c4b619aed265e145666abe572a1b2730500000000000000000000000050b4961b1a56bc3c02e193bd7121239f8bcb0cfc000000000000000000000000ce9858e62ae3f8e2555c59e42089f383c0388cc0000000000000000000000000ccf38089f288c31fe3633b592c7a36cf9d471bd40000000000000000000000003a6556317640dde7f03b713f5fae9b5815234f84000000000000000000000000faf266939b7599ce7a9be806c39e73d82e90ba11000000000000000000000000408505ec4bb812b9b649a653390a7b683cea3d540000000000000000000000007f8aa300e8d505aeb32acdf110a786a3a8f0c6ce0000000000000000000000002b74d94bf2a2bb0c09cc02d6d9a1be37a5a8a420000000000000000000000000f17009ed9d1af2e7e52c069c7058d57c425deb2c0000000000000000000000004005239c0afa457805d0c11c07d6b401c28d96a100000000000000000000000019ffc27932daa19b10ccff8b7fcc233b7f6a661e000000000000000000000000afa858d9fd87e5e24823b040dcbae1aeb4d9afd00000000000000000000000005b8f182646af4959e2aa0c289c963b482244968e000000000000000000000000125db22579a0e0515810b02b603d837950acea84000000000000000000000000c07f3487573c41e46d2c095b5cea99c40b42565d0000000000000000000000005ee98ab5f82386f98d021eea633c2c3c91d585a4000000000000000000000000119144c125310f020d38b963101c6a2d85769bd30000000000000000000000006e556ded4d18a290c8144ea0df69a1bd72077d87000000000000000000000000f9fb6d5628c2e40692d801a80b6a70443514b3d70000000000000000000000005efca4e542b9aeaabde027c71bcf7258c22be5e3000000000000000000000000c989825d62cebfdc51cf14f86ba4966771784795000000000000000000000000cf7f91cd9f2eb8157e0cc6fec4881042f3301c000000000000000000000000009cf028e052bf47824b7bebde609f031690aaf5ea00000000000000000000000024b388aa696a6409a57051e1dc469c7a26adf5c60000000000000000000000004739845330da016e268a883d3a0db9a4f2271f46000000000000000000000000459b51dcd5c53873391a278d8271fdb698b21a90000000000000000000000000d1cd6afe15b536c43a3240a372f47401330086870000000000000000000000009d8ecaf6e18d1e22e856a6331d2ab095052dea840000000000000000000000006187e730381cb82af6d91b642378e61a370e8f1f0000000000000000000000009591166b8dc800edb6a982137bf64121b46aea9e0000000000000000000000003b13d2e37ae6cc877ac05d778761c51377f1424c000000000000000000000000bed8faa0740ea5f5e5fa0aa2645aad8433f7e20f000000000000000000000000bb65b21e72be9d01a6f34173076d74797fa5186700000000000000000000000065c82d14325888ffbd2a8d9a58df32159d7758ce0000000000000000000000009e65c80d33b992e63364dbabecbd39c43619d0a1000000000000000000000000c3c34bcf8779551fdc43f73a2c2ff217279ae1fd000000000000000000000000a806cadca8e84fb85fe4e7af28fa06eda19dbcd900000000000000000000000000ecafb8ad59e0e18ae0e8f2254979f7850aac7f000000000000000000000000d70804463bb2760c3384fc87bbe779e3d91bab3a000000000000000000000000d0fea07a3545be25ef26d99e2d7d968482963d86000000000000000000000000ea657724abd147f848f57f2e33cbd7fc2c9fbb2100000000000000000000000040cfbc8f85fc37790bbe1be1fab3bfd9933013ee0000000000000000000000008da0916d04f567e29c0a563722a96e32fece08c20000000000000000000000008beaab8ad0f3a294351ec83255cbfb631e0de466000000000000000000000000085841edbd2925e9be53151de647a3879fc6cc2c000000000000000000000000b948abd79390e0a35aea051ea9981e1a0d730fd600000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000175af00000000000000000000000000000000000000000000000000000000000175af000000000000000000000000000000000000000000000000000000000001ece0000000000000000000000000000000000000000000000000000000000001ece0000000000000000000000000000000000000000000000000000000000001f6650000000000000000000000000000000000000000000000000000000000003d6300000000000000000000000000000000000000000000000000000000000007ed00000000000000000000000000000000000000000000000000000000000021dc00000000000000000000000000000000000000000000000000000000000021db000000000000000000000000000000000000000000000000000000000000096c0000000000000000000000000000000000000000000000000000000000000ba30000000000000000000000000000000000000000000000000000000000000f9d00000000000000000000000000000000000000000000000000000000000009c1000000000000000000000000000000000000000000000000000000000000016b000000000000000000000000000000000000000000000000000000000000021a0000000000000000000000000000000000000000000000000000000000000285000000000000000000000000000000000000000000000000000000000000011e00000000000000000000000000000000000000000000000000000000000007db000000000000000000000000000000000000000000000000000000000000055a00000000000000000000000000000000000000000000000000000000000005e2000000000000000000000000000000000000000000000000000000000000050a00000000000000000000000000000000000000000000000000000000000037840000000000000000000000000000000000000000000000000000000000003917000000000000000000000000000000000000000000000000000000000000253700000000000000000000000000000000000000000000000000000000000041fb000000000000000000000000000000000000000000000000000000000000369800000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003063000000000000000000000000000000000000000000000000000000000000781d00000000000000000000000000000000000000000000000000000000000068620000000000000000000000000000000000000000000000000000000000004d2e00000000000000000000000000000000000000000000000000000000000023a90000000000000000000000000000000000000000000000000000000000000b9700000000000000000000000000000000000000000000000000000000000007b000000000000000000000000000000000000000000000000000000000000001f4000000000000000000000000000000000000000000000000000000000000012f000000000000000000000000000000000000000000000000000000000000009700000000000000000000000000000000000000000000000000000000000000f20000000000000000000000000000000000000000000000000000000000000d4e000000000000000000000000000000000000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000c50000000000000000000000000000000000000000000000000000000000019dbf0000000000000000000000000000000000000000000000000000000000002d7b0000000000000000000000000000000000000000000000000000000000001237000000000000000000000000000000000000000000000000000000000000091c000000000000000000000000000000000000000000000000000000000000048e000000000000000000000000000000000000000000000000000000000000024700000000000000000000000000000000000000000000000000000000000002470000000000000000000000000000000000000000000000000000000000000185000000000000000000000000000000000000000000000000000000000000018500000000000000000000000000000000000000000000000000000000000000c200000000000000000000000000000000000000000000000000000000000000c20000000000000000000000000000000000000000000000000000000000000ca7000000000000000000000000000000000000000000000000000000000000030900000000000000000000000000000000000000000000000000000000000000c20000000000000000000000000000000000000000000000000000000000000ca7000000000000000000000000000000000000000000000000000000000000018500000000000000000000000000000000000000000000000000000000000000c200000000000000000000000000000000000000000000000000000000000000c200000000000000000000000000000000000000000000000000000000000000c20000000000000000000000000000000000000000000000000000000000000309000000000000000000000000000000000000000000000000000000000000018500000000000000000000000000000000000000000000000000000000000025f600000000000000000000000000000000000000000000000000000000000001850000000000000000000000000000000000000000000000000000000000000654000000000000000000000000000000000000000000000000000000000000030900000000000000000000000000000000000000000000000000000000000006540000000000000000000000000000000000000000000000000000000000000185000000000000000000000000000000000000000000000000000000000000018500000000000000000000000000000000000000000000000000000000000000c20000000000000000000000000000000000000000000000000000000000000ca7000000000000000000000000000000000000000000000000000000000000030900000000000000000000000000000000000000000000000000000000000000c200000000000000000000000000000000000000000000000000000000000000c200000000000000000000000000000000000000000000000000000000000000c2000000000000000000000000000000000000000000000000000000000000018500000000000000000000000000000000000000000000000000000000000006540000000000000000000000000000000000000000000000000000000000000309000000000000000000000000000000000000000000000000000000000000040d00000000000000000000000000000000000000000000000000000000000001030000000000000000000000000000000000000000000000000000000000000082000000000000000000000000000000000000000000000000000000000000010300000000000000000000000000000000000000000000000000000000000002060000000000000000000000000000000000000000000000000000000000000ca7", "EVMVersion": "shanghai", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}