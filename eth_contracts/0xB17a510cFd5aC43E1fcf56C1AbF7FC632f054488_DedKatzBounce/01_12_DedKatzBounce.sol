// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/*
&&&&&&&&&&&&&&&&&&&&&##################################BBBBBBBBBBBBBBBBBBBBBBB################################&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&###############################BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB################################&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&#########################BBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBB###############################&&&&&&&
&&&&&&&&&&&&&&################BBBBBBBBBBBBBBBBBBBBBBBGGGGGGGPPPPGPPPPPPPGGGGGGGGBBBBBBBBBBBBBBBBBBBB##########################&&
&&&&&&&&&&&&#############BBBBBBBBBBBBBBBBBBBBBBBGGGGGGGGPPPPPP5J!^:..~5PPPPPGGGGGGGGBBBBBBBBBBBBBBBBBBBBBB######################
&&&&&&&&&&############BBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGPPPPPPPJ!.  ^~.  YPPPPPPPPPGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBB#################
&&&&&&&&############BBBBBBGGGGGGGGGGGGGGGGGGGGGGPPPPPPPPP5?^  :!YJ: .?PPPPP555PPPPPPPPPGGGGGGGGGGGGGGGGBBBBBBBBBBB##############
&&&&&&############BBBBBBGGGGGP5YY55PPGPPPPPPPPPPPPPPPPP57:  ^?5PP^   .::~!?J55555555PPPPPPPPPPPPPPPGGGGGGGGBBBBBBBBBBBB#########
&&&&&###########BBBBBBGGGGPJ~.     .^!?5PPPPPPP55555PY!.  ~JPPP555J?77!^:   .^7J55555555555PPP55555PPGPPGGGGGGBBBBBBBBBBBBBBBB##
&&&&###########BBBBBGGGGG5^  ~?YYJ?!^.  ^75PP555555Y!. .!YPPPP55555555555YJ7^.  ^?YYYY55YY?7~^:....:^75PPPPGGGGGGBBBBBBBBBBBBBBB
&&&&##########BBBBBGGGGP5: .YGGGPPPPP5J~.  ~J5555J~  .!5PPPPP5555555555YY55YJ7^   ?5YJ7~:   .:~!777~. .7PPPPPGGGGGGBBBBBBBBBBBBB
&&&##########BBBBBGGGGPG7  ?GPPPPP555PPP5?:  ^J?^  :75PPPPPPP5555555555YY?:.   .~7J!:   :~?J555PPPPP5~  ?PPPPPGGGGGGGGBBBBBBBBBB
&###########BBBBBGGGGPPP~  YPPPPP55555555P5J^   .~JPPPPPPPPPPPPPP55555555?:..  .^^  :!?YY55555YYYYYY5?  ~PPPPPPPGGGGGGGGGGBBBBBB
############BBBBBGGGGPPP~  YPPPPP5555555555PPYJYPGGPPPPPPPPPPPPPPPPP5555555YYJ7~:   ^7Y55YYYYYYYYYYYY?  ~PPPPPPPPGGGGGGGGGGGGGGG
###########BBBBBGGGGPPPP!  JGPPPPPPPPPPPPPP5PPPPPPPPPPPPPPPPPPPPPPPPP55555555555YJ7^.  ^?YYYJJJJJJJYY~  7PPPPPPPPPGGGGGGGGGGGGGP
##########BBBBBBGGGGPPPPJ  ~PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP555555YYYYYYYJ7:  .!JYYJJJJJY?. .YPPPPPPPPPPGGGGGGGGGGGPP
#########BBBBBBGGGGPPPPP5^ .YPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555555YYYYYYYYJ~. .~JYYJJJJ^  755P555PPPPPPPGGGGGGGGPP5
########BBBBBBGGGGPPPPP5PJ  ~PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP55555555YYYYYYYJ!.  ~JYJY~  ~55555555PPPPPPPPGGGGGPPP5
#######BBBBBBBGGGGPPPP55P5:  5PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP555555555YYYYYYYJ!. .!Y!  :Y55555555PPPPPPPPPPPPPPP55
######BBBBBBBGGGGPPPP5P57. .7PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555555555YYYYYYYY?^  :  :Y5555555555PPPPPPPPPPPPPP55
#####BBBBBBBGGGGPPPPPPJ:  ~YPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555555555YYYYYJJJY7.  ^Y555YYY555555PPPPPPPPPPPPP5Y
#####BBBBBBGGGGPPPPP5!  ^YPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555555555555YYYYYJJJY?. .755YYYYYY55555PPPPPPPPPPPP5Y
####BBBBBBGGGGPPPPPY:  7PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP5555555555555555YYYYYYJJY?.  ?5YYYYYY5555555PPPPPPPPP55Y
###BBBBBBGGGGPPPPPJ. .JPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP555555555555555555555555YYYYYYYJJY?. .J5YYYYYY555555555PPPPPP55Y
##BBBBBBGGGGPPPPPY. .YPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP55555555555555555555555555555555555YYYYYYJJJY!  ^YYYYYYYY5555555555PP5555Y
##BBBBBGGGGGPPPPY: .YPPPPPPPPPPPPPPPPPPPPPPPPPPP55555555555555555555555555555555555555555YYYYYYJJJJJ^  75YYYYYYYY55555555555555Y
#BBBBBBGGGGPPPP5^  ?PPPPPPPPPPPPPPPPPPPPPPPPP55555555YYYYYYYYYYYYYYYYY55555555555555555YYYYYYYYJJJJJ?  :Y5YYYYYYYYY555555555555Y
BBBBBBGGGGPPPPP7  !PPPPPPPPPPPPPPPPPPPPPPPP555555YYYYYJJJJJJJJJJJJJJYYYYYYYYY55555555YYYYYYYYJJJJJJJJ~  ~7?JYYYYYYYY55555555555Y
BBBBBBGGGGPPPP5. .5PPPPPPPPPPPPPPPPPPPPP55555YYYYYYJJJ?77!!!!77??JJJJJJJJYYYYYYYYYYYYYYYYYYJJJJJJ?????~..   ~YYYYYYY55555555555Y
BBBBBGGGGPPPPP7  7PPPPPPPPPPPPPPPPPPPP55555YYYJYJ?!^::.::^^^^:::::^~7JJJJJJJYYYYYYYYYYYJJJJJ??????????????~  ?5YYYYYY5555555555Y
BBBBBGGGGPPPP5: .YPPPPPPPPPPPPPPPPPPP5555YYYJJ?!:.:^!?JYYYYYYYYJ?7~:.:^7JJJJJJJJYJJJJJJJJJ???77!!!!777???J!  75YYYYYY5555555555Y
BBBBBGGGGPPPPY  ^PPPPPPPPPPPPPPPPPP5555YYYJY?~..~?YYYYYYYYYYYJJJJJYJ?!:.:7JJJJJJJJJJ????7~^:...:::....:~J~. .J55YYYYY55555555555
BBBBGGGGPPPPP?  !PPPPPPPPPPPPPPPPP5555YYYJJ!..~JYYYYYYYYYYYYYYJJJJJJJJJ7:.^?YJJ??????7~..:^!7???????~..^Y7~7JYY55YYYY55555555555
BBBBGGGGPPPPP7  ?PPPPPPPPPPPPPPPP5555YYJJJ^.:?YYYYYYYYYYYYYYYYYYJJJJJ??JJ~.:?Y?????7^..~7JJJJJJ????7..!YYYYYYYYYYYYY555555555555
BBBBGGGGPPPPP!  JPPPPPPPPPPPPPPPP555YYYJY~.:JYYYYYYYYYYYYYYYYYYYYYJJJJ???J~.:?J???7:.^?JJJJJJ???7?!..7YJJYYYYYYYYY55555555555555
BBBBGGGGPPPPP!  JPPPPP5PPPPPPPPP5555YYJY7..?5YYYYYYYYY5555555YYYYYYYJJJ???J^.^J??7:.^JJJJJJJ??????:.!YJYYYYYYYYYY555555555555555
BBBBGGGGPPPPP7  7PPPPP55PPPPPPPP555YYYJY^.^YYYYYYYYY5555555555YYYYYYJJJ??7?!..?J?~.:?JJJJJJJ?????~.:JJYYYYYYYYYY5555555555555555
BBBBGGGGPPPPPJ  ~PPPP555PPPPPPPP555YYYJJ^.~5YYYYYYYY55555555555YYYYYYJJ??7?7..7J?^.^JJJJJJJJ?????:.7YJYYYYYYYYY55555555555555555
BBBBGGGGPPPPP5. :PPPP5555PPPPPPP555YYJJY^.^5YYYYYYYY5555555555YYYYYYJJJ??7?!..7JJ^.:JJJJJJJ????!!.:JJYYYYYYYYY555555555555555555
BBBBBGGGGPPPPP~  JPPP5555PPPPPPP555YYYJY7.:JYYYYYYYYYY5555555YYYYYYYJJJ??7?^.:J?J!..7JJJ??????7!~.^JJYYYYYYYY555555555555555555Y
BBBBBGGGGPPPPP?  ~PPP55555PPPPPP5555YYJ7?^.^JYYYYYYYYYYYYYYYYYYYYYYJJJ????!..7J??J~..7JJ??????7?^.~YJYYYYYYYY55555555555555555YY
BBBBBBGGGGPPPP5^  YPPP55555PPPPP55555YYJ!?^.^JYYJJJYYYYYYYYYYYYYYJJJJ????!..!YJJJ??~..!JJ???7777^.~YJJJJYYYYYY5555555555555555YY
BBBBBBGGGGPPPPPJ  ^PPP555555PPPPP5555YYYJJJ~.:7YYJJJJJJYYYYYYJJJJJJ????7^ :7YJJJJ???7:.:!???777?^.^YJJJJJYYYYY5555555555555555YY
#BBBBBBGGGGPPPPP!  7PP5555555PPPP55555YYYJJJ7^.:7JYJJJJJJJJJJJJ??????7^..!JYYYYJJJ????!^..^!777?~.:JJJJJJJYYYY5555555555555555YY
#BBBBBBGGGGPPPPP5^  JPP55555555PPP555555YYYJYY?~:.^!??JJJJJJJJ???7!^..:!JYYYYYYYJJJJJ?JJ?!^...::. :???JYJJYYYYY555555555555555YY
##BBBBBBGGGGPPPPPY: .JPP555555555PP5555555YYYJYYJ?~^:::^^~~~~^^::.:^!JYYYYYYYYYYYYYJJJJJJJJJ?7!~!7J~  :7YYYYYYYY555555555555555Y
###BBBBBBGGGGPPPPPY: .?PP555555555555555555YYYYYYYYYYJ?7!!!!!!!7?JYYYYYYYYYYYYYYYYYYYYJJJJJJJJJJJJJJ7^  ^YYYYYYY555555555555555Y
###BBBBBBBGGGGPPPPP5^  7PP55555555555555555555YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYJJJJJJJJJJJY~  !55YYY5555555555PPP555Y
####BBBBBBBGGGGPPPPP5!  ~5P55555555555555555555555YYYYYYYYYYYYYYYYYYYYYYY55555555555YYYYYYYYYJJJJJJJJJ?  ^555555555555PPPPPPP55Y
#####BBBBBBBGGGGPPPPPP?. .?5P55555555555555555555555555YYYYYYYYYYYYY55555555555555555555YYYYYYYJJJJJJJ~  755555555555PPPPPPPP55Y
#######BBBBBBGGGGGPPPPP5~  :J5P5555555555555555555555555555555555555555555555555555555555YYYYYYYYJJYJ~  ~5555555555PPPPPPPPPPP5Y
########BBBBBBBGGGGPPPPPPY^  :?5P555555555555555555555555555555555555555555555555555555555YYYYYYYYY?:  !5555555555PPPPPPPPPPPP55
#########BBBBBBBGGGGGPPPPPPJ~  .!J5555555555555555555555555555555555555555555555555555555YYYYYYYYJ~  ^J555555555PPPPPPPPPPPPPPP5
###########BBBBBBBGGGGGPPPPPP57:  :!?Y555555555555555555555555555555555555555555555555555YYYYYYY?. .75555555555PPPPPPPPPPGGGPPPP
############BBBBBBBGGGGGGPPPPPPPY7^.  .^!?Y555555555555555555555555555555555555555555555YYYYYYY?. :J555555555PPPPPPPPGGGGGGGGGPP
&#############BBBBBBBGGGGGGPPPPPPPP5J7~:.  .^!?Y555555555555555555555555555555555555555YYYYYYYY~  ?P5555555PPPPPPPGGGGGGGGGGGGGP
&&&############BBBBBBBBGGGGGGPPPPPPPPPPP5Y?!^. .!555555555555555555555555555555555555YYYYYYYYYY~  ?PPP555PPPPPPGGGGGGGGGGGGGGGGG
&&&&#############BBBBBBBBBGGGGGGPPPPPPPPPPPPP5!  !PP55555555Y5Y55YYY55YYYYYYYYYYY5555YYYYYYYYYY?  ^PPPPPPPPPPGGGGGGGGGGGGGGGBBBB
&&&&&&#############BBBBBBBBBBGGGGGGGPPPPPPP5555!  ^JY5555555555Y!. :7Y5555555555Y?~^7Y555555YYY7  ~PPPPPPPPGGGGGGGGGGGGBBBBBBBBB
&&&&&&&&#############BBBBBBBBBBBGGGGGGGPPPPPP55PJ~. .:^~!!!!~^:. .^. .^!7????7!^.    .^!!!!~^:.  ~5PPPPPPGGGGGGGGGBBBBBBBBBBBBBB
&&&&&&&&&&##############BBBBBBBBBBBGGGGGGGPPPPPPPP5J7!^::::::^~!J5P5?~:..     .:^7YY7~^:::::^~!?5GGGGGGGGGGGGGBBBBBBBBBBBBBBBBBB
&&&&&&&&&&&&###############BBBBBBBBBBBGGGGGGGGPPPPPPPPPPPPPPPPPPPPPPPPP555Y5555PPPPPPPPPPPPPPGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBBB
&&&&&&&&&&&&&&###############BBBBBBBBBBBBGGGGGGGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGGGGGGGBBBBBBBBBBBBBBBB#######
&&&&&&&&&&&&&&&&&###############BBBBBBBBBBBBBGGGGGGGGGGGGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGGGGGGGGGGGBBBBBBBBBBBBBBB############
&&&&&&&&&&&&&&&&&&&&################BBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBB#################
&&&&&&&&&&&&&&&&&&&&&&&#################BBBBBBBBBBBBBBBBBBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBB######################
&&&&&&&&&&&&&&&&&&&&&&&&&####################BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB###########################
&&&&&&&&&&&&&&&&&&&&&&&&&&&&#######################BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB#############################&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&############################BBBBBBBBBBBBBBBBBBBBBBBBB##############################&&&&&&&&&&&&&
@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&###########################################################################&&&&&&&&&&&&&&&&&
*/

import "erc721a/contracts/ERC721A.sol";
import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/cryptography/ECDSA.sol";
import "@openzeppelin/contracts/token/common/ERC2981.sol";
import "@openzeppelin/contracts/security/ReentrancyGuard.sol";

contract DedKatzBounce is ERC721A, ERC2981, Ownable, ReentrancyGuard {
  using ECDSA for bytes32;
  address private _proofSigner;
  uint256 private _maxPerTx;
  uint256 private _maxPerWallet;
  uint256 private _price_allow_list;
  uint256 private _price_public_sale;
  uint256 private _max_katz;
  string private _baseMetadataUri;
  bool public mint_enabled;
  bool public public_sale;

  mapping(address => uint256) private _katz_adopted;

  constructor() ERC721A("DedKatzBounce", "DKB") {
    _maxPerTx = 5;
    _maxPerWallet = 9;
    _price_allow_list = 0.01 ether;
    _price_public_sale = 0.02 ether;
    _max_katz = 2_500;
    _setDefaultRoyalty(_msgSender(), 300);
  }

  function mint(uint256 lives, bytes calldata proof) public payable nonReentrant {
    require(mint_enabled, "Adoption is not possible yet");
    require(lives <= _maxPerTx, "Max per tx exceeded");
    require(totalSupply() + lives <= _max_katz, "Max supply reached");

    require(
      _katz_adopted[msg.sender] + lives <= _maxPerWallet,
      "Max per wallet exceeded"
    );

    if (public_sale) {
      require(isValidProof(msg.sender, 10, proof), "Invalid ticket");
      require(msg.value == _price_public_sale * lives, "Incorrect value sent");
    } else {
      require(isValidProof(msg.sender, 9, proof), "Invalid ticket");
      require(msg.value == _price_allow_list * lives, "Incorrect value sent");
      if(totalSupply() + lives >= 1000) {
        public_sale = true;
      }
    }

    _safeMint(msg.sender, lives);
    _katz_adopted[msg.sender] += lives;
  }

  function sendToPound(uint256 lives) public onlyOwner {
    require(totalSupply() + lives <= _max_katz, "Max supply reached");
    _safeMint(owner(), lives);
  }

  function setSigner(address _signer) public onlyOwner {
    _proofSigner = _signer;
  }

  function setBaseMetadataUri(string memory _a) public onlyOwner {
    _baseMetadataUri = _a;
  }

  function _baseURI() internal view override returns (string memory) {
    return _baseMetadataUri;
  }

  function enablePublicSale() public onlyOwner {
    public_sale = true;
  }

  function setAdoption(bool _adoption) public onlyOwner {
    mint_enabled = _adoption;
  }

  function setRoyalties(address _receiver, uint256 _fees) public onlyOwner {
    _setDefaultRoyalty(_receiver, uint96(_fees));
  }

  function widthdraw() public onlyOwner {
    payable(msg.sender).transfer(address(this).balance);
  }

  function supportsInterface(bytes4 interfaceId)
    public
    view
    virtual
    override(ERC721A, ERC2981)
    returns (bool)
  {
    // Supports the following `interfaceId`s:
    // - IERC165: 0x01ffc9a7
    // - IERC721: 0x80ac58cd
    // - IERC721Metadata: 0x5b5e139f
    // - IERC2981: 0x2a55205a
    return
      ERC721A.supportsInterface(interfaceId) || ERC2981.supportsInterface(interfaceId);
  }

  function isValidProof(
    address _address,
    uint256 _lives,
    bytes calldata _proof
  ) internal view returns (bool) {
    bytes32 data = keccak256(abi.encodePacked(_address, _lives));
    return _proofSigner == data.toEthSignedMessageHash().recover(_proof);
  }
}