{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity 0.8.19;\r\n\r\n\r\nabstract contract ReentrancyGuard {\r\n \r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    function _reentrancyGuardEntered() internal view returns (bool) {\r\n        return _status == _ENTERED;\r\n    }\r\n}\r\n\r\n\r\ninterface IWETH {\r\n    function deposit() external payable;\r\n    function withdraw(uint amount) external;\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract DorkSideDepositor is ReentrancyGuard {\r\n    IWETH public WETH_TOKEN;\r\n    address public STAR;\r\n    address public ALT;\r\n    address public STABLE;\r\n    uint256 public starPercentage = 100; // in basis points, out of 1000\r\n    uint256 public altPercentage = 300;\r\n    uint256 public stablePercentage = 600;\r\n    address public owner;\r\n    bool public allowDeposits = true;\r\n\r\n    uint256 public totalDeposited;// Total ETH deposited\r\n    uint256 public totalDepositedPlusBonus; // Total ETH deposited + Bonus amount\r\n    uint256 public totalReceivedWETH; // Total WETH received\r\n    uint256 public totalClaimedWETH; // Total WETH claimed by all users\r\n\r\n    uint256 public bonusPercent = 10; // Bonus percent (e.g., 10 for 10%)\r\n    uint256 public lastClaimTime; // Last time claim was executed\r\n    uint256 public claimInterval = 1 minutes; // 1 min interval\r\n\r\n\r\n    mapping(address => uint256) public userTotalClaimedWETH; // Last WETH claimed by user\r\n    mapping(address => uint256) public lastUserClaimTime; // Last time user claimed\r\n\r\n    mapping(address => uint256)public UserTotalDepositAndBonus; //Total user depoist and bonus\r\n    mapping(address => uint256)public UserTotalDeposited; //Total user deposit\r\n    mapping(address => uint256) public UserUnclaimedBalances; //Total amount a user has left to claim\r\n\r\n\r\n    constructor(address _wethToken) {\r\n        WETH_TOKEN = IWETH(_wethToken);\r\n        owner = msg.sender;\r\n        STAR = msg.sender;\r\n        ALT = msg.sender;\r\n        STABLE = msg.sender;\r\n        lastClaimTime = block.timestamp;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    receive() external payable {\r\n        depositAndWrapETH();\r\n    }\r\n\r\n    function setPercentages(uint256 _starPercentage, uint256 _altPercentage, uint256 _stablePercentage) external onlyOwner {\r\n        require(_starPercentage + _altPercentage + _stablePercentage == 1000, \"Total must be 1000 basis points.\");\r\n        starPercentage = _starPercentage;\r\n        altPercentage = _altPercentage;\r\n        stablePercentage = _stablePercentage;\r\n    }\r\n\r\n    function setAddresses(address _STAR, address _ALT, address _STABLE) external onlyOwner {\r\n        STAR = _STAR;\r\n        ALT = _ALT;\r\n        STABLE = _STABLE;\r\n    }\r\n\r\n    function toggleDeposits() external onlyOwner {\r\n        allowDeposits = !allowDeposits;\r\n    }\r\n\r\n    function setBonusPercent(uint256 _bonusPercent) external onlyOwner {\r\n        bonusPercent = _bonusPercent;\r\n    }\r\n\r\n    function depositAndWrapETH() public payable nonReentrant{\r\n        require(allowDeposits, \"Deposits are currently disabled.\");\r\n\r\n        uint256 depositAmount = msg.value;\r\n\r\n        uint256 bonusAmount = (depositAmount * bonusPercent) / 100;\r\n\r\n        uint256 totalDeposit = depositAmount;\r\n\r\n        uint256 totalDepositAndBonus = bonusAmount + totalDeposit;\r\n\r\n        UserTotalDepositAndBonus[msg.sender] += totalDepositAndBonus; \r\n        UserTotalDeposited[msg.sender] += depositAmount;\r\n        UserUnclaimedBalances[msg.sender] += totalDepositAndBonus;\r\n\r\n        totalDeposited += totalDeposit;\r\n        totalDepositedPlusBonus += totalDepositAndBonus;\r\n\r\n        WETH_TOKEN.deposit{value: depositAmount}();\r\n\r\n        uint256 starAmount = (depositAmount * starPercentage) / 1000;\r\n        uint256 altAmount = (depositAmount * altPercentage) / 1000;\r\n        uint256 stableAmount = (depositAmount * stablePercentage) / 1000;\r\n\r\n        WETH_TOKEN.transfer(STAR, starAmount);\r\n        WETH_TOKEN.transfer(ALT, altAmount);\r\n        WETH_TOKEN.transfer(STABLE, stableAmount);\r\n    }   \r\n\r\n\r\n    function getTotalDeposited() public view returns (uint256) {\r\n        return totalDeposited;\r\n    }\r\n\r\n    function getTotalClaimedWETH() public view returns (uint256) {\r\n        return totalClaimedWETH;\r\n    }\r\n\r\n    function getUserDeposit(address user) public view returns (uint256) {\r\n        return UserTotalDeposited[user];\r\n    }\r\n\r\n    function getUserLastClaimedWETH(address user) public view returns (uint256) {\r\n        return userTotalClaimedWETH[user];\r\n    }\r\n\r\n    function getTotalReceivedWeth() public view returns (uint256) {\r\n        return WETH_TOKEN.balanceOf(address(this)) + totalClaimedWETH;\r\n    }\r\n\r\n    function getCurrentBalanceWETH() public view returns (uint256) {\r\n        return WETH_TOKEN.balanceOf(address(this));\r\n    }\r\n   \r\n    function computeClaimableAmount(address user) public view returns(uint256) {\r\n        uint256 currentTotalReceivedWETH = WETH_TOKEN.balanceOf(address(this)) + totalClaimedWETH;  //10\r\n        uint256 userBalance = UserTotalDepositAndBonus[user];  //Total of all deposits of a user\r\n        uint256 userProportion = (userBalance * 1e18) / totalDepositedPlusBonus; //\"ratio\" of a user deposit to total deposits\r\n        uint256 userShouldHaveClaimed = (userProportion * currentTotalReceivedWETH) / 1e18;\r\n        uint256 claimable;\r\n    \r\n\r\n        if (userShouldHaveClaimed >= userTotalClaimedWETH[user]) {\r\n            claimable = userShouldHaveClaimed - userTotalClaimedWETH[user];\r\n        } else {\r\n            claimable = 0;\r\n        }\r\n\r\n        uint256 remainingUnclaimed = UserUnclaimedBalances[user]; \r\n        if (claimable >= remainingUnclaimed) {\r\n        claimable = remainingUnclaimed;\r\n        }\r\n    \r\n        return claimable;\r\n   }\r\n\r\n    function claim() public nonReentrant {\r\n        require(lastUserClaimTime[msg.sender] == 0 || block.timestamp >= lastUserClaimTime[msg.sender] + claimInterval, \"You can only claim once in the allowed interval.\");\r\n\r\n        uint256 claimable = computeClaimableAmount(msg.sender); \r\n        require(claimable > 0, \"Nothing to claim.\");\r\n\r\n        uint256 contractWETHBalance = WETH_TOKEN.balanceOf(address(this));\r\n        require(contractWETHBalance >= claimable, \"Insufficient WETH balance.\");\r\n\r\n        UserUnclaimedBalances[msg.sender] -= claimable;\r\n\r\n        userTotalClaimedWETH[msg.sender] += claimable;\r\n\r\n        totalClaimedWETH += claimable;\r\n\r\n        lastUserClaimTime[msg.sender] = block.timestamp;\r\n\r\n        WETH_TOKEN.transfer(msg.sender, claimable);\r\n       \r\n\r\n        totalReceivedWETH = WETH_TOKEN.balanceOf(address(this)) + totalClaimedWETH;\r\n\r\n    }\r\n\r\n    function withdrawERC20Balance(IERC20 _token) external onlyOwner {\r\n        require(address(_token) != address(WETH_TOKEN), \"Cannot withdraw WETH through this function\");\r\n\r\n        uint256 balance = _token.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens to withdraw.\");\r\n        \r\n        _token.transfer(msg.sender, balance);\r\n    }\r\n\r\n    \r\n\r\n    \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserTotalDepositAndBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserTotalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserUnclaimedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_TOKEN\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowDeposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"altPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"computeClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositAndWrapETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBalanceWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalClaimedWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalReceivedWeth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserLastClaimedWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUserClaimTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_STAR\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ALT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_STABLE\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bonusPercent\",\"type\":\"uint256\"}],\"name\":\"setBonusPercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_starPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_altPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stablePercentage\",\"type\":\"uint256\"}],\"name\":\"setPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"starPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimedWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositedPlusBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReceivedWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTotalClaimedWETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawERC20Balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "DorkSideDepositor", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0ec3fe6be2310c7834f4bc7d97cfb8437f08e7aea9fa475c7af8c11a2638ccd2"}