{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/ExternalModules/Referral/Referral.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/*\\n    Contract to create a string referral code that can be affiliated to an address.\\n    The referral code can be converted to bytes32 via ethers \\n    \\n    v5: formatBytes32String(\\\"string\\\")\\n    v6: encodeBytes32String(\\\"string\\\")\\n*/\\ncontract Referral {\\n    // Events\\n    event SetReferral(bytes32 refCode, address user);\\n\\n    // Error types\\n    error ReferralTaken();\\n\\n    // Variables\\n    mapping(bytes32 => address) public referral;\\n\\n    /**\\n        @notice Set a referral for the specified referral code\\n        @param refCode the referral code\\n    */\\n    function setReferral(bytes32 refCode) public {\\n        // Check that the referral code is not already taken\\n        if (referral[refCode] != address(0)) revert ReferralTaken();\\n        referral[refCode] = msg.sender;\\n        emit SetReferral(refCode, msg.sender);\\n    }\\n\\n    /**\\n        @notice Get the address of the user associated with the referral code\\n        @param refCode the referral code\\n        @return address the address of the user\\n    */\\n    function getAddress(bytes32 refCode) public view returns (address) {\\n        // Return the address associated with the code\\n        return referral[refCode];\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"viaIR\": true,\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"ReferralTaken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"refCode\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"SetReferral\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"refCode\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"referral\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"refCode\",\"type\":\"bytes32\"}],\"name\":\"setReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Referral", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}