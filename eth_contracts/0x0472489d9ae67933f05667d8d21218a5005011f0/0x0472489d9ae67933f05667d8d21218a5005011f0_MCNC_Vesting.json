{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract MCNC_Vesting {\r\n    IERC20 public mainToken;\r\n    address public mainTokenAddress = 0x3Aa9EBdCF5aff192F1759F35CFD6aFe0b898FB6F;\r\n    address public rescueAddress = 0x718914A81855B7694275c5Fc452f39613CfA7990;\r\n\r\n    uint256 public startTime;\r\n\r\n    address public owner;\r\n    address public coreTeam = 0xcb7e887083193cFcB8978FC6B4B029e772978cAb;\r\n    address public coreTeam2 = 0x25B96CD237C419CAb347293f78bb230e6e4b1680;\r\n    address public techTeam = 0x0bc059ac33c6Af176de9Dde3F93CEEb127E36cDd;\r\n    address public insurance = 0x70E9737043f38F1c2fc7fF3c4E6c0F4c33A28dDe;\r\n    address public marketing = 0xD408f2e14619A3A5adF803ef4d2ba480F0B9A294;\r\n    address public marketingBackup = 0x86BE6bC393E884DB8f4c2187909B088E06Ec34BB;\r\n\r\n    uint256 public lastCoreTeamRewardTime;\r\n    uint256 public lastCoreTeam2RewardTime;\r\n    uint256 public lastTechTeamRewardTime;\r\n    uint256 public lastInsuranceRewardTime;\r\n    uint256 public lastMarketingRewardTime;\r\n    uint256 public lastMarketingBackupRewardTime;\r\n\r\n    uint256 constant public ONE_MONTH = 30 days;\r\n\r\n    constructor(IERC20 _mainToken) {\r\n        require(address(_mainToken) == mainTokenAddress, \"Provided token is not the expected token.\");\r\n\r\n        mainToken = _mainToken;\r\n        owner = msg.sender;\r\n        startTime = 1685984400; // Fixed UNIX timestamp\r\n\r\n        lastCoreTeamRewardTime = startTime;\r\n        lastCoreTeam2RewardTime = startTime;\r\n        lastTechTeamRewardTime = startTime;\r\n        lastInsuranceRewardTime = startTime;\r\n        lastMarketingRewardTime = startTime;\r\n        lastMarketingBackupRewardTime = startTime;\r\n    }\r\n\r\n    function release() public {\r\n        uint256 currentTime = block.timestamp;\r\n        uint256 periodsElapsed;\r\n        \r\n        // Core Team\r\n        periodsElapsed = (currentTime - lastCoreTeamRewardTime) / (3 * ONE_MONTH);\r\n        if (periodsElapsed > 0) {\r\n            lastCoreTeamRewardTime += periodsElapsed * 3 * ONE_MONTH;\r\n            releaseTokens(coreTeam, 250000 * 10**18 * periodsElapsed);\r\n        }\r\n\r\n        // Core Team 2\r\n        periodsElapsed = (currentTime - lastCoreTeam2RewardTime) / (3 * ONE_MONTH);\r\n        if (periodsElapsed > 0) {\r\n            lastCoreTeam2RewardTime += periodsElapsed * 3 * ONE_MONTH;\r\n            releaseTokens(coreTeam2, 250000 * 10**18 * periodsElapsed);\r\n        }\r\n\r\n        // Tech Team\r\n        periodsElapsed = (currentTime - lastTechTeamRewardTime) / ONE_MONTH;\r\n        if (periodsElapsed > 0) {\r\n            lastTechTeamRewardTime += periodsElapsed * ONE_MONTH;\r\n            releaseTokens(techTeam, 150000 * 10**18 * periodsElapsed);\r\n        }\r\n\r\n        // Insurance\r\n        periodsElapsed = (currentTime - lastInsuranceRewardTime) / (60 * ONE_MONTH);\r\n        if (periodsElapsed > 0) {\r\n            lastInsuranceRewardTime += periodsElapsed * 60 * ONE_MONTH;\r\n            releaseTokens(insurance, 1000000 * 10**18 * periodsElapsed);\r\n        }\r\n\r\n        // Marketing\r\n        periodsElapsed = (currentTime - lastMarketingRewardTime) / (12 * ONE_MONTH);\r\n        if (periodsElapsed > 0) {\r\n            lastMarketingRewardTime += periodsElapsed * 12 * ONE_MONTH;\r\n            releaseTokens(marketing, 4500000 * 10**18 * periodsElapsed);\r\n        }\r\n\r\n        // Marketing Backup\r\n        periodsElapsed = (currentTime - lastMarketingBackupRewardTime) / (24 * ONE_MONTH);\r\n        if (periodsElapsed > 0) {\r\n            lastMarketingBackupRewardTime += periodsElapsed * 24 * ONE_MONTH;\r\n            releaseTokens(marketingBackup, 1000000 * 10**18 * periodsElapsed);\r\n        }\r\n    }\r\n\r\n    function releaseTokens(address recipient, uint256 amount) private {\r\n        bool success = mainToken.transfer(recipient, amount);\r\n        require(success, \"MCNC transfer failed.\");\r\n    }\r\n\r\n    function rescueTokens(IERC20 token) public {\r\n        require(address(token) != mainTokenAddress, \"Cannot rescue the main token.\");\r\n        uint256 balance = token.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens to rescue.\");\r\n        bool success = token.transfer(rescueAddress, balance);\r\n        require(success, \"Token rescue failed.\");\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_mainToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ONE_MONTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coreTeam2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insurance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCoreTeam2RewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCoreTeamRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastInsuranceRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMarketingBackupRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMarketingRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTechTeamRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingBackup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"techTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MCNC_Vesting", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000003aa9ebdcf5aff192f1759f35cfd6afe0b898fb6f", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ce1431176a9cff66f39bbf95aeab494db214d37baa197d960fd118fc003fef53"}