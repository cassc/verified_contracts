{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/HandiedanDynamic.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\n/// @title HANDIEDAN | DYNAMIC by HANDIEDAN\\n/// @author transientlabs.xyz\\n\\n/*{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}\\n{}                                                                                                            {}\\n{}    .,;:cllooollcc:;,..                                                                                     {}\\n{}                                           .oKNNWNXOdcc:;;;;::ccccc;.                                       {}\\n{}                                   .:okd.   :KWNKo'              .,:lll;.                                   {}\\n{}                                .:xKNWWN0o,  'xx'                    .'coo:.                                {}\\n{}                              ,d0NWWWWWWWWXkc..                 ....     'lxo,                              {}\\n{}                            ,xXWWWWWWWWWWWWWNKd;.           .;oxkxxddl;.   .ckd,                            {}\\n{}                          'dXWNXOxocc:cclodk0XNNOl.        :O0d;.....:dd,    .lOd'                          {}\\n{}                        .cKNXx:.            .':oOXKx;.    cK0;         ck;     'x0c.                        {}\\n{}                       .xXXd'                   .'ckKOxl'.l0c          .dd.     .oKx.                       {}\\n{}                      'kNO;                         'ldk0xc;.          .xo        cKk'                      {}\\n{}                     'kNk'                             .,dK0o,        .ox'         cKk'                     {}\\n{}                    .xNO'                                .ONX0kl;'.';lxo.          .oXx.                    {}\\n{}                    lXK:                .;:cll:.         .OXl'coxxddo:.             .OXl                    {}\\n{}                   ,0Nd.              .cl;'.':xOo.       .OX:                        cX0,                   {}\\n{}                   lNK;              .oo.     .dXo.      .OX:                        'ONl                   {}\\n{}                  .kWk.              .xo.      cXO.      .OX:                        .xWk.                  {}\\n{}                  '0Nd.               cOo'.    cXO,      ,OXc                         oN0'                  {}\\n{}                  ,0Nl                 ,dOOkkd'cXX0kkkkkk0XXc'dkkxo,.                 lN0,                  {}\\n{}                  ,0Nl                   .';;,.cXKl;;;;;;lKXc.,;;:oOx'                oN0,                  {}\\n{}                  .ONd.                        :XO.      .OX:      'kd.              .xWO.                  {}\\n{}                  .dNk.                        cXO.      .kXc       lx.              '0Nd.                  {}\\n{}                   :XK;                        cXO.       ;0O;.   .:d;               lXX:                   {}\\n{}                   .xNd.              .';::;'. cXO.        .lddlccc:.               'ONx.                   {}\\n{}                    ,0K:            'oddoooxkOxkNO.           ....                 .dN0,                    {}\\n{}                     cKO'         .lxc.     .;dKN0:                               .lXKc                     {}\\n{}                      cKk'        ck,          'lk0x:.                           .oXXc                      {}\\n{}                       c0k'      .dd.          ,o:;o00Od:.                      ,kNK:                       {}\\n{}                        ,kO:      lx'         .xNo. .:okK0xc'.               .;xXNO,                        {}\\n{}                         .oOd.    .ox;.      ,xXx.      'o0NX0xl:,'.......,cd0NWKo.                         {}\\n{}                           'dkl.    ;ddolclok0k:.         .:xKWWNNXK0000KXNWWWXd'                           {}\\n{}                             ,oxl.    .,:ccc;.               'lONWWWWWWWWWWNKd,                             {}\\n{}                               .cdo:.                       ;,..;dKNWWWWWXOl.                               {}\\n{}                                 .,col:'.                 'dXXd.  .lKNKkl'                                  {}\\n{}                                     .;cllc:,...    ...':dKNWWNd.   ';.                                     {}\\n{}                                         .';:cccllooxkOO00Okxdl,                                            {}\\n{}                                                 ..........                                                 {}\\n{}                                                                                                            {}\\n{}                                                    __                                                      {}\\n{}                                             _ \u2553\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2584                                                    {}\\n{}                                    _,.__ _,\u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584_                                               {}\\n{}                                    _\u2588\u2588\u2588\u2588\u2588\u2580\u2514__\\\"\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584_                                             {}\\n{}                                   _\u2590\u2588\u2588\u2588\u2588\u2500__ -'  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u255d\u2559\u2580\u2588\u2584                                            {}\\n{}                                   __\u2588\u2588\u2588\u2310_  _ .\u2584 \u2559\u2580\u2559\u2559\u2514\u2500'____\u2514,__\u2593\u2584,  ,_                                     {}\\n{}                               _ ,\u2584\u00b2\u2514\u2559\u2588\u2588\u258c_ __ _ _ __  _ _ __ __  \u2588\u2588\u2588\u2588\u2588w\u2584                                    {}\\n{}                            ,\u00e7\u2592\u2514__I<` \u2559\u2580\u2588\u2584\u2584_      _^_    _|    \u2590\u2580\u2588\u2588\u2588\u258c__\u2514\u2580b\u00e7_                                {}\\n{}                         _,O\u2584L, ,\u2310^~  \u00b2\u03a6  \u2510\u2514\u2559\u2580M               _/\u2553\u2588\u2588\u2588\u2580~^\u207f\u00e7 ,\u00ed\u00b5\u03a3\u2584_                            {}\\n{}                     _ \u2584\u250c,\u00d6..,\u00c7_ \u00ace``..\u00df\u2592\u03c6\u2593\u256c\u2593\u256c\u2588\u2584_ _    ,\u2553\u2261\u2584\u2584\u2588\u2588\u2588\u2580\u2559\u250c`'\u00b5\u2310 _],..\u00bf,\u2514%                            {}\\n{}                    _A\u2559  \u00b5--.b_ '\u2310._\u207f\u2565\u255d\u256c\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584_ \u2554M\u2590\u00ac\u2590\u2565\u2584,/_/_\u250c\u2514,'_.\u255c\u2500__,\u00b5--.Q_\u2559*_                         {}\\n{}                   _,\u255d7 _\u2590,.-\u256a-.,\u0393\\\"-,\u00c5\u03c6\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588  \u258c\u2584\u2593\u2592\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u03c6_^,\u2580,-^\u2590,.-}-.,\u2502__\u00a1\u2510\u2555                       {}\\n{}                   \u0192'-\u2229__\u2590 ,.\u2558--.l,`\u2590^\u00c7\u2514\u256c\u2569\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 _\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u00ea-,b\\\",\u0192.--O. _\u2514 _\\\". \u00bc                      {}\\n{}                  \u2552\u258c_ b\u2310`_\u00bc_,-\u221e\u00ac\u00ac\u00ac\u00bd\u2500\u2590\u2248\\\\}\u2514\u2560\u258c\u2559\u2569\u2588\u2588\u2588\u2588\u2514 _\u2563\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u255d\u2568Q\u00e7\u2592\u00abM\u00ac\u00ac\u00ac\u2567-._,' \u00acg  \u2590\\\\_                    {}\\n{}                  \u2580\u2502/`\u2514_.^_\\\\  -\u2310\u00b2^`\u2559%\u2500\u00e8\u2588J\u0393\u2588\u2588\u2580\u2580\u2559'_   _\u2514\u2559\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256c\u2551\u00c5\u2310A\u2514``\u00b2*- _\u00b2'\u00ac._\u255b'\u00bb\u2320\u2514p                    {}\\n{}                 \u2590_\u2310\u2310,'\u2514\u00c7 ,\u2310`\u207f_ -^^\u2248,_\u2502>\u255d\u2593\u258c\u2580\u2588\u2584___ _     \u2514\u2559\u2588\u2588\u2580\u2580\u2562\u2569\u256b<\u0393',>^\\\"-  ~\u2514\u00ac __\u255c\u207f _\u2580 \u255f                    {}\\n{}               _\u2502\u258c \u2518,  \u00bb\u2514\u00e7 _,`'\u00ac_,\u2310__`\u00ac<\u03a3,\u2559\u2593T\u2588\u2588\u2588#\u2593\u2588\u2588\u2588\u2588\u2580\u2569\u255d\u2534\u2580\u2588\u2588\u2584|x\u2310^__\u207f_,~`^.  ,\u00d6\u2510  _\\\\ ]\u2590                     {}\\n{}                 \u255e \u255b__\\\\\\\"   /\u2559 _ .`_ \u00ac\u2565\u00c7_\u00ac\u256b\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c~\u2590\u00ac\u00ac\u00ac7`,\u2584\u2560\u2588\u258c_ ]-\u00ac`_^\u2510_  \u2518\u2510_  ^/__\u00ec\u2310\u256b                    {}\\n{}                 _\u00b5'\u2510,__\u00bb_\u2310_ _ \u00d6\u00ac._ \\\"_ _\u2569\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584,.,\u2588\u2588\u2588\u2588Q\u2559\u2588\u00bd_  \\\\_ _-7`  _\u00b2_-`_\u2310,\u00ac \u2229                    {}\\n{}                 _\u2559 _\u258c _ \u2310`\u2510__`   _\u255c`\u00ac\u2500.\u256b\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2310 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u256b\u2584-~^\u2514 _ _\u2514 _-'\u2514  ,\u03a6__\u2588_                    {}\\n{}                   \\\\\\\\\u00ac_\u207fQ_   \\\"\u00ac._ \u255b____/ '\u255a\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2563\u2588\u2569\u256b\u2550\u2550\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2265~  )__-\u00ac\u2559__ _l`_ //_                     {}\\n{}                   _\u2514\u2584\u207f   \u00ac \u0393   _\u2320`\u00ac~._\u2500____\u2590\u2559\u2559\u2580\u2580\u2514\u2590,\u00c6\u2580b \u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2563\u2592\u00c5~^_U_ _ }~^___\u00b2j\u2229                       {}\\n{}                    _* \u2592<_ \u2500`~. O_   \u2320 ,\u2584\u2584\u2588\u2588\u2588M=*\u00b2\u253c+\u2500~k~\u00ac\u2580\u2588\u2588\u2588\u2588\u2580\u256c\u2580\\\"\u0393_   \u2590.\u2310`_   -\\\" /\u2500_                        {}\\n{}                       _\u2580 __\u2248,   \u00ac_\\\"~,\u2588\u2588\u2588\u2580r\u2514\u2229     \u2502__ \u0393   `\u03a3\u2563   ,.\u255e\u00ac^_ _   ,<`_,\u255b\u2514                          {}\\n{}                          \u00b2w\u2584 __\u00ac- _\u2590\u2588\u2588\u2588\u2553\u258c _\u2592`^^\u00ac\u00ac\u2502\u00ac\u00ac\u00ac[^^`__\u2590\u2559\u2580\u2588\u2588\u2584\u2590_ _,-^ _ \u00c5#\u2580__                           {}\\n{}                          _ \u2514\u2248J\u2500\u2584 _\u2588\u2588\u2588\u2588\u2588., b `_ _|  _\u0393_ _  \u2590 ,.\u00f7\u2588\u2588\u2588 _ ]-Q\u2500\u2559'_                               {}\\n{}                                _\u2514\u207fw\u2588\u2559\u2568\u2569\u2588\u2592 ,\u0393\u2500'`\\\\_\u2502  ,\u2560\u2584\u2500_\u2580\u2310\u2502    \u2590\u2588\u2588\u2588\u2584*\u2514'_                                  {}\\n{}                                      '|\\\"\u2559\u2580\u2584\u2593\u2584#\u2588\u2593\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c^^\u250c\u2588\u00b5x\u2310j\u2588\u2588\u2588\u2588\u2310                                      {}\\n{}                                           ^\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588j /  \u2584\u2588\u2588\u2588\u2588\u2588                                       {}\\n{}                                            _\u2514\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2514_ _\u2559\u2580                                       {}\\n{}                                              __\u2559\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2559\u00ac__      _                                       {}\\n{}                                                 _ __ _                                                     {}\\n{}                                                                                                            {}\\n{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}{}*/\\n\\npragma solidity 0.8.19;\\n\\nimport {TLCreator} from \\\"tl-creator-contracts/TLCreator.sol\\\";\\n\\ncontract HandiedanDynamic is TLCreator {\\n    constructor(\\n        address defaultRoyaltyRecipient,\\n        uint256 defaultRoyaltyPercentage,\\n        address[] memory admins,\\n        bool enableStory,\\n        address blockListRegistry\\n    )\\n    TLCreator(\\n        0x12Ab97BDe4a92e6261fca39fe2d9670E40c5dAF2,\\n        \\\"HANDIEDAN | DYNAMIC\\\",\\n        \\\"HANDY\\\",\\n        defaultRoyaltyRecipient,\\n        defaultRoyaltyPercentage,\\n        msg.sender,\\n        admins,\\n        enableStory,\\n        blockListRegistry\\n    )\\n    {}\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/src/TLCreator.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport {ERC1967Proxy} from \\\"openzeppelin/proxy/ERC1967/ERC1967Proxy.sol\\\";\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                            TLCreator\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @title TLCreator.sol\\n/// @notice Transient Labs Core Creator Contract\\n/// @dev this works for either ERC721TL or ERC1155TL contracts, just need to change the implementation\\n/// @author transientlabs.xyz\\n/// @custom:version 2.3.0\\ncontract TLCreator is ERC1967Proxy {\\n    /// @param name: the name of the contract\\n    /// @param symbol: the symbol of the contract\\n    /// @param defaultRoyaltyRecipient: the default address for royalty payments\\n    /// @param defaultRoyaltyPercentage: the default royalty percentage of basis points (out of 10,000)\\n    /// @param initOwner: initial owner of the contract\\n    /// @param admins: array of admin addresses to add to the contract\\n    /// @param enableStory: a bool deciding whether to add story fuctionality or not\\n    /// @param blockListRegistry: address of the blocklist registry to use\\n    constructor(\\n        address implementation,\\n        string memory name,\\n        string memory symbol,\\n        address defaultRoyaltyRecipient,\\n        uint256 defaultRoyaltyPercentage,\\n        address initOwner,\\n        address[] memory admins,\\n        bool enableStory,\\n        address blockListRegistry\\n    )\\n        ERC1967Proxy(\\n            implementation,\\n            abi.encodeWithSelector(\\n                0x1fbd2402, // selector for \\\"initialize(string,string,address,uint256,address,address[],bool,address)\\\"\\n                name,\\n                symbol,\\n                defaultRoyaltyRecipient,\\n                defaultRoyaltyPercentage,\\n                initOwner,\\n                admins,\\n                enableStory,\\n                blockListRegistry\\n            )\\n        )\\n    {}\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/IERC1967.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade is IERC1967 {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.3) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.9._\\n */\\ninterface IERC1967 {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"blocklist/=lib/tl-creator-contracts/lib/blocklist/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/tl-creator-contracts/lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"openzeppelin-upgradeable/=lib/tl-creator-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"openzeppelin/=lib/tl-creator-contracts/lib/openzeppelin-contracts/contracts/\",\r\n      \"sstore2/=lib/tl-creator-contracts/lib/sstore2/contracts/\",\r\n      \"story-contract/=lib/tl-creator-contracts/lib/story-contract/src/\",\r\n      \"tl-blocklist/=lib/tl-creator-contracts/lib/blocklist/src/\",\r\n      \"tl-creator-contracts/=lib/tl-creator-contracts/src/\",\r\n      \"tl-creator/=lib/tl-creator-contracts/src/\",\r\n      \"tl-sol-tools/=lib/tl-creator-contracts/lib/tl-sol-tools/src/\",\r\n      \"tl-story/=lib/tl-creator-contracts/lib/story-contract/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 2000\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultRoyaltyRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"defaultRoyaltyPercentage\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"enableStory\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"blockListRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "HandiedanDynamic", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "2000", "ConstructorArguments": "000000000000000000000000fac0d96c6c94c269f27f508de8a44455e89cc92e00000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000056fe4de01b15bb2afa969f914692867acac27ba50000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0x12ab97bde4a92e6261fca39fe2d9670e40c5daf2", "SwarmSource": ""}