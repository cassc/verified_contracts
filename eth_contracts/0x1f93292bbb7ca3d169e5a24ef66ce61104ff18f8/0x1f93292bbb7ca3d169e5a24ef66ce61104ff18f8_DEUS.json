{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"DEUS.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\n\\r\\n/**\\r\\n\\r\\n                    https://www.deus-token.com\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2844\u2800\u28a0\u2800\u28a0\u2800\u2880\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2833\u2844\u2800\u2800\u2800\u28b0\u2800\u2800\u2847\u2846\u28b8\u2800\u28b8\u2800\u28f8\u2880\u2840\u2800\u2880\u2854\u2800\u2880\u2854\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c4\u2800\u2800\u2818\u28a6\u2840\u2800\u28b8\u2847\u2800\u28ff\u28e7\u28b8\u2800\u284e\u2800\u2847\u28f8\u2801\u28a0\u280f\u2800\u2860\u288b\u2800\u2880\u2854\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u28c4\u2808\u2811\u2884\u2840\u2808\u28b3\u28c4\u2888\u28c7\u28c8\u28ff\u28ff\u28f8\u28c2\u28c7\u28f8\u28a1\u2807\u28a0\u280f\u2880\u281e\u28e1\u280a\u2860\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2826\u28c8\u2819\u28a6\u28c0\u2819\u28a6\u28e4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u280b\u2809\u281b\u283b\u28f4\u280b\u2874\u288b\u285e\u2881\u281c\u2801\u2880\u2814\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u2884\u2858\u28a7\u28c4\u2858\u28a7\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2840\u2800\u2800\u2818\u28bf\u28e0\u285f\u28e0\u281f\u2880\u2878\u2803\u2800\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2826\u28c4\u2849\u2832\u28ac\u287b\u28ff\u28ff\u28ff\u28ff\u281b\u28bf\u283f\u283f\u28bf\u28ff\u28ff\u28ff\u28c4\u2800\u2800\u2808\u28bb\u2876\u2881\u2874\u280b\u2880\u2874\u280b\u2800\u28c0\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2809\u2813\u2826\u28c0\u2849\u2813\u2836\u28ed\u28ff\u28ff\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28bf\u28ff\u28ff\u2846\u2800\u2800\u2808\u28d7\u2809\u28e0\u2816\u2801\u28c0\u2834\u280b\u2880\u2800\u2800\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2809\u2813\u2822\u2884\u28c9\u2833\u28b6\u28e4\u28fd\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u28ff\u28ff\u2844\u2800\u2800\u28b8\u281f\u28c1\u2874\u280a\u2881\u2864\u281a\u28c1\u2834\u280b\u2800\u2800\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2840\u2809\u2813\u2832\u28a4\u28c8\u2849\u2832\u28ae\u28fd\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28ff\u28e7\u2800\u2800\u28b8\u281f\u28c1\u28e4\u281e\u28c9\u2874\u281a\u2801\u2880\u28e0\u2816\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2812\u2826\u28a4\u28c8\u2819\u281b\u2836\u28f6\u28ff\u28ff\u28d7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u28ff\u28ff\u2844\u2800\u2818\u287f\u28cb\u28f4\u281e\u2809\u2880\u28e4\u2816\u2809\u28c0\u2834\u280a\u2880\u2860\u2816\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2813\u2832\u2824\u28c4\u2840\u2800\u2800\u2809\u2813\u2832\u28a4\u28cd\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u28ff\u28c7\u2800\u2844\u2839\u28cf\u28e1\u28f4\u281e\u280b\u28c0\u2874\u281a\u2881\u2860\u2816\u2809\u2880\u2874\u280a\u2800\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2812\u2832\u28a4\u28c9\u2859\u2813\u2836\u28b6\u28e4\u28c4\u28c8\u2819\u28ff\u28ff\u28ff\u28f7\u2864\u2824\u2814\u280b\u2800\u2800\u2880\u287f\u28ff\u2844\u28b0\u2800\u2808\u283b\u28c4\u28f4\u281a\u28c1\u28e4\u281e\u2809\u2800\u28e0\u2816\u2801\u2880\u2864\u280a\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2832\u2824\u28c4\u2840\u2800\u2800\u2809\u2819\u2812\u2826\u28ec\u28c9\u289b\u28ff\u28bb\u28ff\u28ff\u28ff\u28e7\u28c0\u28c0\u28e0\u2824\u2816\u280b\u2800\u2838\u28ff\u285c\u2846\u2800\u2800\u2800\u2819\u283b\u28cf\u2801\u28e0\u2874\u280b\u2880\u2864\u281e\u2801\u28c0\u2874\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2812\u2826\u28a4\u28c0\u2840\u2809\u2819\u2813\u2836\u28f6\u28e4\u28f4\u28e0\u287f\u280b\u2801\u2800\u28ff\u284f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2827\u28e4\u281e\u280b\u28e0\u2874\u280a\u2801\u28c0\u2824\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2824\u28a4\u28c0\u2800\u2800\u2809\u2819\u2832\u28a6\u28e4\u28e4\u28e9\u287f\u280b\u2800\u2800\u2800\u2800\u28bb\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u2803\u2839\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28b6\u281f\u2881\u28e0\u2876\u281a\u2881\u2860\u2816\u2808\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2812\u2812\u2826\u28a4\u28e4\u28c8\u28c9\u28fb\u287f\u2803\u2800\u2800\u2800\u2800\u2800\u28b8\u28f7\u2800\u28a0\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u28b8\u2800\u2800\u28fb\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28a6\u283e\u288b\u28e1\u2834\u280a\u2881\u2860\u2834\u2802\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2802\u2820\u2824\u2824\u28c0\u28c0\u2848\u28b9\u287f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u2880\u28df\u2879\u2877\u2840\u2800\u2800\u2800\u2800\u287e\u28c0\u28f0\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28d7\u28cb\u28e4\u2836\u281a\u2809\u28c0\u2860\u2804\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2809\u2819\u2813\u2832\u2826\u2824\u28e4\u28e4\u28c4\u28c9\u287f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u2847\u28fe\u28ff\u2830\u2858\u28fd\u28c4\u2800\u2800\u2880\u2847\u28a0\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u284f\u28c0\u2864\u2814\u280b\u2881\u28e0\u2824\u2802\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2880\u28c0\u2841\u281b\u2812\u2832\u2824\u2824\u28a4\u28c4\u28c9\u28ff\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28ff\u28ff\u28b1\u285f\u28cf\u2803\u2803\u2800\u28b8\u2840\u2800\u28fc\u2880\u287e\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u28e1\u2864\u2836\u281b\u2889\u28c0\u2824\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2809\u2809\u281b\u2833\u2836\u28b6\u28e6\u28e4\u28fc\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28e1\u28fc\u28c7\u28b9\u2800\u2800\u2800\u28b8\u28f7\u28f4\u28ff\u287f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u28c5\u2864\u2814\u280a\u2809\u2880\u28c0\u2840\u2800\u2804\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2810\u2812\u2802\u2824\u2824\u28a4\u28e9\u284f\u2800\u2800\u2800\u2800\u2800\u2800\u28fc\u28ff\u281f\u28bb\u2801\u28ff\u28bf\u2848\u28a7\u2800\u2800\u28f0\u287f\u2847\u28b9\u281b\u283f\u28f6\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b3\u2834\u2816\u281a\u2809\u28c9\u28c0\u2800\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2809\u2809\u281b\u2812\u2836\u2826\u28a4\u28e4\u28fe\u2800\u2800\u2800\u2800\u2800\u2800\u28fa\u28ff\u2803\u2800\u28b8\u2840\u2838\u2844\u28b9\u28f6\u28f7\u284b\u2801\u2880\u2807\u28b8\u2847\u2800\u28bb\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2838\u2857\u2812\u280b\u28c9\u28c0\u28c0\u2824\u2824\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2810\u2812\u2824\u2824\u2824\u28c0\u28f8\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u28bf\u2847\u2800\u2800\u2800\u28b3\u2840\u2839\u2814\u28bb\u28ff\u2833\u28c4\u281e\u2800\u287e\u2800\u2800\u2838\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u281b\u280b\u2889\u28c0\u28c0\u2840\u2800\u2800\u2800\u2800\\r\\n\u2800\u2809\u2809\u2810\u2812\u2812\u2836\u2836\u28b6\u28f6\u285f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28e7\u2800\u2800\u2800\u2800\u2833\u28c4\u2800\u28b8\u28f7\u2800\u2819\u2800\u287c\u2801\u2800\u2800\u2800\u28ff\u28c7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u280b\u28cb\u28c9\u28c0\u2824\u2824\u2810\u2800\u2800\u2801\\r\\n\u2800\u2800\u2820\u2824\u2824\u2824\u28a4\u28c4\u28e0\u28f8\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28ff\u2800\u2800\u2800\u2880\u28e0\u28fe\u28ff\u28ff\u28ff\u2876\u28b6\u28fe\u2841\u2800\u2800\u2800\u2800\u28b8\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28cf\u28c9\u28c0\u2820\u2804\u2804\u2800\u2800\u2800\u2800\\r\\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u2844\u28a0\u285e\u2809\u28b0\u28ff\u28ff\u28ff\u28ff\u28f7\u28b8\u28ff\u285f\u28b3\u28e6\u2800\u2800\u2800\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28e7\u28f4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u2844\u2800\\r\\n\u2800\u2800\u2800\u2800\u2809\u2809\u2809\u2809\u281b\u28bb\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fd\u285f\u2809\u2800\u28a0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2838\u28ff\u2847\u2808\u28ff\u2809\u2832\u28a4\u28f8\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28df\u28cb\u28c9\u28c9\u28c9\u2840\u2840\u2800\u2800\u2800\\r\\n\u2800\u2800\u2810\u2812\u2812\u2812\u2812\u2812\u2812\u28ba\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u2847\u2800\u2800\u28ff\u28ff\u28ff\u284f\u28ff\u28ff\u28ff\u2826\u28ff\u2847\u2800\u28ff\u2800\u2800\u2800\u2808\u28bb\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28e7\u28e4\u28e4\u28e4\u2864\u2824\u2824\u2824\u2824\u2800\\r\\n\u2800\u2800\u2800\u2824\u2824\u2824\u2834\u2836\u2836\u283e\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u2847\u2800\u2800\u2800\u281b\u283b\u2801\u2809\u283f\u283f\u2800\u28bf\u28e7\u2800\u28ff\u2800\u2800\u2800\u2800\u2800\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2827\u2824\u2824\u2804\u2800\u2800\u2800\u2810\u2812\u2802\\r\\n\u2800\u2800\u2800\u2800\u2800\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\r\\n**/\\r\\npragma solidity ^0.8.21;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        return c;\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface ERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    function getOwner() external view returns (address);\\r\\n\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n\\r\\n    function allowance(address _owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\nabstract contract Ownable {\\r\\n    address internal owner;\\r\\n\\r\\n    constructor(address _owner) {\\r\\n        owner = _owner;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner(msg.sender), \\\"!OWNER\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isOwner(address account) public view returns (bool) {\\r\\n        return account == owner;\\r\\n    }\\r\\n\\r\\n    function renounceOwnership() public onlyOwner {\\r\\n        owner = address(0);\\r\\n        emit OwnershipTransferred(address(0));\\r\\n    }\\r\\n\\r\\n    event OwnershipTransferred(address owner);\\r\\n}\\r\\n\\r\\ninterface IDEXFactory {\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IDEXRouter {\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        returns (\\r\\n            uint256 amountA,\\r\\n            uint256 amountB,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint256 amountTokenDesired,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        returns (\\r\\n            uint256 amountToken,\\r\\n            uint256 amountETH,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable;\\r\\n\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract DEUS is ERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    address routerAdress = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\r\\n    address DEAD = 0x000000000000000000000000000000000000dEaD;\\r\\n    address immutable DEV_ADDRESS = 0x0A7f9969b614b119eaB9D3A52009Ab982196848d;\\r\\n\\r\\n    string constant _name = \\\"DEUS\\\";\\r\\n    string constant _symbol = \\\"DEUS\\\";\\r\\n    uint8 constant _decimals = 9;\\r\\n    uint256 _totalSupply = 333_000_000_000 * (10**_decimals);\\r\\n    uint256 public _maxWalletAmount = 4_990_000_000 * (10**_decimals);\\r\\n    mapping(address => uint256) _balances;\\r\\n    mapping(address => mapping(address => uint256)) _allowances;\\r\\n    mapping(address => bool) isFeeExempt;\\r\\n    mapping(address => bool) isTxLimitExempt;\\r\\n    uint256 TokenFee = 3;\\r\\n    address public TokenTeam = msg.sender;\\r\\n    IDEXRouter public router;\\r\\n    address public pair;\\r\\n    bool public swapEnabled = true;\\r\\n    bool public feesEnabled = true;\\r\\n    uint256 public swapThreshold = (_totalSupply / 1000) * 3;\\r\\n    bool inSwap;\\r\\n    modifier swapping() {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n\\r\\n    constructor() Ownable(msg.sender) {\\r\\n        router = IDEXRouter(routerAdress);\\r\\n        pair = IDEXFactory(router.factory()).createPair(\\r\\n            router.WETH(),\\r\\n            address(this)\\r\\n        );\\r\\n        _allowances[address(this)][address(router)] = type(uint256).max;\\r\\n        address _owner = owner;\\r\\n        isFeeExempt[_owner] = true;\\r\\n        isTxLimitExempt[_owner] = true;\\r\\n        _balances[_owner] = _totalSupply;\\r\\n        emit Transfer(address(0), _owner, _totalSupply);\\r\\n    }\\r\\n\\r\\n    function name() external pure override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function totalSupply() external view override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function decimals() external pure override returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function symbol() external pure override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function getOwner() external view override returns (address) {\\r\\n        return owner;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function shouldSwapBack() internal view returns (bool) {\\r\\n        return\\r\\n            msg.sender != pair &&\\r\\n            !inSwap &&\\r\\n            swapEnabled &&\\r\\n            _balances[address(this)] >= swapThreshold;\\r\\n    }\\r\\n\\r\\n    function shouldTakeFee(address sender) internal view returns (bool) {\\r\\n        return !isFeeExempt[sender];\\r\\n    }\\r\\n\\r\\n    function allowance(address holder, address spender)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _allowances[holder][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _allowances[msg.sender][spender] = amount;\\r\\n        emit Approval(msg.sender, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        return _transferFrom(msg.sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external override returns (bool) {\\r\\n        if (_allowances[sender][msg.sender] != type(uint256).max) {\\r\\n            _allowances[sender][msg.sender] = _allowances[sender][msg.sender]\\r\\n                .sub(amount, \\\"Insufficient Allowance\\\");\\r\\n        }\\r\\n\\r\\n        return _transferFrom(sender, recipient, amount);\\r\\n    }\\r\\n\\r\\n    function setDeusTax(uint256 _TokenFee) external onlyOwner {\\r\\n        require(_TokenFee <= 5, \\\"Must keep fees at 5% or less\\\");\\r\\n        TokenFee = _TokenFee;\\r\\n    }\\r\\n\\r\\n    function setDeusWalletSize(uint256 _percentage) external onlyOwner {\\r\\n        if (_percentage == 100) {\\r\\n            _maxWalletAmount = type(uint256).max;\\r\\n        } else {\\r\\n            _maxWalletAmount = _totalSupply.mul(_percentage).div(100);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function takeFee(address sender, uint256 amount)\\r\\n        internal\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 feeAmount = amount.mul(TokenFee).div(100);\\r\\n        _balances[address(this)] = _balances[address(this)].add(feeAmount);\\r\\n        emit Transfer(sender, address(this), feeAmount);\\r\\n        return amount.sub(feeAmount);\\r\\n    }\\r\\n\\r\\n    function swapBack() internal swapping {\\r\\n        uint256 contractTokenBalance = swapThreshold;\\r\\n        uint256 amountToSwap = contractTokenBalance;\\r\\n\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = router.WETH();\\r\\n\\r\\n        router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            amountToSwap,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n\\r\\n        uint256 amountETHMarketing = address(this).balance;\\r\\n\\r\\n        (\\r\\n            bool MarketingSuccess,\\r\\n\\r\\n        ) = payable(TokenTeam).call{value: amountETHMarketing}(\\\"\\\");\\r\\n        require(MarketingSuccess, \\\"receiver rejected ETH transfer\\\");\\r\\n    }\\r\\n\\r\\n    function _transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal returns (bool) {\\r\\n        if (inSwap) {\\r\\n            return _basicTransfer(sender, recipient, amount);\\r\\n        }\\r\\n\\r\\n        if (recipient != pair && recipient != DEAD) {\\r\\n            require(\\r\\n                isTxLimitExempt[recipient] ||\\r\\n                    _balances[recipient] + amount <= _maxWalletAmount,\\r\\n                \\\"Transfer amount exceeds the bag size.\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        if (shouldSwapBack()) {\\r\\n            swapBack();\\r\\n        }\\r\\n\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"Insufficient Balance\\\"\\r\\n        );\\r\\n\\r\\n        uint256 amountReceived = feesEnabled && shouldTakeFee(sender)\\r\\n            ? takeFee(sender, amount)\\r\\n            : amount;\\r\\n\\r\\n        _balances[recipient] = _balances[recipient].add(amountReceived);\\r\\n\\r\\n        emit Transfer(sender, recipient, amountReceived);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _basicTransfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) internal returns (bool) {\\r\\n        _balances[sender] = _balances[sender].sub(\\r\\n            amount,\\r\\n            \\\"Insufficient Balance\\\"\\r\\n        );\\r\\n        _balances[recipient] = _balances[recipient].add(amount);\\r\\n        emit Transfer(sender, recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TokenTeam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IDEXRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_TokenFee\",\"type\":\"uint256\"}],\"name\":\"setDeusTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeusWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "DEUS", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}