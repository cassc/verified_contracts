{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"PresaleMain.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\ncontract PresaleMain {\\n    address public owner;\\n    address public presaleWallet;\\n    uint256 public maxParticipants;\\n    uint256 public currentParticipants;\\n    bool public saleActive;\\n    uint256 public entryFee;\\n\\n    mapping(address => bool) public kolAddresses;\\n\\n    event KolSlotPurchased(address purchaser);\\n    event SaleStopped();\\n    event FundsWithdrawn(address recipient, uint256 amount);\\n\\n    constructor(uint256 _maxParticipants, uint256 _entryFee, address _presaleWallet) {\\n        owner = msg.sender;\\n        maxParticipants = _maxParticipants;\\n        entryFee = _entryFee;\\n        saleActive = true;\\n        currentParticipants = 0;\\n        presaleWallet = _presaleWallet;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Not the contract owner\\\");\\n        _;\\n    }\\n\\n    modifier isSaleActive() {\\n        require(saleActive, \\\"The presale has been stopped\\\");\\n        _;\\n    }\\n\\n        function buyKolSlot() external payable isSaleActive {\\n        require(currentParticipants < maxParticipants, \\\"No more slots available\\\");\\n        require(!kolAddresses[msg.sender], \\\"Address already holds a KOL slot\\\");\\n        require(msg.value == entryFee, \\\"Incorrect ETH sent\\\");\\n\\n        kolAddresses[msg.sender] = true;\\n        currentParticipants++;\\n\\n        emit KolSlotPurchased(msg.sender);\\n    }\\n\\n    function stopSale() external onlyOwner {\\n        saleActive = false;\\n        emit SaleStopped();\\n    }\\n\\n    function withdrawFunds() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No funds to withdraw\\\");\\n\\n        payable(presaleWallet).transfer(balance);\\n        emit FundsWithdrawn(presaleWallet, balance);\\n    }\\n\\n    function setPresaleWallet(address _newPresaleWallet) external onlyOwner {\\n        presaleWallet = _newPresaleWallet;\\n    }\\n\\n    function availableSlots() external view returns (uint256) {\\n        return maxParticipants - currentParticipants;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxParticipants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_presaleWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"}],\"name\":\"KolSlotPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SaleStopped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"availableSlots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyKolSlot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"kolAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPresaleWallet\",\"type\":\"address\"}],\"name\":\"setPresaleWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PresaleMain", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000004b000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000076f32bee330e5447bfe0d5c45e3e5b9309ce7b48", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}