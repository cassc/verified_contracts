{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <=0.8.17;\r\n\r\ninterface IBlockATMPayout {\r\n\r\n    function getOwnerAddressFlag(address ownerAddress) external view returns(bool);   \r\n}\r\n\r\ncontract BlockATMPayoutBusiness {\r\n\r\n    address public onwer;\r\n\r\n    mapping(address => address) private payoutMap;\r\n\r\n    constructor() {\r\n        onwer = msg.sender;\r\n    }\r\n\r\n    event SetSettleAddress(address settleAddress);\r\n\r\n    modifier onlyOwner() {\r\n        require(onwer == msg.sender, \"Not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyPayout(address payoutContract) {\r\n        require(IBlockATMPayout(payoutContract).getOwnerAddressFlag(msg.sender), \"Not the payout owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    function getPayout(address autoAddress) public view returns(address)  {\r\n        return payoutMap[autoAddress];\r\n    }\r\n\r\n    function setPayout(address autoAddress,address payoutContract) public onlyPayout(payoutContract) returns(bool)  {\r\n        payoutMap[autoAddress] = payoutContract;\r\n        payoutMap[payoutContract] = autoAddress;\r\n        return true;\r\n    }\r\n\r\n    function deletePayout(address payoutContract) public onlyPayout(payoutContract) returns(bool)  {\r\n        payoutMap[payoutContract] = address(0);\r\n        return true;\r\n    }\r\n\r\n    function checkPayout(address autoAddress) public view returns (address) {\r\n        address payoutAddress = payoutMap[autoAddress];\r\n        require(payoutAddress != address(0), \"payout address is null\");\r\n        require(payoutMap[payoutAddress] == autoAddress, \"payout address is error\");\r\n        return payoutAddress;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"settleAddress\",\"type\":\"address\"}],\"name\":\"SetSettleAddress\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoAddress\",\"type\":\"address\"}],\"name\":\"checkPayout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payoutContract\",\"type\":\"address\"}],\"name\":\"deletePayout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoAddress\",\"type\":\"address\"}],\"name\":\"getPayout\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onwer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"autoAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payoutContract\",\"type\":\"address\"}],\"name\":\"setPayout\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlockATMPayoutBusiness", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://21e7f3b868856ab02f37e94717fe663d7b8c1cc6400c025f2079df43f450cdbb"}