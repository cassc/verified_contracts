{"SourceCode": "# @version 0.3.9\r\n\r\n\"\"\"\r\n@title LiquidationsOTC\r\n@author [Zharta](https://zharta.io/)\r\n@notice The liquidations peripheral contract exists as the main interface to handle liquidations\r\n\"\"\"\r\n\r\n\r\n# Interfaces\r\n\r\nfrom vyper.interfaces import ERC20 as IERC20\r\nfrom vyper.interfaces import ERC721 as IERC721\r\n\r\ninterface ILoans:\r\n    def getLoan(_borrower: address, _loanId: uint256) -> Loan: view\r\n    def erc20TokenContract() -> address: view\r\n\r\n\r\ninterface ILendingPool:\r\n    def lenderFunds(_lender: address) -> InvestorFunds: view\r\n    def erc20TokenContract() -> address: view\r\n    def receiveFundsFromLiquidation(\r\n        _borrower: address,\r\n        _amount: uint256,\r\n        _rewardsAmount: uint256,\r\n        _distributeToProtocol: bool,\r\n        _origin: String[30]\r\n    ): nonpayable\r\n    def receiveFundsFromLiquidationEth(\r\n        _borrower: address,\r\n        _amount: uint256,\r\n        _rewardsAmount: uint256,\r\n        _distributeToProtocol: bool,\r\n        _origin: String[30]\r\n    ): payable\r\n    def receiveCollateralFromLiquidation(\r\n        _borrower: address,\r\n        _amount: uint256,\r\n        _origin: String[30]\r\n    ): nonpayable\r\n\r\n\r\ninterface ICollateralVault:\r\n    def transferCollateralFromLiquidation(_wallet: address, _collateralAddress: address, _tokenId: uint256): nonpayable\r\n\r\n\r\ninterface ISelf:\r\n    def initialize(\r\n        _owner: address,\r\n        _gracePeriodDuration: uint256,\r\n        _loansContract: address,\r\n        _lendingPoolContract: address,\r\n        _collateralVaultContract: address\r\n    ): nonpayable\r\n\r\n\r\n\r\n# Structs\r\n\r\n\r\nstruct Collateral:\r\n    contractAddress: address\r\n    tokenId: uint256\r\n    amount: uint256\r\n\r\nstruct Loan:\r\n    id: uint256\r\n    amount: uint256\r\n    interest: uint256 # parts per 10000, e.g. 2.5% is represented by 250 parts per 10000\r\n    maturity: uint256\r\n    startTime: uint256\r\n    collaterals: DynArray[Collateral, 100]\r\n    paidPrincipal: uint256\r\n    paidInterestAmount: uint256\r\n    started: bool\r\n    invalidated: bool\r\n    paid: bool\r\n    defaulted: bool\r\n    canceled: bool\r\n\r\nstruct InvestorFunds:\r\n    currentAmountDeposited: uint256\r\n    totalAmountDeposited: uint256\r\n    totalAmountWithdrawn: uint256\r\n    sharesBasisPoints: uint256\r\n    activeForRewards: bool\r\n\r\nstruct Liquidation:\r\n    lid: bytes32\r\n    collateralAddress: address\r\n    tokenId: uint256\r\n    startTime: uint256\r\n    gracePeriodMaturity: uint256\r\n    principal: uint256\r\n    interestAmount: uint256\r\n    apr: uint256 # parts per 10000, e.g. 2.5% is represented by 250 parts per 10000\r\n    gracePeriodPrice: uint256\r\n    borrower: address\r\n    loanId: uint256\r\n    loansCoreContract: address\r\n    erc20TokenContract: address\r\n\r\n\r\n# Events\r\n\r\nevent ProxyCreated:\r\n    proxyAddress: address\r\n    owner: address\r\n    gracePeriodDuration: uint256\r\n    loansContract: address\r\n    lendingPoolContract: address\r\n    collateralVaultContract: address\r\n\r\nevent OwnershipTransferred:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n\r\nevent OwnerProposed:\r\n    ownerIndexed: indexed(address)\r\n    proposedOwnerIndexed: indexed(address)\r\n    owner: address\r\n    proposedOwner: address\r\n\r\nevent AdminTransferred:\r\n    adminIndexed: indexed(address)\r\n    newAdminIndexed: indexed(address)\r\n    newAdmin: address\r\n\r\nevent GracePeriodDurationChanged:\r\n    currentValue: uint256\r\n    newValue: uint256\r\n\r\nevent MaxPenaltyFeeSet:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    currentValue: uint256\r\n    newValue: uint256\r\n    erc20TokenContract: address\r\n\r\nevent LiquidationAdded:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    collateralAddressIndexed: indexed(address)\r\n    liquidationId: bytes32\r\n    collateralAddress: address\r\n    tokenId: uint256\r\n    erc20TokenContract: address\r\n    gracePeriodPrice: uint256\r\n    lenderPeriodPrice: uint256\r\n    gracePeriodMaturity: uint256\r\n    lenderPeriodMaturity: uint256\r\n    loansCoreContract: address\r\n    loanId: uint256\r\n    borrower: address\r\n\r\nevent LiquidationRemoved:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    collateralAddressIndexed: indexed(address)\r\n    liquidationId: bytes32\r\n    collateralAddress: address\r\n    tokenId: uint256\r\n    erc20TokenContract: address\r\n    loansCoreContract: address\r\n    loanId: uint256\r\n    borrower: address\r\n\r\nevent NFTPurchased:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    collateralAddressIndexed: indexed(address)\r\n    buyerAddressIndexed: indexed(address)\r\n    liquidationId: bytes32\r\n    collateralAddress: address\r\n    tokenId: uint256\r\n    amount: uint256\r\n    buyerAddress: address\r\n    erc20TokenContract: address\r\n    loansCoreContract: address\r\n    method: String[30] # possible values: GRACE_PERIOD, LENDER_PERIOD, BACKSTOP_PERIOD_NFTX, BACKSTOP_PERIOD_ADMIN\r\n\r\nevent NFTClaimed:\r\n    erc20TokenContractIndexed: indexed(address)\r\n    collateralAddressIndexed: indexed(address)\r\n    buyerAddressIndexed: indexed(address)\r\n    liquidationId: bytes32\r\n    collateralAddress: address\r\n    tokenId: uint256\r\n    amount: uint256\r\n    buyerAddress: address\r\n    erc20TokenContract: address\r\n    loansCoreContract: address\r\n    method: String[30] # possible values: GRACE_PERIOD, LENDER_PERIOD, BACKSTOP_PERIOD_NFTX, BACKSTOP_PERIOD_ADMIN\r\n\r\nevent PaymentSent:\r\n    walletIndexed: indexed(address)\r\n    wallet: address\r\n    amount: uint256\r\n\r\nevent PaymentReceived:\r\n    walletIndexed: indexed(address)\r\n    wallet: address\r\n    amount: uint256\r\n\r\n\r\n# Global variables\r\n\r\nowner: public(address)\r\nproposedOwner: public(address)\r\n\r\ngracePeriodDuration: public(uint256)\r\n\r\nliquidations: HashMap[bytes32, Liquidation]\r\nliquidatedLoans: HashMap[bytes32, bool]\r\n\r\nloansContract: public(ILoans)\r\nlendingPoolContract: public(ILendingPool)\r\ncollateralVaultContract: public(ICollateralVault)\r\nmaxPenaltyFee: public(HashMap[address, uint256])\r\n\r\n##### INTERNAL METHODS - VIEW #####\r\n\r\n@pure\r\n@internal\r\ndef _computeLiquidationId(_collateralAddress: address, _collateralId: uint256, _timestamp: uint256) -> bytes32:\r\n    return keccak256(_abi_encode(_collateralAddress, convert(_collateralId, bytes32), convert(_timestamp, bytes32)))\r\n\r\n\r\n@pure\r\n@internal\r\ndef _computeLiquidationKey(_collateralAddress: address, _collateralId: uint256) -> bytes32:\r\n    return keccak256(_abi_encode(_collateralAddress, convert(_collateralId, bytes32)))\r\n\r\n\r\n@pure\r\n@internal\r\ndef _computeLiquidatedLoansKey(_borrower: address, _loansCoreContract: address, _loanId: uint256) -> bytes32:\r\n    return keccak256(_abi_encode(_borrower, _loansCoreContract, convert(_loanId, bytes32)))\r\n\r\n\r\n@view\r\n@internal\r\ndef _isLoanLiquidated(_borrower: address, _loansCoreContract: address, _loanId: uint256) -> bool:\r\n    return self.liquidatedLoans[self._computeLiquidatedLoansKey(_borrower, _loansCoreContract, _loanId)]\r\n\r\n\r\n@view\r\n@internal\r\ndef _getLiquidation(_collateralAddress: address, _tokenId: uint256) -> Liquidation:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)]\r\n\r\n\r\n@pure\r\n@internal\r\ndef _penaltyFee(_principal: uint256, _max_penalty_fee: uint256) -> uint256:\r\n    return min(250 * _principal / 10000, _max_penalty_fee) if _max_penalty_fee > 0 else (250 * _principal / 10000)\r\n\r\n\r\n@pure\r\n@internal\r\ndef _computeNFTPrice(principal: uint256, interestAmount: uint256, _max_penalty_fee: uint256) -> uint256:\r\n    return principal + interestAmount + self._penaltyFee(principal, _max_penalty_fee)\r\n\r\n\r\n@pure\r\n@internal\r\ndef _computeLoanInterestAmount(principal: uint256, interest: uint256, duration: uint256) -> uint256:\r\n    return principal * interest * duration / 25920000000 # 25920000000 = 30 days * 10000 base percentage points\r\n\r\n\r\n\r\n##### INTERNAL METHODS - WRITE #####\r\n\r\n@internal\r\ndef _addLiquidation(\r\n    _collateralAddress: address,\r\n    _tokenId: uint256,\r\n    _startTime: uint256,\r\n    _gracePeriodMaturity: uint256,\r\n    _lenderPeriodMaturity: uint256,\r\n    _principal: uint256,\r\n    _interestAmount: uint256,\r\n    _apr: uint256,\r\n    _gracePeriodPrice: uint256,\r\n    _lenderPeriodPrice: uint256,\r\n    _borrower: address,\r\n    _loanId: uint256,\r\n    _loansCoreContract: address,\r\n    _erc20TokenContract: address\r\n) -> bytes32:\r\n    liquidationKey: bytes32 = self._computeLiquidationKey(_collateralAddress, _tokenId)\r\n    assert self.liquidations[liquidationKey].startTime == 0, \"liquidation already exists\"\r\n    assert not self.liquidatedLoans[self._computeLiquidatedLoansKey(_borrower, _loansCoreContract, _loanId)], \"loan already liquidated\"\r\n\r\n    lid: bytes32 = self._computeLiquidationId(_collateralAddress, _tokenId, block.timestamp)\r\n    self.liquidations[liquidationKey] = Liquidation(\r\n        {\r\n            lid: lid,\r\n            collateralAddress: _collateralAddress,\r\n            tokenId: _tokenId,\r\n            startTime: _startTime,\r\n            gracePeriodMaturity: _gracePeriodMaturity,\r\n            principal: _principal,\r\n            interestAmount: _interestAmount,\r\n            apr: _apr,\r\n            gracePeriodPrice: _gracePeriodPrice,\r\n            borrower: _borrower,\r\n            loanId: _loanId,\r\n            loansCoreContract: _loansCoreContract,\r\n            erc20TokenContract: _erc20TokenContract,\r\n        }\r\n    )\r\n    return lid\r\n\r\n\r\n@internal\r\ndef _addLoanToLiquidated(_borrower: address, _loansCoreContract: address, _loanId: uint256):\r\n    self.liquidatedLoans[self._computeLiquidatedLoansKey(_borrower, _loansCoreContract, _loanId)] = True\r\n\r\n\r\n@internal\r\ndef _removeLiquidation(_collateralAddress: address, _tokenId: uint256):\r\n    liquidationKey: bytes32 = self._computeLiquidationKey(_collateralAddress, _tokenId)\r\n    assert self.liquidations[liquidationKey].startTime > 0, \"liquidation not found\"\r\n    self.liquidations[liquidationKey] = empty(Liquidation)\r\n\r\n\r\n##### EXTERNAL METHODS - VIEW #####\r\n\r\n\r\n@view\r\n@external\r\ndef liquidationsCoreAddress() -> address:\r\n    return self\r\n\r\n\r\n@view\r\n@external\r\ndef getLiquidation(_collateralAddress: address, _tokenId: uint256) -> Liquidation:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)]\r\n\r\n\r\n@view\r\n@external\r\ndef getLiquidationStartTime(_collateralAddress: address, _tokenId: uint256) -> uint256:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].startTime\r\n\r\n@view\r\n@external\r\ndef getLiquidationGracePeriodMaturity(_collateralAddress: address, _tokenId: uint256) -> uint256:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].gracePeriodMaturity\r\n\r\n@view\r\n@external\r\ndef getLiquidationPrincipal(_collateralAddress: address, _tokenId: uint256) -> uint256:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].principal\r\n\r\n@view\r\n@external\r\ndef getLiquidationInterestAmount(_collateralAddress: address, _tokenId: uint256) -> uint256:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].interestAmount\r\n\r\n@view\r\n@external\r\ndef getLiquidationAPR(_collateralAddress: address, _tokenId: uint256) -> uint256:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].apr\r\n\r\n@view\r\n@external\r\ndef getLiquidationBorrower(_collateralAddress: address, _tokenId: uint256) -> address:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].borrower\r\n\r\n@view\r\n@external\r\ndef getLiquidationERC20Contract(_collateralAddress: address, _tokenId: uint256) -> address:\r\n    return self.liquidations[self._computeLiquidationKey(_collateralAddress, _tokenId)].erc20TokenContract\r\n\r\n@view\r\n@external\r\ndef isLoanLiquidated(_borrower: address, _loansCoreContract: address, _loanId: uint256) -> bool:\r\n    return self._isLoanLiquidated(_borrower, _loansCoreContract, _loanId)\r\n\r\n\r\n##### EXTERNAL METHODS - WRITE #####\r\n@external\r\ndef __init__():\r\n    self.owner = msg.sender\r\n\r\n\r\n@external\r\ndef initialize(\r\n    _owner: address,\r\n    _gracePeriodDuration: uint256,\r\n    _loansContract: address,\r\n    _lendingPoolContract: address,\r\n    _collateralVaultContract: address\r\n):\r\n    assert _owner != empty(address), \"owner is the zero address\"\r\n    assert self.owner == empty(address), \"already initialized\"\r\n    assert _gracePeriodDuration > 0  # reason: duration is 0\r\n\r\n    self.owner = _owner\r\n    self.gracePeriodDuration = _gracePeriodDuration\r\n    self.loansContract = ILoans(_loansContract)\r\n    self.lendingPoolContract = ILendingPool(_lendingPoolContract)\r\n    self.collateralVaultContract = ICollateralVault(_collateralVaultContract)\r\n\r\n\r\n@external\r\ndef create_proxy(\r\n    _gracePeriodDuration: uint256,\r\n    _loansContract: address,\r\n    _lendingPoolContract: address,\r\n    _collateralVaultContract: address\r\n) -> address:\r\n    proxy: address = create_minimal_proxy_to(self)\r\n    ISelf(proxy).initialize(msg.sender, _gracePeriodDuration, _loansContract, _lendingPoolContract, _collateralVaultContract)\r\n    log ProxyCreated(proxy, msg.sender, _gracePeriodDuration, _loansContract, _lendingPoolContract, _collateralVaultContract)\r\n    return proxy\r\n\r\n\r\n@external\r\ndef proposeOwner(_address: address):\r\n    assert msg.sender == self.owner  # reason: msg.sender is not the owner\r\n    assert _address != empty(address)  # reason: address it the zero address\r\n\r\n    self.proposedOwner = _address\r\n\r\n    log OwnerProposed(\r\n        self.owner,\r\n        _address,\r\n        self.owner,\r\n        _address,\r\n    )\r\n\r\n\r\n@external\r\ndef claimOwnership():\r\n    assert msg.sender == self.proposedOwner  # reason: msg.sender is not the proposed\r\n\r\n    log OwnershipTransferred(\r\n        self.owner,\r\n        self.proposedOwner,\r\n        self.owner,\r\n        self.proposedOwner,\r\n    )\r\n\r\n    self.owner = self.proposedOwner\r\n    self.proposedOwner = empty(address)\r\n\r\n\r\n@external\r\ndef setGracePeriodDuration(_duration: uint256):\r\n    assert msg.sender == self.owner  # reason: msg.sender is not the owner\r\n    assert _duration > 0  # reason: duration is 0\r\n\r\n    log GracePeriodDurationChanged(\r\n        self.gracePeriodDuration,\r\n        _duration\r\n    )\r\n\r\n    self.gracePeriodDuration = _duration\r\n\r\n\r\n@external\r\ndef setMaxPenaltyFee(_erc20TokenContract: address, _fee: uint256):\r\n    assert msg.sender == self.owner, \"msg.sender is not the owner\"\r\n    assert _erc20TokenContract != empty(address), \"addr is the zero addr\"\r\n\r\n    log MaxPenaltyFeeSet(\r\n        _erc20TokenContract,\r\n        self.maxPenaltyFee[_erc20TokenContract],\r\n        _fee,\r\n        _erc20TokenContract\r\n    )\r\n\r\n    self.maxPenaltyFee[_erc20TokenContract] = _fee\r\n\r\n\r\n\r\n@external\r\ndef addLiquidation(_borrower: address, _loanId: uint256, _erc20TokenContract: address):\r\n\r\n    borrowerLoan: Loan = self.loansContract.getLoan(_borrower, _loanId)\r\n    assert borrowerLoan.defaulted, \"loan is not defaulted\"\r\n    assert not self._isLoanLiquidated(_borrower, self.loansContract.address, _loanId), \"loan already liquidated\"\r\n\r\n    # APR from loan duration (maturity)\r\n    loanAPR: uint256 = borrowerLoan.interest * 12\r\n\r\n    for collateral in borrowerLoan.collaterals:\r\n        assert self._getLiquidation(collateral.contractAddress, collateral.tokenId).startTime == 0, \"liquidation already exists\"\r\n\r\n        principal: uint256 = collateral.amount\r\n        interestAmount: uint256 = self._computeLoanInterestAmount(\r\n            principal,\r\n            borrowerLoan.interest,\r\n            borrowerLoan.maturity - borrowerLoan.startTime\r\n        )\r\n\r\n        gracePeriodPrice: uint256 = self._computeNFTPrice(principal, interestAmount, self.maxPenaltyFee[_erc20TokenContract])\r\n\r\n        lid: bytes32 = self._addLiquidation(\r\n            collateral.contractAddress,\r\n            collateral.tokenId,\r\n            block.timestamp,\r\n            block.timestamp + self.gracePeriodDuration,\r\n            block.timestamp + self.gracePeriodDuration,\r\n            principal,\r\n            interestAmount,\r\n            loanAPR,\r\n            gracePeriodPrice,\r\n            gracePeriodPrice,\r\n            _borrower,\r\n            _loanId,\r\n            self.loansContract.address,\r\n            _erc20TokenContract\r\n        )\r\n\r\n        log LiquidationAdded(\r\n            _erc20TokenContract,\r\n            collateral.contractAddress,\r\n            lid,\r\n            collateral.contractAddress,\r\n            collateral.tokenId,\r\n            _erc20TokenContract,\r\n            gracePeriodPrice,\r\n            gracePeriodPrice,\r\n            block.timestamp + self.gracePeriodDuration,\r\n            block.timestamp + self.gracePeriodDuration,\r\n            self.loansContract.address,\r\n            _loanId,\r\n            _borrower\r\n        )\r\n\r\n    self._addLoanToLiquidated(_borrower, self.loansContract.address, _loanId)\r\n\r\n\r\n@payable\r\n@external\r\ndef payLoanLiquidationsGracePeriod(_loanId: uint256, _erc20TokenContract: address):\r\n    receivedAmount: uint256 = msg.value\r\n    ethPayment: bool = receivedAmount > 0\r\n\r\n    loan: Loan = self.loansContract.getLoan(msg.sender, _loanId)\r\n    assert loan.defaulted, \"loan is not defaulted\"\r\n\r\n    if ethPayment:\r\n        log PaymentReceived(msg.sender, msg.sender, receivedAmount)\r\n    paidAmount: uint256 = 0\r\n\r\n    for collateral in loan.collaterals:\r\n        liquidation: Liquidation = self._getLiquidation(collateral.contractAddress, collateral.tokenId)\r\n\r\n        assert block.timestamp <= liquidation.gracePeriodMaturity, \"liquidation out of grace period\"\r\n        assert not ethPayment or receivedAmount >= paidAmount + liquidation.gracePeriodPrice, \"insufficient value received\"\r\n\r\n        self._removeLiquidation(collateral.contractAddress, collateral.tokenId)\r\n\r\n        log LiquidationRemoved(\r\n            liquidation.erc20TokenContract,\r\n            liquidation.collateralAddress,\r\n            liquidation.lid,\r\n            liquidation.collateralAddress,\r\n            liquidation.tokenId,\r\n            liquidation.erc20TokenContract,\r\n            liquidation.loansCoreContract,\r\n            liquidation.loanId,\r\n            liquidation.borrower\r\n        )\r\n\r\n        _lendingPoolPeripheral : address = self.lendingPoolContract.address\r\n\r\n        if ethPayment:\r\n            self.lendingPoolContract.receiveFundsFromLiquidationEth(\r\n                liquidation.borrower,\r\n                liquidation.principal,\r\n                liquidation.gracePeriodPrice - liquidation.principal,\r\n                True,\r\n                \"liquidation_grace_period\",\r\n                value=liquidation.gracePeriodPrice\r\n            )\r\n            log PaymentSent(_lendingPoolPeripheral, _lendingPoolPeripheral, liquidation.gracePeriodPrice)\r\n            paidAmount += liquidation.gracePeriodPrice\r\n\r\n        else:\r\n            self.lendingPoolContract.receiveFundsFromLiquidation(\r\n                liquidation.borrower,\r\n                liquidation.principal,\r\n                liquidation.gracePeriodPrice - liquidation.principal,\r\n                True,\r\n                \"liquidation_grace_period\"\r\n            )\r\n\r\n\r\n        self.collateralVaultContract.transferCollateralFromLiquidation(\r\n            msg.sender,\r\n            collateral.contractAddress,\r\n            collateral.tokenId\r\n        )\r\n\r\n        log NFTPurchased(\r\n            liquidation.erc20TokenContract,\r\n            collateral.contractAddress,\r\n            msg.sender,\r\n            liquidation.lid,\r\n            collateral.contractAddress,\r\n            collateral.tokenId,\r\n            liquidation.gracePeriodPrice,\r\n            msg.sender,\r\n            liquidation.erc20TokenContract,\r\n            liquidation.loansCoreContract,\r\n            \"GRACE_PERIOD\"\r\n        )\r\n\r\n    excessAmount: uint256 = receivedAmount - paidAmount\r\n    if excessAmount > 0:\r\n        send(msg.sender, excessAmount)\r\n        log PaymentSent(msg.sender, msg.sender,excessAmount)\r\n\r\n\r\n@external\r\ndef claim(_collateralAddress: address, _tokenId: uint256):\r\n    liquidation: Liquidation = self._getLiquidation(_collateralAddress, _tokenId)\r\n    assert block.timestamp > liquidation.gracePeriodMaturity, \"liquidation in grace period\"\r\n\r\n    assert self.lendingPoolContract.address != empty(address), \"lendingPool not configured\"\r\n    assert self.lendingPoolContract.lenderFunds(msg.sender).currentAmountDeposited > 0, \"msg.sender is not a lender\"\r\n\r\n\r\n    self._removeLiquidation(_collateralAddress, _tokenId)\r\n\r\n    log LiquidationRemoved(\r\n        liquidation.erc20TokenContract,\r\n        liquidation.collateralAddress,\r\n        liquidation.lid,\r\n        liquidation.collateralAddress,\r\n        liquidation.tokenId,\r\n        liquidation.erc20TokenContract,\r\n        liquidation.loansCoreContract,\r\n        liquidation.loanId,\r\n        liquidation.borrower\r\n    )\r\n\r\n    self.collateralVaultContract.transferCollateralFromLiquidation(msg.sender, _collateralAddress, _tokenId)\r\n\r\n    log NFTClaimed(\r\n        liquidation.erc20TokenContract,\r\n        _collateralAddress,\r\n        msg.sender,\r\n        liquidation.lid,\r\n        _collateralAddress,\r\n        _tokenId,\r\n        liquidation.gracePeriodPrice,\r\n        msg.sender,\r\n        liquidation.erc20TokenContract,\r\n        liquidation.loansCoreContract,\r\n        \"OTC_CLAIM\"\r\n    )\r\n\r\n    self.lendingPoolContract.receiveCollateralFromLiquidation(\r\n        liquidation.borrower,\r\n        liquidation.principal,\r\n        \"OTC_CLAIM\"\r\n    )", "ABI": "[{\"name\":\"ProxyCreated\",\"inputs\":[{\"name\":\"proxyAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"gracePeriodDuration\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"loansContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"lendingPoolContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"collateralVaultContract\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"OwnerProposed\",\"inputs\":[{\"name\":\"ownerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"proposedOwnerIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":false},{\"name\":\"proposedOwner\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"AdminTransferred\",\"inputs\":[{\"name\":\"adminIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"newAdminIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"newAdmin\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"GracePeriodDurationChanged\",\"inputs\":[{\"name\":\"currentValue\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"newValue\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"MaxPenaltyFeeSet\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"currentValue\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"newValue\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"LiquidationAdded\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"collateralAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"liquidationId\",\"type\":\"bytes32\",\"indexed\":false},{\"name\":\"collateralAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"gracePeriodPrice\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"lenderPeriodPrice\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"gracePeriodMaturity\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"lenderPeriodMaturity\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"loansCoreContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"loanId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"borrower\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"LiquidationRemoved\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"collateralAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"liquidationId\",\"type\":\"bytes32\",\"indexed\":false},{\"name\":\"collateralAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"loansCoreContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"loanId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"borrower\",\"type\":\"address\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NFTPurchased\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"collateralAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"buyerAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"liquidationId\",\"type\":\"bytes32\",\"indexed\":false},{\"name\":\"collateralAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"buyerAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"loansCoreContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"method\",\"type\":\"string\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"NFTClaimed\",\"inputs\":[{\"name\":\"erc20TokenContractIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"collateralAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"buyerAddressIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"liquidationId\",\"type\":\"bytes32\",\"indexed\":false},{\"name\":\"collateralAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"buyerAddress\",\"type\":\"address\",\"indexed\":false},{\"name\":\"erc20TokenContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"loansCoreContract\",\"type\":\"address\",\"indexed\":false},{\"name\":\"method\",\"type\":\"string\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PaymentSent\",\"inputs\":[{\"name\":\"walletIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"wallet\",\"type\":\"address\",\"indexed\":false},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PaymentReceived\",\"inputs\":[{\"name\":\"walletIndexed\",\"type\":\"address\",\"indexed\":true},{\"name\":\"wallet\",\"type\":\"address\",\"indexed\":false},{\"name\":\"amount\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"liquidationsCoreAddress\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidation\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"lid\",\"type\":\"bytes32\"},{\"name\":\"collateralAddress\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"gracePeriodMaturity\",\"type\":\"uint256\"},{\"name\":\"principal\",\"type\":\"uint256\"},{\"name\":\"interestAmount\",\"type\":\"uint256\"},{\"name\":\"apr\",\"type\":\"uint256\"},{\"name\":\"gracePeriodPrice\",\"type\":\"uint256\"},{\"name\":\"borrower\",\"type\":\"address\"},{\"name\":\"loanId\",\"type\":\"uint256\"},{\"name\":\"loansCoreContract\",\"type\":\"address\"},{\"name\":\"erc20TokenContract\",\"type\":\"address\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationStartTime\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationGracePeriodMaturity\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationPrincipal\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationInterestAmount\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationAPR\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationBorrower\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getLiquidationERC20Contract\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isLoanLiquidated\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loansCoreContract\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_gracePeriodDuration\",\"type\":\"uint256\"},{\"name\":\"_loansContract\",\"type\":\"address\"},{\"name\":\"_lendingPoolContract\",\"type\":\"address\"},{\"name\":\"_collateralVaultContract\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"create_proxy\",\"inputs\":[{\"name\":\"_gracePeriodDuration\",\"type\":\"uint256\"},{\"name\":\"_loansContract\",\"type\":\"address\"},{\"name\":\"_lendingPoolContract\",\"type\":\"address\"},{\"name\":\"_collateralVaultContract\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"proposeOwner\",\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claimOwnership\",\"inputs\":[],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setGracePeriodDuration\",\"inputs\":[{\"name\":\"_duration\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setMaxPenaltyFee\",\"inputs\":[{\"name\":\"_erc20TokenContract\",\"type\":\"address\"},{\"name\":\"_fee\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addLiquidation\",\"inputs\":[{\"name\":\"_borrower\",\"type\":\"address\"},{\"name\":\"_loanId\",\"type\":\"uint256\"},{\"name\":\"_erc20TokenContract\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"payLoanLiquidationsGracePeriod\",\"inputs\":[{\"name\":\"_loanId\",\"type\":\"uint256\"},{\"name\":\"_erc20TokenContract\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claim\",\"inputs\":[{\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"proposedOwner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"gracePeriodDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"loansContract\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"lendingPoolContract\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"collateralVaultContract\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxPenaltyFee\",\"inputs\":[{\"name\":\"arg0\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]}]", "ContractName": "LiquidationsOTC", "CompilerVersion": "vyper:0.3.9", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}