// SPDX-License-Identifier: Apache-2.0

// Generated by impl.ts. Will be overwritten.
// Filename: './BaseAspenDeployerV3.sol'

pragma solidity ^0.8.4;

import "../../api/deploy/IAspenDeployer.sol";

/// Inherit from this base to implement introspection
abstract contract BaseAspenDeployerV3 is IAspenDeployerV3 {
    /// This needs to be public to be callable from initialize via delegatecall
    function minorVersion() virtual override public pure returns (uint256 minor, uint256 patch);

    function implementationVersion() override public pure returns (uint256 major, uint256 minor, uint256 patch) {
        (minor, patch) = minorVersion();
        major = 3;
    }

    function implementationInterfaceId() virtual override public pure returns (string memory interfaceId) {
        interfaceId = "deploy/IAspenDeployer.sol:IAspenDeployerV3";
    }

    function supportsInterface(bytes4 interfaceID) virtual override public view returns (bool) {
        return (interfaceID != 0x0) && ((interfaceID != 0xffffffff) && ((interfaceID == 0x01ffc9a7) || ((interfaceID == type(IAspenDeployerV3).interfaceId) || ((interfaceID == type(IAspenDeployerOwnEventsV1).interfaceId) || (interfaceID == type(IAspenVersionedV2).interfaceId)))));
    }
}