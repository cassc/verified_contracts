{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\n\r\ninterface IUniswapV2Router {\r\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n        external\r\n        payable\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract Swapper {\r\n\r\n    event BuyTransactions(address indexed forAccount, int256 amountBought);\r\n\r\n    AggregatorV3Interface private constant ETH_USD_FEED = AggregatorV3Interface(\r\n        0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\r\n    );\r\n    \r\n    IUniswapV2Router private constant UNISWAP_V2_ROUTER = IUniswapV2Router(\r\n        0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\r\n    );\r\n\r\n    address private constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\r\n    address private constant AAPX = 0xbfD815347d024F449886c171f78Fa5B8E6790811;\r\n\r\n    address public owner;\r\n    int256 public txPriceUsdc;\r\n\r\n    mapping(address => int256) public txCount;\r\n\r\n    constructor(address _owner, int256 _txPriceUSDC) {\r\n        owner = _owner;\r\n        txPriceUsdc = _txPriceUSDC;\r\n    }\r\n\r\n    function updateTxPrice(int256 newTxPriceInUsdc) external {\r\n        require(msg.sender == owner, \"Only owner can update tx price.\");\r\n        txPriceUsdc = newTxPriceInUsdc;\r\n    }\r\n    \r\n    function transferOwnership(address newOwner) external {\r\n        require(msg.sender == owner, \"Only owner can transfer ownership.\");\r\n        owner = newOwner;\r\n    }\r\n\r\n    function emergencyWithdraw(uint256 amount) external {\r\n        require(msg.sender == owner, \"Only owner can call emergency withdraw.\");\r\n        payable(msg.sender).transfer(amount);\r\n    }\r\n\r\n    function txPriceUsdcDecimals() external view returns (uint256) {\r\n        return ETH_USD_FEED.decimals();\r\n    }\r\n\r\n    function buyTransactions(address forAccount) public payable {\r\n        (,int ethUsdcPrice,,,) = ETH_USD_FEED.latestRoundData();\r\n        int256 txs = ((int256(msg.value) * ethUsdcPrice) / 1e18) / txPriceUsdc;\r\n        txCount[forAccount] += txs;\r\n        swap();\r\n        emit BuyTransactions(forAccount, txs);\r\n    }\r\n\r\n    function swap() public {\r\n        address[] memory path;\r\n        path = new address[](2);\r\n        path[0] = WETH;\r\n        path[1] = AAPX;\r\n        UNISWAP_V2_ROUTER.swapExactETHForTokens{\r\n            value: address(this).balance \r\n        }(0, path, address(this), block.timestamp);\r\n    }\r\n\r\n    /// @notice Fallback function to allow the contract to receive Ether.\r\n    /// @dev This function has no function body, making it a default function for receiving Ether.\r\n    /// It is automatically called when Ether is sent to the contract without any data.\r\n    receive() external payable {\r\n        buyTransactions(msg.sender);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_txPriceUSDC\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"forAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amountBought\",\"type\":\"int256\"}],\"name\":\"BuyTransactions\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forAccount\",\"type\":\"address\"}],\"name\":\"buyTransactions\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"txCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txPriceUsdc\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txPriceUsdcDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"newTxPriceInUsdc\",\"type\":\"int256\"}],\"name\":\"updateTxPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Swapper", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000000ddf1741d6c944812053d35994ef5d747ac83f890000000000000000000000000000000000000000000000000000000001312d00", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://5868ac87432e94b00980193588a317911255a86fcd627a13de2a69263f5d4f72"}