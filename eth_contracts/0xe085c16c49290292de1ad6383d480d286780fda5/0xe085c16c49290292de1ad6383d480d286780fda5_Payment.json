{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/Payment.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\ncontract Payment {\\n    error Payment__PaymentAmountMustBeGreaterThanZero();\\n    error Payment__FailedToSendEther();\\n    error Payment__InvalidReceiverAddress();\\n    error Payment__ArrayLengthMismatch();\\n    error Payment__NotEnoughEtherSent();\\n\\n    address public constant OWNER = 0x61ec9Cbc365b23eC035986A30FDed12e94756b3B;\\n    uint256 public constant FEE_PERCENTAGE = 3; // 3%\\n\\n    function sendPayment(address[] calldata recipients, uint256[] calldata amounts) external payable {\\n        if (recipients.length != amounts.length) {\\n            revert Payment__ArrayLengthMismatch();\\n        }\\n\\n        uint256 totalAmount = 0;\\n        for (uint256 i = 0; i < amounts.length; i++) {\\n            totalAmount += amounts[i];\\n        }\\n\\n        if (msg.value < totalAmount) {\\n            revert Payment__NotEnoughEtherSent();\\n        }\\n\\n        uint256 totalEtherSentToRecipients = 0;\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            if (recipients[i] == address(0)) {\\n                revert Payment__InvalidReceiverAddress();\\n            }\\n\\n            if (amounts[i] == 0) {\\n                revert Payment__PaymentAmountMustBeGreaterThanZero();\\n            }\\n\\n            uint256 fee = (amounts[i] * FEE_PERCENTAGE) / 100;\\n            uint256 amountToSendToRecipient = amounts[i] - fee;\\n            totalEtherSentToRecipients += amountToSendToRecipient;\\n            (bool sentToReceiver,) = recipients[i].call{value: amountToSendToRecipient}(\\\"\\\");\\n            if (!sentToReceiver) {\\n                revert Payment__FailedToSendEther();\\n            }\\n        }\\n\\n        (bool sentToOwner,) = OWNER.call{value: msg.value - totalEtherSentToRecipients}(\\\"\\\");\\n        if (!sentToOwner) {\\n            revert Payment__FailedToSendEther();\\n        }\\n    }\\n\\n    receive() external payable {\\n        (bool sentToOwner,) = OWNER.call{value: msg.value}(\\\"\\\");\\n        if (!sentToOwner) {\\n            revert Payment__FailedToSendEther();\\n        }\\n    }\\n\\n    fallback() external payable {\\n        (bool sentToOwner,) = OWNER.call{value: msg.value}(\\\"\\\");\\n        if (!sentToOwner) {\\n            revert Payment__FailedToSendEther();\\n        }\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"Payment__ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Payment__FailedToSendEther\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Payment__InvalidReceiverAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Payment__NotEnoughEtherSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Payment__PaymentAmountMustBeGreaterThanZero\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"sendPayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Payment", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}