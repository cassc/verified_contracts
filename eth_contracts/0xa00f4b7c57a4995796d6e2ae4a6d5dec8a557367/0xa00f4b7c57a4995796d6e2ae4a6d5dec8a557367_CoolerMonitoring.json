{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/CoolerMonitoring.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\ninterface ICooler {\\n\\n    struct Request {\\n        uint256 amount;             // Amount to be borrowed.\\n        uint256 interest;           // Annualized percentage to be paid as interest.\\n        uint256 loanToCollateral;   // Requested loan-to-collateral ratio.\\n        uint256 duration;           // Time to repay the loan before it defaults.\\n        bool active;                // Any lender can clear an active loan request.\\n        address requester;          // The address that created the request.\\n    }\\n\\n    struct Loan {\\n        Request request;        // Loan terms specified in the request.\\n        uint256 principal;      // Amount of principal debt owed to the lender.\\n        uint256 interestDue;    // Interest owed to the lender.\\n        uint256 collateral;     // Amount of collateral pledged.\\n        uint256 expiry;         // Time when the loan defaults.\\n        address lender;         // Lender's address.\\n        address recipient;      // Recipient of repayments.\\n        bool callback;          // If this is true, the lender must inherit CoolerCallback.\\n    }\\n\\n    function getLoan(uint256 loanID_) external view returns (Loan memory);\\n}\\n\\ncontract CoolerMonitoring {\\n    function timeToExpiry(address cooler_, uint256 id_) public view returns (uint256 timeLeft){\\n        ICooler.Loan memory loan = ICooler(cooler_).getLoan(id_);\\n\\n        return (loan.expiry > block.timestamp) ? loan.expiry - block.timestamp : 0;\\n    }\\n}\\n\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cooler_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id_\",\"type\":\"uint256\"}],\"name\":\"timeToExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeLeft\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CoolerMonitoring", "CompilerVersion": "v0.8.15+commit.e14f2714", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}