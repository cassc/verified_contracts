{"SourceCode": "/**\r\n\r\nGRINKLE - Matt Furrie's Goblin\r\n\r\nTelegram: https://t.me/grinkle\r\n\r\nTwitter: https://twitter.com/grinklecoin\r\n\r\nWebsite: https://grinkle.net\r\n\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u28e4\u28e4\u28b6\u28f6\u2876\u2836\u2836\u2836\u28b6\u28f6\u2876\u28a6\u28e4\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f6\u281b\u28c9\u2824\u2812\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2812\u2824\u28cd\u281b\u28b7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28fe\u287f\u28e1\u2814\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2823\u28cc\u283b\u28f7\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28ff\u284f\u2880\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2840\u28b9\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28fe\u287f\u2801\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2847\u2808\u28bf\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fc\u28ff\u28bf\u28e4\u2866\u28bf\u2876\u28f6\u2836\u2876\u2896\u2876\u28b6\u28a4\u2864\u2864\u2876\u28b6\u2876\u28b6\u2836\u28f6\u28b6\u28ff\u28a4\u28e4\u287e\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u287f\u287f\u28a3\u28af\u28fe\u28f5\u283f\u283e\u2837\u283e\u28e7\u28fe\u2840\u284f\u28b8\u2803\u2847\u28b9\u2880\u28f7\u28ec\u2837\u283e\u2837\u283f\u28ae\u28f7\u28fd\u28cc\u28af\u28bf\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u28bc\u28f7\u2877\u281b\u2809\u28c0\u28e4\u2824\u2824\u2824\u2824\u2824\u28ec\u28d9\u28f7\u28fe\u28f6\u28ff\u28fe\u28cb\u28e5\u2824\u2824\u2824\u2824\u2824\u28e4\u28c0\u2809\u281b\u28be\u28ff\u28c7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2876\u289b\u28cb\u285b\u28b7\u287e\u280b\u28e7\u2876\u288b\u28e5\u28f4\u2836\u2876\u2834\u2836\u28f6\u28e4\u28cc\u2859\u283b\u28e4\u281f\u288b\u28e1\u28e4\u28f6\u2836\u2826\u28b6\u2836\u28e6\u28ec\u28d9\u28b6\u28ec\u2819\u28bf\u2876\u289b\u28c9\u28db\u28b6\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u289f\u281e\u2801\u2800\u2819\u283e\u2823\u281e\u288b\u28f6\u289f\u28c1\u28c0\u28ec\u28e4\u28e4\u28f4\u28e5\u28c0\u28f9\u28ff\u28c6\u2800\u28a0\u28ff\u28cf\u28c1\u28ec\u28e6\u28e4\u28e4\u28e5\u28c0\u28c8\u287b\u28f7\u2858\u2833\u281c\u2837\u280b\u2800\u2808\u2831\u2879\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u285f\u2838\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\u281b\u2809\u28bd\u28ff\u28ff\u28fd\u28ff\u28ff\u2808\u2809\u2899\u287f\u2800\u28bf\u284b\u2809\u2801\u28ff\u28ff\u28ef\u28ff\u28ff\u287f\u2809\u281b\u28bf\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2883\u28bb\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2847\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u283b\u28e6\u28c4\u2848\u283b\u283f\u283f\u281f\u2803\u28c0\u28e4\u289e\u2847\u2800\u2808\u2833\u28e4\u28c0\u2808\u283b\u283f\u283f\u281f\u2881\u28e0\u28f4\u283f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28b8\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2847\u2807\u2800\u2800\u2800\u2800\u2800\u2880\u28e4\u2840\u2800\u2808\u2809\u281b\u281b\u281b\u281b\u280b\u28c9\u28c9\u28c0\u285e\u2801\u2800\u2800\u28e0\u28c6\u28c9\u28c9\u2819\u281b\u281b\u2819\u281b\u2809\u2801\u2800\u2880\u28e4\u2840\u2800\u2800\u2800\u2800\u2800\u2838\u28b8\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2847\u28b8\u2800\u2800\u2800\u2800\u2800\u28fe\u28fc\u2847\u2800\u28c0\u28e4\u2824\u2816\u281a\u280b\u2809\u2889\u28c9\u28f8\u2801\u2800\u28a0\u28de\u28dd\u28c0\u28c8\u2849\u2809\u2819\u2813\u2832\u2826\u28e4\u28c0\u2800\u28b8\u2847\u28f7\u2800\u2800\u2800\u2800\u2800\u2847\u28b8\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f7\u2838\u2800\u2800\u2800\u2800\u2800\u28bf\u28ff\u2816\u280b\u28c1\u28e4\u28e4\u2876\u2876\u283f\u289b\u28db\u284b\u2819\u28c6\u28e0\u288f\u283f\u283f\u280f\u2899\u28df\u285b\u283f\u28f7\u28f6\u28e4\u28e4\u28c8\u2819\u2832\u28ff\u287f\u2800\u2800\u2800\u2800\u2800\u2807\u28fe\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bf\u2844\u2847\u2800\u2800\u2800\u2800\u2838\u284f\u2800\u2819\u280b\u2839\u281e\u2813\u2809\u28c9\u28c0\u28e4\u28e4\u28e4\u2876\u2837\u283e\u2836\u28b6\u28e4\u28e4\u28e4\u28c0\u28c9\u2809\u281a\u282b\u283f\u2819\u280b\u2800\u28b9\u2807\u2800\u2800\u2800\u2800\u28b8\u28a0\u287f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2838\u28c7\u28a1\u2800\u2800\u2800\u2800\u2800\u28b9\u28e6\u28e4\u28e4\u28e4\u28f6\u287e\u283f\u281b\u280b\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2819\u281b\u283f\u28b7\u28f6\u28e4\u28e4\u28e4\u28f4\u285f\u2800\u2800\u2800\u2800\u2800\u285c\u28b8\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2838\u2840\u2800\u2800\u2800\u2800\u2800\u28e7\u28ef\u28c9\u28e1\u28e4\u28d6\u282e\u281b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u281b\u2831\u28f6\u28e4\u28cc\u28c9\u28fd\u28fc\u2800\u2800\u2800\u2800\u2800\u2800\u2807\u28ff\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28bb\u2846\u2847\u2800\u2800\u2800\u2800\u2800\u28b8\u28e7\u28de\u280b\u28ae\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2871\u2809\u28b3\u28fc\u2847\u2800\u2800\u2800\u2800\u2800\u28b8\u28a0\u287f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u2847\u2847\u2800\u2800\u2800\u2800\u2800\u2808\u284f\u2819\u28b7\u28cc\u2823\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2814\u28e1\u287e\u280b\u28b9\u2801\u2800\u2800\u2800\u2800\u2800\u28b8\u28b8\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u28b0\u2847\u2800\u28fe\u28b9\u28c7\u2818\u2886\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2803\u28f0\u28cf\u28ff\u2800\u28b8\u2847\u2800\u2800\u2800\u2800\u2800\u28b8\u2808\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b0\u284f\u2880\u2803\u2800\u2800\u2800\u2800\u2800\u28fc\u2803\u2800\u28ff\u28ef\u28df\u2833\u28dc\u28e4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e4\u28e7\u281e\u28fb\u28fd\u28ff\u2800\u2808\u28f7\u2800\u2800\u2800\u2800\u2800\u2818\u2844\u28b9\u28c7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u285f\u2800\u285c\u2800\u2800\u2800\u2800\u2800\u28fc\u280f\u2800\u2800\u28b8\u285f\u28ef\u284f\u28ff\u282c\u28df\u28db\u2877\u2836\u28f6\u2836\u28f6\u2836\u28be\u28db\u28fb\u2825\u28ff\u28b9\u28f9\u28bf\u284f\u2800\u2800\u2839\u28e7\u2800\u2800\u2800\u2800\u2800\u28b3\u2800\u28bb\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u285f\u2800\u285c\u2800\u2800\u2800\u2800\u2800\u28fc\u28ef\u28e4\u28e4\u28c4\u28c8\u28e7\u28ff\u28b1\u28bb\u2846\u28ff\u2818\u284f\u2801\u284f\u2809\u28b8\u2809\u28b9\u2803\u28ff\u28a0\u285f\u285e\u28ff\u28fc\u28c3\u28e0\u28e4\u28e4\u28fd\u28e7\u2800\u2800\u2800\u2800\u2800\u28a3\u2800\u28bb\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2880\u28e4\u28f4\u28f6\u28f6\u287f\u2800\u2858\u2800\u2800\u2800\u2800\u2800\u28b8\u287f\u2869\u28e4\u28c4\u28c8\u28c9\u28ff\u28ff\u28fe\u28b8\u28e7\u28bb\u2800\u28c7\u2800\u2847\u2800\u28b8\u2800\u28b8\u2800\u28ff\u2878\u2847\u28e7\u28ff\u28ff\u28c9\u28c1\u28e0\u28e4\u288c\u28bf\u2847\u2800\u2800\u2800\u2800\u2800\u28a3\u2800\u28bf\u28f6\u28f6\u28e6\u28e4\u2840\u2800\u2800\r\n\u2800\u28a0\u28ff\u281f\u2811\u288e\u2839\u2847\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u28b8\u287f\u281b\u2809\u2808\u2819\u2822\u2849\u2819\u2833\u282e\u28ff\u28f8\u28c7\u28b9\u2800\u28bf\u2800\u287e\u2800\u284f\u28b8\u28c7\u28ff\u2837\u281f\u280b\u2889\u2814\u280a\u2801\u2809\u2819\u28be\u2847\u2800\u2800\u2800\u2800\u2800\u28b8\u2800\u28b8\u281f\u2861\u280a\u281b\u28ff\u2844\u2800\r\n\u2800\u28b8\u284f\u28c6\u2800\u2808\u28c6\u28b7\u2840\u28a3\u2840\u2800\u2800\u2800\u2880\u287e\u2801\u2800\u2800\u2800\u2800\u2800\u28d8\u28e6\u2836\u281a\u282f\u282d\u280d\u281b\u280b\u281b\u2813\u281b\u2819\u281b\u2829\u282d\u283d\u281b\u2836\u28b4\u28cb\u2800\u2800\u2800\u2800\u2800\u2800\u28b7\u2840\u2800\u2800\u2800\u2880\u285c\u2880\u287e\u28b0\u2803\u2800\u28b0\u28b9\u2847\u2800\r\n\u28e0\u283c\u2837\u28ac\u28e2\u28c4\u2818\u28a6\u287b\u28a6\u28c8\u28d2\u28d2\u28f2\u285f\u2847\u2800\u2800\u2800\u2880\u28f4\u281e\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u283b\u28e6\u2840\u2800\u2800\u2800\u28b8\u28bb\u28f6\u28d2\u28d2\u28c1\u2874\u289f\u2874\u2803\u28c0\u28d4\u28e5\u283e\u2837\u28e4\r\n\u2801\u2880\u2820\u2812\u281a\u281b\u281b\u2813\u281a\u2812\u281a\u283f\u285b\u2812\u28b3\u28c7\u2800\u2800\u28f0\u28fb\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u289f\u28c6\u2800\u2800\u28f8\u287e\u2812\u289b\u281b\u2813\u2812\u281b\u281a\u281b\u281b\u2813\u2812\u28a4\u2840\u2808\r\n\r\n**/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract Ownable {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        _owner = msg.sender;\r\n        emit OwnershipTransferred(address(0), msg.sender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function getAmountsOut(\r\n        uint amountIn,\r\n        address[] memory path\r\n    ) external view returns (uint[] memory amounts);\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract GRINKLE is IERC20, Ownable {\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    address payable private _taxWallet;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 42_000_000 * 10**_decimals;\r\n    string private constant _name = unicode\"Grinkle\";\r\n    string private constant _symbol = unicode\"GRINKLE\";\r\n\r\n    uint256 private _initialBuyTax = 19;\r\n    uint256 private _initialSellTax = 19;\r\n    uint256 private _finalBuyTax = 0;\r\n    uint256 private _finalSellTax = 0;\r\n    uint256 private _reduceBuyTaxAt = 15;\r\n    uint256 private _reduceSellTaxAt = 15;\r\n    uint256 private _preventSwapBefore = 15;\r\n    uint256 private _buyCount = 0;\r\n\r\n    uint256 public _maxTxAmount = (_tTotal * 20) / 1000;\r\n    uint256 public _maxWalletSize = (_tTotal * 20) / 1000;\r\n    uint256 public _taxSwapThreshold = (_tTotal * 1) / 1000;\r\n    uint256 public _maxTaxSwap = (_tTotal * 10) / 1000;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\r\n    address public uniswapV2Pair;\r\n    bool private tradingOpen = false;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event _maxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () payable {\r\n        _taxWallet = payable(msg.sender);\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n\r\n        _balances[address(this)] = _tTotal;\r\n        emit Transfer(address(0), address(this), _tTotal);\r\n\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        require (_allowances[sender][msg.sender] >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n        return true;\r\n    }\r\n\r\n    function buyTax() public view returns (uint256) {\r\n        return (_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax;\r\n    }\r\n\r\n    function sellTax() public view returns (uint256) {\r\n        return (_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax;\r\n    }\r\n\r\n    function buyCount() public view returns (uint256) {\r\n        return _buyCount;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = (amount * ((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax)) / 100;\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the _maxWalletSize.\");\r\n\r\n                _buyCount++;\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = (amount * ((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax)) / 100;\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (taxAmount > 0 ) {\r\n            _balances[address(this)] = _balances[address(this)] + taxAmount;\r\n            emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        _balances[from] = _balances[from] - amount;\r\n        _balances[to] = _balances[to] + (amount - taxAmount);\r\n        emit Transfer(from, to, amount - taxAmount);\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n        return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function reduceFee() external onlyOwner{\r\n        _reduceBuyTaxAt = 0;\r\n        _reduceSellTaxAt = 0;\r\n        _preventSwapBefore = 0;\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) internal {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n        emit _maxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function openTrading() external payable onlyOwner {\r\n        require(!tradingOpen,\"trading is already open\");\r\n\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwap() external onlyOwner {\r\n        uint256 tokenBalance = balanceOf(address(this));\r\n        if(tokenBalance > 0) {\r\n            swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance = address(this).balance;\r\n        if(ethBalance > 0) {\r\n            sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    function rescueTokens(address token) external {\r\n        require(msg.sender == _taxWallet);\r\n        IERC20(token).transfer(_taxWallet, IERC20(token).balanceOf(address(this)));\r\n    }\r\n\r\n    function rescueETH() external {\r\n        require(msg.sender == _taxWallet);\r\n        _taxWallet.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"_maxTxAmountUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reduceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescueETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GRINKLE", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://806923d798e9bf0e25a2811c39f4985c16532094979107700f875d74f14aa067"}