{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/MulticallBalance.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.19;\\n\\ninterface IERC20 {\\n  function balanceOf(address account) external view returns (uint256);\\n}\\n\\n/*\\n * @dev it will multicall all erc20 token balance of all accounts\\n * @dev extra ETH balance will be saved at the last\\n */\\ncontract MulticallBalance {\\n  function getBalances(address[] memory tokens, address[] memory accounts) external view returns (uint256[][] memory) {\\n    uint256[][] memory balances = new uint256[][](accounts.length);\\n\\n    for (uint256 i = 0; i < accounts.length; i++) {\\n      balances[i] = new uint256[](tokens.length + 1);\\n\\n      for (uint256 j = 0; j < tokens.length; j++) {\\n        balances[i][j] = IERC20(tokens[j]).balanceOf(accounts[i]);\\n      }\\n      balances[i][tokens.length] = accounts[i].balance;\\n    }\\n    return balances;\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MulticallBalance", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}