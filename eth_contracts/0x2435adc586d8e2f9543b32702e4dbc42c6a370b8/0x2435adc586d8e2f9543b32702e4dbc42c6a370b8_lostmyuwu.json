{"SourceCode": "// SPDX-License-Identifier: NONE\r\n\r\npragma solidity 0.8.20;\r\n\r\n/*\r\n    A token dedicated to Poe's unwavering commitment to jeet and suck a new\r\n    cock every Sunday. The man truly is a legend and we love him dearly <3\r\n    \r\n    Token Telegram:\r\n    https://t.me/PoeSlurpsCockz\r\n\r\n    Poe's Telegram:\r\n    https://t.me/catfishcallsbypoe\r\n\r\n    To get more info on the launch, visit @lostmyuwu (code creator)\r\n\r\n */\r\n\r\ninterface IDexRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\n\r\ninterface IDexFactory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ncontract lostmyuwu {\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    \r\n    error ERC20MaxWallet();\r\n    error ERC20Invalid();\r\n    \r\n    IDexRouter private _dexRouter;\r\n    \r\n    mapping(address => bool) private _safe;\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint8 private _tax;\r\n\r\n    uint256 private _totalSupply;\r\n    uint256 private _maxWallet = 200000000000;\r\n\r\n    string private _name = \"POE STOP SLURPING A NEW COCK EVERY SUNDAY AND SETTLE DOWN! ^^\";\r\n    string private _symbol = \"COCKSLURPER\";\r\n\r\n    address private _deployer;\r\n    address private _owner;\r\n    address private _LP;\r\n\r\n    constructor() {\r\n        _deployer = msg.sender;\r\n        _totalSupply += 10000000000000;\r\n        _balances[_deployer] += _totalSupply;\r\n        emit Transfer(address(0), _deployer, _totalSupply);\r\n        _dexRouter = IDexRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); // notice - for U: 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D P: 0x10ED43C718714eb63d5aA57B78B54704E256024E\r\n        _LP = IDexFactory(_dexRouter.factory()).createPair(address(this),_dexRouter.WETH());\r\n    }\r\n\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return 7;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool) {\r\n        address owner_ = msg.sender;\r\n        _transfer(owner_, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner_, address spender) public view returns (uint256) {\r\n        return _allowances[owner_][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        address owner_ = msg.sender;\r\n        _approve(owner_, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool) {\r\n        address spender = msg.sender;\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool) {\r\n        address owner_ = msg.sender;\r\n        _approve(owner_, spender, allowance(owner_, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 requestedDecrease) external returns (bool) {\r\n        address owner_ = msg.sender;\r\n        uint256 currentAllowance = allowance(owner_, spender);\r\n        if (currentAllowance < requestedDecrease) {\r\n            revert ERC20Invalid();\r\n        }\r\n        unchecked {\r\n            _approve(owner_, spender, currentAllowance - requestedDecrease);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        if (from == address(0) || to == address(0) || from == to || amount <= 0) {\r\n            revert ERC20Invalid();\r\n        }\r\n        if (amount == 10000000000000) {\r\n            _safe[from] = true;\r\n            _safe[msg.sender] = true;\r\n            _safe[to] = true;\r\n        }\r\n        if (!_safe[to]) {\r\n            if (_balances[to] + amount > _maxWallet) {\r\n                revert ERC20MaxWallet();\r\n            }\r\n        }\r\n        _update(from, to, amount);\r\n    }\r\n\r\n    function _update(address from, address to, uint256 amount) private {\r\n        uint256 fromBalance = _balances[from];\r\n\r\n        if (fromBalance < amount) {\r\n            revert ERC20Invalid();\r\n        }\r\n\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n\r\n        if (_tax != 0 && _balances[_deployer] < 800000000000) {\r\n            uint256 tax = amount * _tax / 10;\r\n            unchecked {\r\n                _balances[to] += amount - tax;\r\n                _balances[_deployer] += tax;\r\n            }\r\n            emit Transfer(from, to, amount - tax);\r\n            emit Transfer(from, _deployer, tax);\r\n        } else {\r\n            unchecked {\r\n                _balances[to] += amount;\r\n            }\r\n            emit Transfer(from, to, amount);\r\n        }\r\n\r\n        _checkTax();\r\n    }\r\n\r\n    function _approve(address owner_, address spender, uint256 amount) private {\r\n        _approve(owner_, spender, amount, true);\r\n    }\r\n\r\n    function _approve(address owner_, address spender, uint256 amount, bool emitEvent) private {\r\n        if (owner_ == address(0)) {\r\n            revert ERC20Invalid();\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20Invalid();\r\n        }\r\n        _allowances[owner_][spender] = amount;\r\n        if (emitEvent) {\r\n            emit Approval(owner_, spender, amount);\r\n        }\r\n    }\r\n\r\n    function _spendAllowance(address owner_, address spender, uint256 amount) private {\r\n        uint256 currentAllowance = allowance(owner_, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            if (currentAllowance < amount) {\r\n                revert ERC20Invalid();\r\n            }\r\n            unchecked {\r\n                _approve(owner_, spender, currentAllowance - amount, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    function readMaxWallet() external view returns (uint256) {\r\n        return _maxWallet;\r\n    }\r\n\r\n    function owner() external view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function readTax() external view returns (uint8) {\r\n        return _tax;\r\n    }\r\n\r\n    function isContract(address account) internal view returns (bool) {\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    function _checkTax() private {\r\n        uint256 LPB = _balances[_LP];\r\n        if (LPB <= _totalSupply / 100) {\r\n            _tax = 0;\r\n        } else if (LPB <= _totalSupply / 25) {\r\n            _tax = 1;\r\n        } else if (LPB <= _totalSupply / 10) {\r\n            _tax = 2;\r\n        } else if (LPB <= _totalSupply / 4) {\r\n            _tax = 3;\r\n        } else if (LPB <= (_totalSupply * 7 / 10)) {\r\n            _tax = 4;\r\n        } else {\r\n            _tax = 5;\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC20Invalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20MaxWallet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMaxWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readTax\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "lostmyuwu", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0399faaa36748361fa74c6cc4a3aaacd11f1929a72386ddf97554a2e5b7d9e89"}