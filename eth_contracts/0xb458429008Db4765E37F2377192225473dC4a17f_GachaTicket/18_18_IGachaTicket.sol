// SPDX-License-Identifier: MIT
pragma solidity ^0.8.9;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";

interface IGachaTicket {
    /**
     * @dev Event emitted when the `mint` function is called.
     * @param minter The address of the account that minted the tokens.
     * @param tokenId The ID of the token that was minted.
     * @param amount The amount of the token that was minted.
     * @param deadline The deadline for the transaction to be executed.
     * @param nonce A random number used to prevent replay attacks.
     * @param signature A signature generated by system owner(backend PK).
     */
    event Mint(
        address indexed minter,
        uint256 indexed tokenId,
        uint256 amount,
        uint256 deadline,
        uint256 nonce,
        bytes signature
    );

    /**
     * @dev Mint a specified amount of ERC1155 tokens with a given token ID to a specified minter.
     * @param minter The address of the account that will receive the tokens.
     * @param tokenId The ID of the token to be minted.
     * @param amount The amount of the token to be minted.
     * @param deadline The deadline for the transaction to be executed.
     * @param signature A signature proving that the transaction was approved by the account owner.
     */
    function mint(
        address minter,
        uint256 tokenId,
        uint256 amount,
        uint256 deadline,
        bytes memory signature
    ) external;
}