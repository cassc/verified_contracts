{"SourceCode": "// SPDX-License-Identifier: MIT\r\n// \r\n//          NNNNNNNN        NNNNNNNN     OOOOOOOOO     NNNNNNNN        NNNNNNNNEEEEEEEEEEEEEEEEEEEEEE\r\n//          N:::::::N       N::::::N   OO:::::::::OO   N:::::::N       N::::::NE::::::::::::::::::::E\r\n//          N::::::::N      N::::::N OO:::::::::::::OO N::::::::N      N::::::NE::::::::::::::::::::E\r\n//          N:::::::::N     N::::::NO:::::::OOO:::::::ON:::::::::N     N::::::NEE::::::EEEEEEEEE::::E\r\n//          N::::::::::N    N::::::NO::::::O   O::::::ON::::::::::N    N::::::N  E:::::E       EEEEEE\r\n//          N:::::::::::N   N::::::NO:::::O     O:::::ON:::::::::::N   N::::::N  E:::::E             \r\n//          N:::::::N::::N  N::::::NO:::::O     O:::::ON:::::::N::::N  N::::::N  E::::::EEEEEEEEEE   \r\n//          N::::::N N::::N N::::::NO:::::O     O:::::ON::::::N N::::N N::::::N  E:::::::::::::::E   \r\n//          N::::::N  N::::N:::::::NO:::::O     O:::::ON::::::N  N::::N:::::::N  E:::::::::::::::E   \r\n//          N::::::N   N:::::::::::NO:::::O     O:::::ON::::::N   N:::::::::::N  E::::::EEEEEEEEEE   \r\n//          N::::::N    N::::::::::NO:::::O     O:::::ON::::::N    N::::::::::N  E:::::E             \r\n//          N::::::N     N:::::::::NO::::::O   O::::::ON::::::N     N:::::::::N  E:::::E       EEEEEE\r\n//          N::::::N      N::::::::NO:::::::OOO:::::::ON::::::N      N::::::::NEE::::::EEEEEEEE:::::E\r\n//          N::::::N       N:::::::N OO:::::::::::::OO N::::::N       N:::::::NE::::::::::::::::::::E\r\n//          N::::::N        N::::::N   OO:::::::::OO   N::::::N        N::::::NE::::::::::::::::::::E\r\n//          NNNNNNNN         NNNNNNN     OOOOOOOOO     NNNNNNNN         NNNNNNNEEEEEEEEEEEEEEEEEEEEEE\r\n// \r\n// \r\n//                  An enterprise level discord based NFT and shitcoin trading tool...\r\n// \r\n//                                          https://noneth.io\r\n//                                        https://docs.noneth.io\r\n//                                      https://discord.gg/noneth\r\n//                                     https://twitter.com/nonethio\r\n// \r\n//                                          None Splitter Contract\r\n//                      The purpose of this contract is to run the bot fees through it,\r\n//                                     and automatically splitting it.\r\n//                                              40% Team\r\n//                                             40% Holders\r\n//                                             20% Referrer\r\n\r\npragma solidity 0.8.19;\r\n\r\ncontract Splitter {\r\n    address payable public constant team = payable(0x8B8af6C77C6AD634a236448143f888BEd585348b); // team address\r\n    address payable public constant holder = payable(0x6dE12E27A193E036f0C91C5762794cC6410a13C1); // holder address\r\n    event Split(address indexed referrer, uint256 value);\r\n\r\n    constructor() payable {\r\n    }\r\n    error TransferToTeamFailed();\r\n    error TransferToReferrerFailed();\r\n    error TransferToHolderFailed();\r\n    function splitFunds_j78(address payable referrer) external payable {\r\n        uint256 teamAndHolderAmount;\r\n        uint256 referrerAmount;\r\n        unchecked {\r\n            if (referrer != address(0)) \r\n                referrerAmount = (msg.value * 20) / 100; // If referrer is supplied 20%\r\n\r\n            teamAndHolderAmount = (msg.value - referrerAmount) / 2; // Split this and send equal amounts to team/holders\r\n        }\r\n\r\n        // Transfer the amounts \r\n        (bool successTeam, ) = team.call{value: teamAndHolderAmount}(\"\");\r\n        if (!successTeam) {\r\n            revert TransferToTeamFailed();\r\n        }\r\n\r\n        (bool successHolder, ) = holder.call{value: teamAndHolderAmount}(\"\");\r\n        if (!successHolder) {\r\n            revert TransferToHolderFailed();\r\n        }\r\n\r\n        if (referrerAmount >= 1) {\r\n            (bool successReferrer, ) = referrer.call{value: referrerAmount}(\"\");\r\n            if (!successReferrer) {\r\n                revert TransferToReferrerFailed();\r\n            }\r\n        }\r\n\r\n        emit Split(referrer, msg.value); // Event emission\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TransferToHolderFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToReferrerFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToTeamFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Split\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"holder\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"splitFunds_j78\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"team\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Splitter", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://db4c4a70b426c09bc84eba424a7e99df443d3c47e0c8fd5d02c9b3da41216263"}