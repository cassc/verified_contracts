{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.26;\r\n\r\n/*\r\n             _______\r\n         ,-'``       ``'-.\r\n      ,-'                 '-.\r\n    ,'                       `.\r\n  ,'                           `.\r\n /                               \\\r\n|                                 |\r\n|                O                |\r\n|                                 |\r\n \\                               /\r\n  `.                           ,'\r\n    `.                       ,'\r\n      `-.                 ,-'\r\n         `'-.._______..-'`\r\n\r\n ____  ____  ____  ____  ____  __ _   ___  ____       \r\n(  _ \\(  _ \\(  __)/ ___)(  __)(  ( \\ / __)(  __)      \r\n ) __/ )   / ) _) \\___ \\ ) _) /    /( (__  ) _)       \r\n(__)  (__\\_)(____)(____/(____)\\_)__) \\___)(____)      \r\n ____  ____   __  ____  __    ___  __   __            \r\n(  _ \\(  _ \\ /  \\(_  _)/  \\  / __)/  \\ (  )           \r\n ) __/ )   /(  O ) )( (  O )( (__(  O )/ (_/\\         \r\n(__)  (__\\_) \\__/ (__) \\__/  \\___)\\__/ \\____/  \r\n\r\n*/\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract PresenceProtocol {\r\n    int256 public latitude;\r\n    int256 public longitude;\r\n    address public owner;\r\n    event LocationUpdate(int256 latitude, int256 longitude, uint256 time);\r\n\r\n    error NotOwner(address caller, address expected);\r\n\r\n    // sets owner to the provided address\r\n    constructor(address _owner) {\r\n        owner = _owner;\r\n    }\r\n\r\n    // owner can withdraw Ether\r\n    function withdrawEther() public {\r\n        if (msg.sender != owner) revert NotOwner(msg.sender, owner);\r\n        payable(owner).transfer(address(this).balance);\r\n    }\r\n\r\n    // owner can withdraw ERC-20 tokens\r\n    function withdrawERC20(address tokenAddress, uint256 amount) public {\r\n        if (msg.sender != owner) revert NotOwner(msg.sender, owner);\r\n        IERC20(tokenAddress).transfer(owner, amount);\r\n    }\r\n\r\n    // to support receiving ETH by default\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n\r\n    // owner can set new owner if needed\r\n    function setOwner(address newOwner) external {\r\n        if (msg.sender != owner) revert NotOwner(msg.sender, owner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    // owner can set the location\r\n    function setLocation(int256 _latitude, int256 _longitude) external {\r\n        if (msg.sender != owner) revert NotOwner(msg.sender, owner);\r\n        latitude = _latitude;\r\n        longitude = _longitude;\r\n        emit LocationUpdate(_latitude, _longitude, block.timestamp);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"latitude\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"longitude\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"LocationUpdate\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"latitude\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"longitude\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_latitude\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_longitude\",\"type\":\"int256\"}],\"name\":\"setLocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PresenceProtocol", "CompilerVersion": "v0.8.26+commit.8a97fa7a", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000006f4db783097c632b888669032b2905f70e08105", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU LGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://00d28eca346c425bdc38d96b089286419501123365e31d429048693fdcba71f4"}