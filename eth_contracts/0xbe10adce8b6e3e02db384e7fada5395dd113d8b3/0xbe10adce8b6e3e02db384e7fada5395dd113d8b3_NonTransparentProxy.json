{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"modules/globals/modules/non-transparent-proxy/contracts/NonTransparentProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.8.7;\\n\\nimport { INonTransparentProxy } from \\\"./interfaces/INonTransparentProxy.sol\\\";\\n\\ncontract NonTransparentProxy is INonTransparentProxy {\\n\\n    bytes32 private constant ADMIN_SLOT          = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\"))          - 1);\\n    bytes32 private constant IMPLEMENTATION_SLOT = bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1);\\n\\n    constructor(address admin_, address implementation_) {\\n        _setAddress(ADMIN_SLOT,          admin_);\\n        _setAddress(IMPLEMENTATION_SLOT, implementation_);\\n    }\\n\\n    /**************************************************************************************************************************************/\\n    /*** Admin Functions                                                                                                                ***/\\n    /**************************************************************************************************************************************/\\n\\n    function setImplementation(address newImplementation_) override external {\\n        require(msg.sender == _admin(), \\\"NTP:SI:NOT_ADMIN\\\");\\n        _setAddress(IMPLEMENTATION_SLOT, newImplementation_);\\n    }\\n\\n    /**************************************************************************************************************************************/\\n    /*** View Functions                                                                                                                 ***/\\n    /**************************************************************************************************************************************/\\n\\n    function _admin() internal view returns (address admin_) {\\n        admin_ = _getAddress(ADMIN_SLOT);\\n    }\\n\\n    function _implementation() internal view returns (address implementation_) {\\n        implementation_ = _getAddress(IMPLEMENTATION_SLOT);\\n    }\\n\\n    /**************************************************************************************************************************************/\\n    /*** Utility Functions                                                                                                              ***/\\n    /**************************************************************************************************************************************/\\n\\n    function _setAddress(bytes32 slot_, address value_) private {\\n        assembly {\\n            sstore(slot_, value_)\\n        }\\n    }\\n\\n    function _getAddress(bytes32 slot_) private view returns (address value_) {\\n        assembly {\\n            value_ := sload(slot_)\\n        }\\n    }\\n\\n    /**************************************************************************************************************************************/\\n    /*** Fallback Function                                                                                                              ***/\\n    /**************************************************************************************************************************************/\\n\\n    fallback() external {\\n        address implementation_ = _implementation();\\n\\n        require(implementation_.code.length != 0, \\\"NTP:F:NO_CODE_ON_IMPLEMENTATION\\\");\\n\\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n\\n            let result := delegatecall(gas(), implementation_, 0, calldatasize(), 0, 0)\\n\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n}\\n\"\r\n    },\r\n    \"modules/globals/modules/non-transparent-proxy/contracts/interfaces/INonTransparentProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity 0.8.7;\\n\\ninterface INonTransparentProxy {\\n\\n    /**\\n     *  @dev   Sets the implementation address.\\n     *  @param newImplementation_ The address to set the implementation to.\\n     */\\n    function setImplementation(address newImplementation_) external;\\n\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"address-registry/=modules/address-registry/contracts/\",\r\n      \"contract-test-utils/=modules/erc20/modules/contract-test-utils/contracts/\",\r\n      \"ds-test/=modules/forge-std/lib/ds-test/src/\",\r\n      \"erc20-helper/=modules/erc20-helper/src/\",\r\n      \"erc20/=modules/erc20/\",\r\n      \"fixed-term-loan-manager/=modules/fixed-term-loan-manager/contracts/\",\r\n      \"fixed-term-loan/=modules/fixed-term-loan/contracts/\",\r\n      \"forge-std/=modules/forge-std/src/\",\r\n      \"globals/=modules/globals/contracts/\",\r\n      \"liquidations/=modules/liquidations/contracts/\",\r\n      \"maple-proxy-factory/=modules/open-term-loan/modules/maple-proxy-factory/\",\r\n      \"non-transparent-proxy/=modules/globals/modules/non-transparent-proxy/\",\r\n      \"ntp/=modules/pool-permission-manager/modules/ntp/\",\r\n      \"open-term-loan-manager/=modules/open-term-loan-manager/contracts/\",\r\n      \"open-term-loan/=modules/open-term-loan/contracts/\",\r\n      \"pool-permission-manager/=modules/pool-permission-manager/contracts/\",\r\n      \"pool/=modules/pool/contracts/\",\r\n      \"proxy-factory/=modules/open-term-loan/modules/maple-proxy-factory/modules/proxy-factory/\",\r\n      \"withdrawal-manager-cyclical/=modules/withdrawal-manager-cyclical/contracts/\",\r\n      \"withdrawal-manager-queue/=modules/withdrawal-manager-queue/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "NonTransparentProxy", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000d6d4bcde6c816f17889f1dd3000af0261b03a19600000000000000000000000073a53fcece63d4c0098535f6f62df0f5d12a5175", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xc3530358e54bc81efce4a2e12a898e996b091753", "SwarmSource": ""}