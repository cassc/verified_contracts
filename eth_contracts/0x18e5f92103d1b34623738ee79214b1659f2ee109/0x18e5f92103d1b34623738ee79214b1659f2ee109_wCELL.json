{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"wCELL.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\n/*\\n\\nWrapped CellMates (wCELL)\\nTurn your CELLs into wCELLs that can be fractionally traded on Uniswap.\\n\\nhttps://cellmates.io\\n\\n*/\\n\\ninterface Callable {\\n\\tfunction tokenCallback(address _from, uint256 _tokens, bytes calldata _data) external returns (bool);\\n}\\n\\ninterface CM {\\n\\tfunction balanceOf(address) external view returns (uint256);\\n\\tfunction allowance(address, address) external view returns (uint256);\\n\\tfunction isApprovedForAll(address, address) external view returns (bool);\\n\\tfunction transfer(address _to, uint256 _tokens) external returns (bool);\\n\\tfunction transferFrom(address _from, address _to, uint256 _tokens) external returns (bool);\\n}\\n\\n\\ncontract wCELL {\\n\\n\\tuint256 constant private UINT_MAX = type(uint256).max;\\n\\n\\tCM constant public cellmates = CM(0x7F59B64C6Ee521C0d7E590CF8e4B843cAa236F96);\\n\\n\\tstring constant public name = \\\"Wrapped CellMates\\\";\\n\\tstring constant public symbol = \\\"wCELL\\\";\\n\\tuint8 constant public decimals = 18;\\n\\n\\tstruct User {\\n\\t\\tuint256 balance;\\n\\t\\tmapping(address => uint256) allowance;\\n\\t}\\n\\n\\tstruct Info {\\n\\t\\tmapping(address => User) users;\\n\\t}\\n\\tInfo private info;\\n\\n\\n\\tevent Transfer(address indexed from, address indexed to, uint256 tokens);\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 tokens);\\n\\tevent Wrap(address indexed owner, uint256 tokens);\\n\\tevent Unwrap(address indexed owner, uint256 tokens);\\n\\n\\n\\tfunction wrap(uint256 _tokensOrTokenId) external {\\n\\t\\tuint256 _balanceBefore = cellmates.balanceOf(address(this));\\n\\t\\tcellmates.transferFrom(msg.sender, address(this), _tokensOrTokenId);\\n\\t\\tuint256 _wrapped = cellmates.balanceOf(address(this)) - _balanceBefore;\\n\\t\\trequire(_wrapped > 0);\\n\\t\\tinfo.users[msg.sender].balance += _wrapped * 1e18;\\n\\t\\temit Transfer(address(0x0), msg.sender, _wrapped * 1e18);\\n\\t\\temit Wrap(msg.sender, _wrapped);\\n\\t}\\n\\n\\tfunction unwrap(uint256 _tokens) external {\\n\\t\\trequire(_tokens > 0);\\n\\t\\trequire(balanceOf(msg.sender) >= _tokens * 1e18);\\n\\t\\tinfo.users[msg.sender].balance -= _tokens * 1e18;\\n\\t\\tcellmates.transfer(msg.sender, _tokens);\\n\\t\\temit Transfer(msg.sender, address(0x0), _tokens * 1e18);\\n\\t\\temit Unwrap(msg.sender, _tokens);\\n\\t}\\n\\n\\tfunction transfer(address _to, uint256 _tokens) external returns (bool) {\\n\\t\\treturn _transfer(msg.sender, _to, _tokens);\\n\\t}\\n\\n\\tfunction approve(address _spender, uint256 _tokens) external returns (bool) {\\n\\t\\tinfo.users[msg.sender].allowance[_spender] = _tokens;\\n\\t\\temit Approval(msg.sender, _spender, _tokens);\\n\\t\\treturn true;\\n\\t}\\n\\n\\tfunction transferFrom(address _from, address _to, uint256 _tokens) external returns (bool) {\\n\\t\\tuint256 _allowance = allowance(_from, msg.sender);\\n\\t\\trequire(_allowance >= _tokens);\\n\\t\\tif (_allowance != UINT_MAX) {\\n\\t\\t\\tinfo.users[_from].allowance[msg.sender] -= _tokens;\\n\\t\\t}\\n\\t\\treturn _transfer(_from, _to, _tokens);\\n\\t}\\n\\n\\tfunction transferAndCall(address _to, uint256 _tokens, bytes calldata _data) external returns (bool) {\\n\\t\\t_transfer(msg.sender, _to, _tokens);\\n\\t\\tuint32 _size;\\n\\t\\tassembly {\\n\\t\\t\\t_size := extcodesize(_to)\\n\\t\\t}\\n\\t\\tif (_size > 0) {\\n\\t\\t\\trequire(Callable(_to).tokenCallback(msg.sender, _tokens, _data));\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n\\t\\n\\n\\tfunction totalSupply() public view returns (uint256) {\\n\\t\\treturn cellmates.balanceOf(address(this)) * 1e18;\\n\\t}\\n\\n\\tfunction balanceOf(address _user) public view returns (uint256) {\\n\\t\\treturn info.users[_user].balance;\\n\\t}\\n\\n\\tfunction allowance(address _user, address _spender) public view returns (uint256) {\\n\\t\\treturn info.users[_user].allowance[_spender];\\n\\t}\\n\\n\\tfunction allInfoFor(address _user) external view returns (uint256 totalTokens, uint256 userCELLs, uint256 userAllowance, bool userApprovedForAll, uint256 userBalance) {\\n\\t\\ttotalTokens = totalSupply();\\n\\t\\tuserCELLs = cellmates.balanceOf(_user);\\n\\t\\tuserAllowance = cellmates.allowance(_user, address(this));\\n\\t\\tuserApprovedForAll = cellmates.isApprovedForAll(_user, address(this));\\n\\t\\tuserBalance = balanceOf(_user);\\n\\t}\\n\\n\\n\\tfunction _transfer(address _from, address _to, uint256 _tokens) internal returns (bool) {\\n\\t\\tunchecked {\\n\\t\\t\\trequire(balanceOf(_from) >= _tokens);\\n\\t\\t\\tinfo.users[_from].balance -= _tokens;\\n\\t\\t\\tinfo.users[_to].balance += _tokens;\\n\\t\\t\\temit Transfer(_from, _to, _tokens);\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t}\\n} \"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Unwrap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Wrap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"allInfoFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userCELLs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAllowance\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"userApprovedForAll\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cellmates\",\"outputs\":[{\"internalType\":\"contract CM\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokens\",\"type\":\"uint256\"}],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokensOrTokenId\",\"type\":\"uint256\"}],\"name\":\"wrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "wCELL", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}