{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/shared/Strings.sol\": {\r\n      \"content\": \"// SPDX-FileCopyrightText: \u00a9 2022 Dai Foundation <www.daifoundation.org>\\n// SPDX-License-Identifier: AGPL-3.0-or-later\\n//\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\npragma solidity ^0.6.12;\\n\\nlibrary Strings {\\n    /**\\n     * @dev Concatenates 2 strings together.\\n     * @param s1 The 1st string.\\n     * @param s2 The 2nd string.\\n     * @return The concatenated string.\\n     */\\n    function concat(string memory s1, string memory s2) external pure returns (string memory) {\\n        return string(abi.encodePacked(s1, s2));\\n    }\\n\\n    /**\\n     * @dev Concatenates 2 strings together with a separator.\\n     * @param s1 The 1st string.\\n     * @param s2 The 2nd string.\\n     * @param sep The separator\\n     * @return The concatenated string.\\n     */\\n    function concat(\\n        string memory s1,\\n        string memory s2,\\n        string memory sep\\n    ) external pure returns (string memory) {\\n        return string(abi.encodePacked(s1, sep, s2));\\n    }\\n\\n    /**\\n     * @dev Checks whether a string is empty or not.\\n     * @param s The string.\\n     * @return The concatenated string.\\n     */\\n    function isEmpty(string memory s) external pure returns (bool) {\\n        return bytes(s).length == 0;\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"clipper-mom/=lib/dss-exec-lib/lib/clipper-mom/src/\",\r\n      \"ds-auth/=lib/ds-token/lib/ds-auth/src/\",\r\n      \"ds-math/=lib/ds-math/src/\",\r\n      \"ds-note/=lib/ds-value/lib/ds-thing/lib/ds-note/src/\",\r\n      \"ds-pause/=lib/dss-gem-joins/lib/dss-deploy/lib/ds-pause/src/\",\r\n      \"ds-proxy/=lib/dss-exec-lib/lib/ds-proxy/src/\",\r\n      \"ds-stop/=lib/dss-exec-lib/lib/osm-mom/lib/osm/lib/ds-stop/src/\",\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"ds-thing/=lib/ds-value/lib/ds-thing/src/\",\r\n      \"ds-token/=lib/ds-token/src/\",\r\n      \"ds-value/=lib/ds-value/src/\",\r\n      \"dss-auto-line/=lib/dss-exec-lib/lib/dss-auto-line/src/\",\r\n      \"dss-chain-log/=lib/mip21-toolkit/lib/dss-chain-log/src/\",\r\n      \"dss-deploy/=lib/dss-gem-joins/lib/dss-deploy/src/\",\r\n      \"dss-direct-deposit/=lib/dss-exec-lib/lib/dss-direct-deposit/src/\",\r\n      \"dss-exec-lib/=lib/dss-exec-lib/src/\",\r\n      \"dss-gem-joins/=lib/dss-gem-joins/src/\",\r\n      \"dss-interfaces/=lib/dss-interfaces/src/\",\r\n      \"dss-lerp/=lib/dss-exec-lib/lib/dss-lerp/src/\",\r\n      \"dss-psm/=lib/mip21-toolkit/lib/dss-psm/src/\",\r\n      \"dss/=lib/dss/src/\",\r\n      \"esm/=lib/dss-gem-joins/lib/dss-deploy/lib/esm/src/\",\r\n      \"flipper-mom/=lib/dss-exec-lib/lib/flipper-mom/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"forward-proxy/=lib/forward-proxy/src/\",\r\n      \"ilk-registry/=lib/mip21-toolkit/lib/ilk-registry/src/\",\r\n      \"median/=lib/dss-exec-lib/lib/median/src/\",\r\n      \"mip21-toolkit/=lib/mip21-toolkit/src/\",\r\n      \"mkr-authority/=lib/dss-exec-lib/lib/mkr-authority/src/\",\r\n      \"osm-mom/=lib/dss-exec-lib/lib/osm-mom/src/\",\r\n      \"osm/=lib/dss-exec-lib/lib/osm-mom/lib/osm/src/\",\r\n      \"univ2-lp-oracle/=lib/dss-exec-lib/lib/univ2-lp-oracle/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"istanbul\",\r\n    \"libraries\": {\r\n      \"src/shared/ChecksummedAddress.sol\": {\r\n        \"ChecksummedAddress\": \"0xf2a8cd9d87fa6cc5ce564137fb134a342ce671ab\"\r\n      },\r\n      \"src/shared/SolidityTypeConversions.sol\": {\r\n        \"SolidityTypeConversions\": \"0x0b4dd91c5eacbfe63f73e092f76744701c2508b5\"\r\n      },\r\n      \"src/shared/Strings.sol\": {\r\n        \"Strings\": \"0xd19e0062093449614e21ef44cb50301aba2d5839\"\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s2\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sep\",\"type\":\"string\"}],\"name\":\"concat\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s2\",\"type\":\"string\"}],\"name\":\"concat\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"isEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "Strings", "CompilerVersion": "v0.6.12+commit.27d51765", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}