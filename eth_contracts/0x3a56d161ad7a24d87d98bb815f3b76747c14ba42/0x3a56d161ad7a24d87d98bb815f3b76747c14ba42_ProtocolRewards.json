{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/protocol-rewards/ProtocolRewards.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\n/// @title ProtocolRewards\\n/// @author Coinvise\\n/// @notice Contract for distributing protocol rewards\\ncontract ProtocolRewards {\\n  /// @notice Thrown if total ether transfer doesn't match constituent rewards in `depositRewards`\\n  error InvalidAmount();\\n\\n  /// @notice Thrown if ether transfer fails in `withdrawRewards`\\n  error TransferFailed();\\n\\n  /// @notice Emitted when rewards are deposited\\n  /// @param sender sender address\\n  /// @param _platform platform address\\n  /// @param _platformReward platform reward\\n  /// @param _creator creator address\\n  /// @param _creatorReward creator reward\\n  /// @param _referrer referrer address\\n  /// @param _referrerReward referrer reward\\n  event RewardsDeposited(\\n    address sender,\\n    address indexed _platform,\\n    uint256 _platformReward,\\n    address indexed _creator,\\n    uint256 _creatorReward,\\n    address indexed _referrer,\\n    uint256 _referrerReward\\n  );\\n\\n  /// @notice Emitted when rewards are withdrawn\\n  /// @param _account account address\\n  /// @param _amount amount withdrawn\\n  event Withdrawal(address indexed _account, uint256 _amount);\\n\\n  /// @notice Mapping of account to rewards balance\\n  mapping(address => uint256) public balanceOf;\\n\\n  /// @notice Deposit rewards\\n  /// @dev Increments balance of each account\\n  /// @param _platform platform address\\n  /// @param _platformReward platform reward\\n  /// @param _creator creator address\\n  /// @param _creatorReward creator reward\\n  /// @param _referrer referrer address\\n  /// @param _referrerReward referrer reward\\n  function depositRewards(\\n    address _platform,\\n    uint256 _platformReward,\\n    address _creator,\\n    uint256 _creatorReward,\\n    address _referrer,\\n    uint256 _referrerReward\\n  ) external payable {\\n    if (msg.value != (_platformReward + _creatorReward + _referrerReward)) {\\n      assembly {\\n        mstore(0x00, 0x2c5211c6) // revert InvalidAmount();\\n        revert(0x1c, 0x04)\\n      }\\n    }\\n\\n    if (_platform != address(0) && _platformReward > 0)\\n      balanceOf[_platform] += _platformReward;\\n    if (_creator != address(0) && _creatorReward > 0)\\n      balanceOf[_creator] += _creatorReward;\\n    if (_referrer != address(0) && _referrerReward > 0)\\n      balanceOf[_referrer] += _referrerReward;\\n\\n    assembly {\\n      let memPtr := mload(64)\\n      mstore(memPtr, caller())\\n      mstore(add(memPtr, 32), _platformReward)\\n      mstore(add(memPtr, 64), _creatorReward)\\n      mstore(add(memPtr, 96), _referrerReward)\\n      log4(\\n        memPtr,\\n        128, // sender, _platformReward, _creatorReward, _referrerReward\\n        0xea2fdf7406d73ac5543899b986199b33f5d424510e1cef6a9d120ce546868bca, // RewardsDeposited\\n        shr(96, shl(96, _platform)), // _platform\\n        shr(96, shl(96, _creator)), // _creator\\n        shr(96, shl(96, _referrer)) // _referrer\\n      )\\n    }\\n  }\\n\\n  /// @notice Withdraw rewards\\n  /// @dev Decrements balance of account and transfers ether\\n  /// @param _account account address\\n  function withdrawRewards(address payable _account) external {\\n    uint256 _amount = balanceOf[_account];\\n    assembly {\\n      // if (_amount == 0) return\\n      if iszero(_amount) {\\n        return(0, 0)\\n      }\\n    }\\n\\n    balanceOf[_account] = 0;\\n\\n    assembly {\\n      // _account.call{value: _amount}(\\\"\\\");\\n      if iszero(call(gas(), _account, _amount, 0, 0, 0, 0)) {\\n        mstore(0x00, 0x90b8ec18) // revert TransferFailed();\\n        revert(0x1c, 0x04)\\n      }\\n\\n      let memPtr := mload(64)\\n      mstore(memPtr, _amount)\\n      log2(\\n        memPtr,\\n        32, // _amount\\n        0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65, // Withdrawal(address,uint256)\\n        shr(96, shl(96, _account)) // _account\\n      )\\n    }\\n  }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"metadata\": {\r\n      \"bytecodeHash\": \"none\"\r\n    },\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 800\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_platform\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_platformReward\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_creatorReward\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_referrerReward\",\"type\":\"uint256\"}],\"name\":\"RewardsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platform\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_creatorReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_referrerReward\",\"type\":\"uint256\"}],\"name\":\"depositRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ProtocolRewards", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "800", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}