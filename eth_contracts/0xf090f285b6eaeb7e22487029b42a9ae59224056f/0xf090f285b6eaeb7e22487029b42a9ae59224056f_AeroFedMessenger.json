{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/aero-fed/AeroFedMessenger.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport {ICrossDomainMessenger} from \\\"src/interfaces/opti/ICrossDomainMessenger.sol\\\";\\n\\ncontract AeroFedMessenger {\\n    ICrossDomainMessenger constant crossDomainMessenger = ICrossDomainMessenger(0x866E82a600A1414e583f7F13623F1aC5d58b0Afa);\\n    address public aeroFed;\\n    address public gov;\\n    address public pendingGov;\\n    address public guardian;\\n    address public chair;\\n\\n    uint32 public gasLimit = 750_000;\\n\\n    constructor(address gov_, address chair_, address guardian_, address aeroFed_) {\\n        gov = gov_;\\n        chair = chair_;\\n        guardian = guardian_;\\n        aeroFed = aeroFed_;\\n    } \\n\\n    modifier onlyGov {\\n        if (msg.sender != gov) revert OnlyGov();\\n        _;\\n    }\\n\\n    modifier onlyGovOrGuardian {\\n        if (msg.sender != gov && msg.sender != guardian) revert OnlyGov();\\n        _;\\n    }\\n\\n    modifier onlyPendingGov {\\n        if (msg.sender != pendingGov) revert OnlyPendingGov();\\n        _;\\n    }\\n\\n    modifier onlyChair {\\n        if (msg.sender != chair) revert OnlyChair();\\n        _;\\n    }\\n\\n    error OnlyGov();\\n    error OnlyGovOrGuardian();\\n    error OnlyPendingGov();\\n    error OnlyChair();\\n\\n    //Helper functions\\n\\n    function sendMessage(bytes memory message) internal {\\n        crossDomainMessenger.sendMessage(address(aeroFed), message, gasLimit);\\n    }\\n\\n    //Gov Messaging functions\\n\\n    function setMaxSlippageDolaToUsdc(uint newSlippage_) public onlyGovOrGuardian {\\n        sendMessage(abi.encodeWithSignature(\\\"setMaxSlippageDolaToUsdc(uint256)\\\", newSlippage_));\\n    }\\n\\n    function setMaxSlippageUsdcToDola(uint newSlippage_) public onlyGovOrGuardian {\\n        sendMessage(abi.encodeWithSignature(\\\"setMaxSlippageUsdcToDola(uint256)\\\", newSlippage_));\\n    }\\n\\n    function setMaxSlippageLiquidity(uint newSlippage_) public onlyGovOrGuardian {\\n        sendMessage(abi.encodeWithSignature(\\\"setMaxSlippageLiquidity(uint256)\\\", newSlippage_));\\n    }\\n\\n    function setPendingGov(address newPendingGov_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"setPendingGov(address)\\\", newPendingGov_));\\n    }\\n\\n    function claimGov() public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"claimGov()\\\"));\\n    }\\n\\n    function changeTreasury(address newTreasury_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"changeTreasury(address)\\\", newTreasury_));\\n    }\\n\\n    function changeChair(address newChair_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"changeChair(address)\\\", newChair_));\\n    }\\n\\n    function changeGuardian(address newGuardian_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"changeGuardian(address)\\\", newGuardian_));\\n    }\\n\\n    function changeL2Chair(address newChair_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"changeL2Chair(address)\\\", newChair_));\\n    }\\n\\n    function changeBaseFed(address baseFed_) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"changeBaseFed(address)\\\", baseFed_));\\n    }\\n\\n    //Chair messaging functions\\n\\n    function claimAeroRewards() public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"claimAeroRewards()\\\"));\\n    }\\n\\n    function claimRewards(address[] calldata addrs) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"claimRewards(address)\\\", addrs));\\n    }\\n\\n    function swapAndDeposit(uint dolaAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"swapAndDeposit(uint256)\\\", dolaAmount));\\n    }\\n\\n    function deposit(uint dolaAmount, uint usdcAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"deposit(uint256,uint256)\\\", dolaAmount, usdcAmount));\\n    }\\n\\n    function withdrawLiquidity(uint dolaAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"withdrawLiquidity(uint256)\\\", dolaAmount));\\n    }\\n\\n    function withdrawLiquidityAndSwapToDola(uint dolaAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"withdrawLiquidityAndSwapToDOLA(uint256)\\\", dolaAmount));\\n    }\\n\\n    function withdrawToL1BaseFed(uint dolaAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"withdrawToL1BaseFed(uint256)\\\", dolaAmount));\\n    }\\n\\n    function withdrawToL1BaseFed(uint dolaAmount, uint usdcAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"withdrawToL1BaseFed(uint256,uint256)\\\", dolaAmount, usdcAmount));\\n    }\\n\\n    function swapUSDCtoDOLA(uint usdcAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"swapUSDCtoDOLA(uint256)\\\", usdcAmount));\\n    }\\n\\n    function swapDOLAtoUSDC(uint usdcAmount) public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"swapDOLAtoUSDC(uint256)\\\", usdcAmount));\\n    }\\n\\n    function resign() public onlyChair {\\n        sendMessage(abi.encodeWithSignature(\\\"resign()\\\"));\\n    }\\n\\n    //Gov functions\\n\\n    function withdrawTokensToL1(address l2Token, address to, uint amount) public onlyGov {\\n        sendMessage(abi.encodeWithSignature(\\\"withdrawTokensToL1(address,address,uint256)\\\", l2Token, to, amount));\\n    }\\n\\n    function setGasLimit(uint32 newGasLimit_) public onlyGov {\\n        gasLimit = newGasLimit_;\\n    }\\n\\n    function setPendingMessengerGov(address newPendingGov_) public onlyGov {\\n        pendingGov = newPendingGov_;\\n    }\\n\\n    function claimMessengerGov() public onlyPendingGov {\\n        gov = pendingGov;\\n        pendingGov = address(0);\\n    }\\n\\n    function changeMessengerChair(address newChair_) public onlyGov {\\n        chair = newChair_;\\n    }\\n\\n    function changeMessengerGuardian(address newGuardian_) public onlyGov {\\n        guardian = newGuardian_;\\n    }\\n\\n    function setAeroFed(address aeroFed_) public onlyGov {\\n        aeroFed = aeroFed_;\\n    }\\n}\\n\"\r\n    },\r\n    \"src/interfaces/opti/ICrossDomainMessenger.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity >0.5.0 <0.9.0;\\n\\n/**\\n * @title ICrossDomainMessenger\\n */\\ninterface ICrossDomainMessenger {\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event SentMessage(\\n        address indexed target,\\n        address sender,\\n        bytes message,\\n        uint256 messageNonce,\\n        uint256 gasLimit\\n    );\\n    event RelayedMessage(bytes32 indexed msgHash);\\n    event FailedRelayedMessage(bytes32 indexed msgHash);\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    function xDomainMessageSender() external view returns (address);\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Sends a cross domain message to the target messenger.\\n     * @param _target Target contract address.\\n     * @param _message Message to send to the target.\\n     * @param _gasLimit Gas limit for the provided message.\\n     */\\n    function sendMessage(\\n        address _target,\\n        bytes calldata _message,\\n        uint32 _gasLimit\\n    ) external;\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"arbitrum-nitro/=lib/arbitrum-nitro/\",\r\n      \"arbitrum/=lib/arbitrum/contracts/\",\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"erc4626-tests/=lib/openzeppelin/lib/erc4626-tests/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"openzeppelin/=lib/openzeppelin/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\"\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"london\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gov_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chair_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aeroFed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyChair\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyGov\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyGovOrGuardian\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPendingGov\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"aeroFed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseFed_\",\"type\":\"address\"}],\"name\":\"changeBaseFed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newChair_\",\"type\":\"address\"}],\"name\":\"changeChair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian_\",\"type\":\"address\"}],\"name\":\"changeGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newChair_\",\"type\":\"address\"}],\"name\":\"changeL2Chair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newChair_\",\"type\":\"address\"}],\"name\":\"changeMessengerChair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian_\",\"type\":\"address\"}],\"name\":\"changeMessengerGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTreasury_\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAeroRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMessengerGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addrs\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aeroFed_\",\"type\":\"address\"}],\"name\":\"setAeroFed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"newGasLimit_\",\"type\":\"uint32\"}],\"name\":\"setGasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippage_\",\"type\":\"uint256\"}],\"name\":\"setMaxSlippageDolaToUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippage_\",\"type\":\"uint256\"}],\"name\":\"setMaxSlippageLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSlippage_\",\"type\":\"uint256\"}],\"name\":\"setMaxSlippageUsdcToDola\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingGov_\",\"type\":\"address\"}],\"name\":\"setPendingGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingGov_\",\"type\":\"address\"}],\"name\":\"setPendingMessengerGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"}],\"name\":\"swapAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"swapDOLAtoUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"swapUSDCtoDOLA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidityAndSwapToDola\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawToL1BaseFed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dolaAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawToL1BaseFed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokensToL1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AeroFedMessenger", "CompilerVersion": "v0.8.13+commit.abaa5c0e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000926df14a23be491164dcf93f4c468a50ef659d5b0000000000000000000000008f97cca30dbe80e7a8b462f1dd1a51c32accdfc8000000000000000000000000e3ed95e130ad9e15643f5a5f232a3dae980784cd000000000000000000000000de1697a5da5d06904c9755e3fc287d215579daf0", "EVMVersion": "london", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}