{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n/**\r\n\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28fb\u28ad\u287b\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28af\u28ff\u287f\u28f9\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28bb\u28ed\u28db\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28df\u28bf\r\n\u28ff\u2876\u28fb\u28ff\u28fd\u28ff\u28ff\u28af\u28ff\u28fb\u28f7\u285d\u28e7\u289f\u287c\u28f3\u28ae\u2857\u28de\u28f3\u28ae\u2857\u28de\u28f3\u28ae\u2857\u28fe\u28fd\u28ff\u28fd\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28da\u28af\u2857\u28de\u28f3\u28ae\u2857\u28de\u28f3\u28ae\u2857\u28de\u28f3\u28ae\u2857\u28de\u2873\u28fe\u28ff\u28bf\u28ff\u28df\u28ef\u28df\u28ff\u289e\u28ef\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ef\u28ff\u28ff\u28fb\u28fc\u28ef\u28be\u28f5\u28ef\u28fe\u287d\u28ee\u2877\u28fd\u287e\u28f5\u28ef\u28fe\u28f7\u287d\u28f7\u28bf\u28ff\u28ff\u28ff\u28ff\u28f7\u28bf\u28ff\u28f7\u28af\u28f7\u28fd\u28ee\u28f7\u28af\u28fe\u28fd\u28ee\u28f7\u287d\u28e7\u287f\u28ee\u28fd\u28be\u28fb\u28ff\u28fb\u28af\u28ff\u28df\u28b7\u28ff\u28ff\u28ff\u28b6\r\n\u28ff\u2877\u28ff\u28ff\u28ff\u28ff\u28ef\u28bf\u28ff\u28ff\u28bf\u28cf\u28b7\u28de\u28af\u28f3\u28bb\u28b6\u28fb\u28b7\u287b\u28dd\u28ff\u2879\u28de\u2877\u28ed\u28bb\u28ed\u28bb\u286d\u28df\u28bf\u28de\u28af\u28db\u28be\u28df\u28fb\u28ee\u28b3\u287b\u28dc\u285f\u28ee\u28b3\u287d\u28ae\u28dd\u2873\u28dd\u28a7\u28db\u28ae\u2857\u287f\u28f8\u28fb\u28ff\u28ff\u28fb\u28ff\u28ff\u28df\u28ef\r\n\u28bb\u280d\u28ff\u28ff\u28ff\u285f\u28ff\u2839\u287f\u28bf\u284f\u2809\u2809\u2829\u2809\u2849\u2829\u2809\u280d\u2849\u2829\u2889\u2829\u2809\u2889\u2829\u2809\u280d\u2809\u2889\u2809\u288d\u28cb\u282b\u2809\u2809\u28f9\u280f\u2809\u2809\u282b\u2849\u2801\u2809\u2800\u2809\u2800\u2801\u2800\u2800\u2800\u2880\u2805\u284a\u2800\u2801\u288a\u28bf\u287f\u28ff\u28bf\u28ff\u28ff\u28bf\u2850\r\n\u2814\u2849\u28fe\u2804\u28b9\u2847\u2819\u2801\u2800\u2800\u2801\u2800\u2800\u2800\u28c0\u2880\u28e6\u2876\u28e0\u28e6\u28c0\u28c0\u28c0\u2810\u2818\u2884\u2840\u2820\u2850\u2806\u281b\u2800\u28c9\u2829\u2824\u2824\u2800\u2848\u287b\u2840\u2800\u2880\u2825\u2812\u2820\u2824\u2824\u2864\u2804\u2812\u2808\u2801\u2810\u2853\u2800\u2800\u2830\u28a3\u2813\u289b\u28ff\u28ff\u28df\u2870\u2819\r\n\u2810\u2824\u2800\u2800\u2808\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2888\u28fe\u28df\u28af\u288f\u2873\u28ad\u283a\u287d\u28e0\u2882\u2804\u2840\u2800\u2892\u2840\u280d\u2802\u2809\u2800\u2800\u2800\u2801\u288a\u2828\u28da\u2844\u2819\u2800\u2800\u2800\u2800\u2800\u2833\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281e\u2881\u287f\u2809\u2833\u28a3\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281b\u28f7\u28ff\u28ff\u28fe\u2847\u28ff\u28ff\u28be\u2898\u28e6\u2870\u28a0\u2844\u2800\u28e4\u2844\u2836\u289b\u28a0\u28e4\u2880\u2803\u2844\u2846\u28b8\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u2800\u2800\u28e0\u2806\r\n\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28e4\u28fc\u2800\u2800\u289b\u28af\u2887\u28cb\u28a7\u28e1\u28ff\u283f\u28ef\u28ff\u28c4\u28d9\u28e0\u28d8\u28c0\u2800\u2800\u281b\u2888\u2840\u2820\u2818\u2844\u2803\u2803\u2860\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u2847\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\r\n\u2800\u2800\u2800\u28c0\u2864\u2824\u2864\u2824\u28c4\u2800\u2800\u2800\u2800\u2800\u28bc\u287b\u28aa\u28ed\u28ef\u28fc\u28ff\u28c4\u2800\u2800\u2880\u2819\u283f\u28ff\u285f\u281b\u2813\u2836\u28b6\u28e4\u28e4\u28e4\u28c8\u2800\u2800\u2810\u2800\u2800\u2800\u2800\u28c0\u28c0\u28c0\u28c0\u28c0\u2850\u2841\u2821\u2804\u2840\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u28a0\u281e\u2801\u2800\u2800\u2857\u2801\u2800\u2819\u2886\u2800\u2800\u2800\u2808\u2875\u28ff\u28ff\u28fe\u28ff\u28ef\u28ff\u28f7\u2836\u2836\u283f\u28cd\u2819\u28ff\u28c4\u2840\u2800\u2800\u2899\u28fb\u28ff\u28ff\u2802\u285c\u2801\u2800\u2800\u2800\u2800\u2809\u2809\u2809\u2809\u2808\u2801\u2801\u2874\u28d2\u2800\u2802\u2800\u2801\u2800\u2800\u2800\u2800\u2804\u2882\u2800\u2800\r\n\u2800\u284f\u2800\u2800\u2860\u2822\u2883\u2814\u2811\u2840\u2818\u2846\u2800\u2800\u2800\u28a7\u28bf\u2844\u2800\u28ff\u28ef\u28f5\u28ff\u2800\u2800\u2830\u281b\u288f\u28d0\u2849\u28ff\u28ff\u28ff\u28df\u2809\u2800\u28b0\u28f0\u2879\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a4\u285c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2818\u2857\u2892\u2806\u2800\u2885\u2868\u2882\u2818\u2812\u2892\u2847\u2800\u2800\u2800\u28ef\u28f6\u28ff\u28f7\u28b7\u28fe\u28f6\u28ff\u28f7\u28c4\u2800\u2808\u2817\u2820\u2824\u283a\u282d\u28d5\u2803\u28a4\u28f4\u28f6\u28c6\u28d1\u2852\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u281b\u281b\u2801\u2800\u2800\u2800\u2800\r\n\u2800\u28b3\u2841\u2860\u280a\u281c\u2840\u2801\u2800\u2880\u285c\u2800\u2800\u2800\u2800\u2857\u28ff\u28f7\u28ff\u28ff\u287f\u283f\u282f\u28ff\u28ff\u28ff\u28f6\u28e6\u28e4\u28f4\u28f6\u28ef\u28f4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2880\u2810\u2800\u2800\u2820\u2804\u2800\u28d0\u2856\u2840\u28b4\u2816\u2802\u2800\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2819\u2826\u28c4\u28c8\u28c7\u2860\u2814\u280b\u2800\u2800\u2800\u2800\u2800\u2838\u283c\u283f\u28c4\u28a0\u283e\u2847\u283c\u2827\u2837\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u286d\u288d\u28ff\u28ff\u28ff\u28ff\u28ff\u2864\u28de\u28c0\u2840\u2800\u2800\u2808\u2860\u2818\u28c7\u2834\u2882\u2874\u2806\u2860\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28a4\u2860\u281c\u28bf\u2877\u28fe\u28be\u2877\u28fe\u28b7\u287f\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u28ff\u28f7\u2840\u2888\u28bd\u284d\u2833\u2813\u2809\u2819\u2809\u283a\u2806\u2866\u280a\u2800\u2880\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a8\u2882\u2815\u2802\u2800\u281b\u2819\u2813\u281b\u2819\u289a\u28fd\u28ff\u28ff\u28ff\u287f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u283f\u2804\u2838\u28ff\u28ff\u28ff\u28e7\u2818\u2838\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u280a\u2800\u2800\u2880\u2856\u2800\u28b3\u2840\u28b0\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2804\u2800\u2800\u2801\u2800\u2840\u2800\u2800\u2800\u2820\u2803\u2806\u2800\u2800\u2800\u2800\u28b0\u284e\u28c7\u281a\u28ad\u2841\u2800\u2808\u2886\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28c7\u28c2\u2860\u2892\u2874\u280b\u2808\u2819\u283b\u2847\u2818\u2838\u2800\u2800\u2800\u2820\u280a\u2820\u2800\u2800\u2800\u2808\u2801\u2824\u280e\u2800\u28b8\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2880\u2860\u2888\u2810\u2820\u2841\u2810\u2848\u28e0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2840\u28ff\u2880\u2844\u2808\u28a2\u2884\u2888\u28ff\u28ff\u28ff\u28ff\u28ff\u28fb\u2803\u2800\u28ba\u281e\u2800\u2800\u28c0\u2824\u28b6\u2809\u28a4\u2800\u2844\u2820\u2800\u2800\u2800\u2818\u2806\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2889\u2822\u2840\u2800\u2800\r\n\u2800\u2880\u28fe\u2857\u2880\u28fe\u28f6\u28f6\u2847\u2880\u28ff\u28e7\u2840\u2880\u28f4\u28fa\u28cd\u28fb\u28ff\u28ff\u28ff\u28f7\u28ff\u28df\u28fb\u28ec\u28df\u281d\u2866\u2800\u2872\u284e\u285c\u2847\u2800\u2800\u2880\u28e4\u28f6\u28cf\u2859\u28f7\u28e6\u28c8\u28d0\u2840\u2800\u2800\u2822\u2840\u2808\u2810\u28a9\u2801\u2800\u2880\u2800\u2840\u2800\u2819\u2809\u2809\u2801\u2800\u2800\r\n\u2800\u28fe\u28ff\u28f7\u28ff\u28ff\u28ff\u28ff\u28ff\u28fc\u28ff\u28ff\u28c7\u2818\u28bb\u28ff\u28bf\u281f\u287f\u289f\u28ff\u28fb\u28ff\u28db\u289b\u2859\u287b\u2800\u2808\u2806\u2834\u281e\u284f\u2819\u2812\u28b2\u281a\u281b\u281b\u281b\u2803\u28ff\u28ff\u28df\u280f\u2800\u2810\u2800\u2800\u2808\u2810\u2800\u2801\u2840\u2801\u2802\u2810\u2800\u2801\u2858\u2810\u2800\u2800\u2800\u2800\r\n\u28df\u287f\u28fd\u28bb\u28bf\u287d\u28f7\u28bf\u28fb\u28df\u28ef\u28df\u28ff\u28bb\u28af\u28df\u28ef\u28ff\u283f\u28ed\u2800\u2800\u286e\u28a4\u285f\u28fc\u2831\u28e4\u28b4\u2800\u284f\u28dc\u2828\u2844\u2864\u2840\u2837\u280e\u2880\u2803\u2800\u28ff\u289b\u2801\u2800\u2800\u2804\u2802\u2800\u2802\u2800\u2810\u2820\u2800\u2810\u2812\u2802\u2808\u2800\u2801\u2800\u2800\u2800\u2800\u2800\r\n\u287f\u28fc\u28f3\u28df\u28ee\u28b7\u28ed\u28be\u2875\u28de\u28f6\u287b\u28de\u28ef\u289f\u28fe\u28fd\u28be\u287b\u28fc\u2840\u2800\u28df\u2867\u2807\u28ff\u28a9\u28ff\u2844\u2803\u28b8\u28b2\u2851\u2842\u28c7\u2810\u28de\u2856\u28a8\u2890\u2814\u2843\u2800\u2847\u2800\u2809\u2800\u2809\u2808\u2821\u28c1\u2802\u2800\u2804\u2820\u2800\u2824\u2808\u2808\u2800\u2800\u2800\u2844\u2840\u2800\r\n\u28ff\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28df\u28f7\u28ef\u28df\u28f7\u28fd\u28c3\u28c0\u28f7\u2857\u2800\u28ff\u28b8\u28ff\u28fe\u28f6\u28ff\u28f9\u2840\u28e7\u28b9\u28f7\u28e7\u28f7\u28fe\u28e5\u2800\u28a1\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a1\u28c4\u2802\u2880\u28a0\u28e4\u284d\u2800\u2802\u2846\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u287f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2839\u28fc\u285f\u2800\u28bf\u284c\u287f\u28fe\u28ff\u28ff\u287f\u2801\u28b8\u287c\u28bf\u28ff\u28fc\u28ff\u28ff\u2847\u28b3\u2836\u2847\u2800\u2800\u2800\u2800\u2846\u2803\u284e\u2806\u2808\u2800\u2800\u2800\u2838\u28b0\u2800\u281b\u2838\u28bb\u2803\u2847\u281b\r\n\u28ff\u28ff\u28f7\u28ff\u28fb\u28fd\u28df\u28ef\u28f7\u28af\u28ff\u28ff\u28fe\u28ff\u28ff\u28f3\u28ff\u28df\u28fe\u28f3\u28bf\u2856\u2879\u28cf\u2800\u28d3\u28fd\u28f3\u28ff\u28ff\u28ff\u28ff\u2800\u28bc\u28a1\u28fe\u28f6\u28f3\u287f\u28ff\u2807\u289d\u2800\u2847\u2846\u2800\u2800\u2844\u2850\u2885\u2810\u2840\u2802\u2801\u2820\u2808\u2804\u2848\u2800\u2800\u2800\u2842\u28b1\u2803\u288c\r\n\u28ff\u28ff\u28ef\u28f7\u28df\u28f7\u28ef\u28ff\u28fe\u28df\u28ff\u28f3\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28e7\u2857\u28ef\u2880\u28ff\u28ff\u28ff\u28bf\u28fb\u28ff\u28ff\u28e7\u28d2\u28f2\u28b9\u28ff\u28fb\u28f7\u28bf\u28ff\u28c6\u2808\u28c7\u2847\u2800\u2800\u2800\u2804\u2800\u2820\u2850\u2800\u2841\u2804\u2802\u288c\u2801\u2800\u2800\u2804\u2810\u2820\u2808\u2806\r\n\u2800\u2800\u2880\u2804\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2830\u2800\u2800\u2840\u2824\u2800\u2821\u2804\u2889\u285b\u281a\u281a\u28b8\u28ff\u28ff\u28fb\u28ff\u28ff\u28ff\u2847\u2800\u2802\u285c\u28ff\u28ff\u28fd\u28cf\u28ff\u28cf\u2880\u28c0\u28c0\u28d1\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2802\u2804\u2800\u2800\u2800\u2800\u2800\u2810\u2828\r\n\u2840\u2800\u2801\u2800\u2814\u2809\u2809\u2800\u2832\u2800\u2809\u2809\u2809\u2809\u2889\u2802\u2800\u2800\u2810\u2830\u2801\u2804\u2800\u2800\u2800\u28dc\u28ec\u28ff\u28fd\u28ff\u28ff\u28ff\u2807\u2824\u28c0\u28a2\u28bf\u283f\u287e\u28ff\u287d\u2850\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2822\u2848\u2810\u2800\u2840\u2800\u2800\u2800\r\n\u28c0\u2880\u28c0\u2840\u2800\u2804\u2800\u2802\u2800\u2822\u2822\u2802\u2800\u2822\u2801\u2880\u2820\u2801\u2800\u2804\u2800\u2820\u2840\u28f8\u28b7\u283d\u283f\u28dd\u28ba\u285b\u284d\u285c\u2858\u2886\u2825\u288a\u28bd\u2832\u2836\u28be\u284f\u2881\u2862\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2804\u2800\u2840\u2800\u2810\u2884\u2800\u2801\u2800\u2830\r\n\u28dc\u286b\u28fd\u28bd\u28df\u2872\u28b6\u2826\u28e5\u28c4\u28c0\u2844\u2802\u2860\u2800\u2880\u28a0\u28a0\u2882\u2800\u2808\u2800\u2800\u2800\u2809\u2818\u2813\u2828\u2826\u2835\u2838\u2830\u2889\u280e\u281c\u280c\u280a\u280c\u282d\u2809\u2813\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2811\u2820\u2802\u2801\u2800\u2820\u2800\u2800\u2884\u2800\u2822\u2800\u2801\u2820\u2840\u2800\r\n\u28ae\u2837\u28ae\u2837\u28ae\u28fd\u28e7\u283f\u28e6\u2837\u287d\u28be\u287d\u2875\u28f6\u28e6\u28e4\u28a4\u28ec\u2864\u2824\u2825\u2824\u2801\u2804\u2802\u2824\u2800\u2840\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2800\u2800\u2820\u2824\u2834\u2802\u280b\u281b\u2813\u2800\u2820\u2830\u2824\u2824\u2824\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u28e3\u289a\u284c\u28e3\u283f\u28ce\u286e\u285d\u28fc\u2879\u28ed\u2833\u28dc\u2871\u2887\u285e\u286c\u2883\u282f\u285c\u2869\u288f\u2854\u2872\u28a0\u2824\u28c0\u28c0\u2800\u2808\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2822\u2820\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2811\u2800\u2800\u2800\u2800\u2800\u2800\r\n\r\nTelegram: https://t.me/BNBCoin_ETH\r\nWebsite: https://www.dextertrump.com/\r\nTwitter: https://twitter.com/BNBCoin_ETH\r\n*/\r\n\r\npragma solidity 0.8.20;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract BNB is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    address payable private _taxWallet;\r\n    uint256 firstBlock;\r\n\r\n    uint256 private _initialBuyTax=25;\r\n    uint256 private _initialSellTax=25;\r\n    uint256 private _finalBuyTax=1;\r\n    uint256 private _finalSellTax=1;\r\n    uint256 private _reduceBuyTaxAt=30;\r\n    uint256 private _reduceSellTaxAt=30;\r\n    uint256 private _preventSwapBefore=30;\r\n    uint256 private _buyCount=0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 42042042042000 * 10**_decimals;\r\n    string private constant _name = unicode\"DexterTrumpPhantomTransformersSnoopDog420INU\";\r\n    string private constant _symbol = unicode\"BNB\";\r\n    uint256 public _maxTxAmount =   420420420420 * 10**_decimals;\r\n    uint256 public _maxWalletSize = 420420420420 * 10**_decimals;\r\n    uint256 public _taxSwapThreshold= 420420420420 * 10**_decimals;\r\n    uint256 public _maxTaxSwap= 420420420420 * 10**_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n        \r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n\r\n                if (firstBlock + 3  > block.number) {\r\n                    require(!isContract(to));\r\n                }\r\n                _buyCount++;\r\n            }\r\n\r\n            if (to != uniswapV2Pair && ! _isExcludedFromFee[to]) {\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance>_taxSwapThreshold && _buyCount>_preventSwapBefore) {\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function isContract(address account) private view returns (bool) {\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n        firstBlock = block.number;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "BNB", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://4e4b3a91b5bd2697465d60ff79280ccbc032135837184f008b9e6584893ba528"}