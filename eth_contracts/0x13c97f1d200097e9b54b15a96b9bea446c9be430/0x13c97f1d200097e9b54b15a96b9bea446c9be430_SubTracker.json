{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"splitreg.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.18;\\r\\n\\r\\n/// @title User Deposit, Owner and Partner Withdrawal Contract with Username Clearing\\r\\n/// @author 5thWeb.io\\r\\n/// @notice This contract allows users to deposit Ethereum and record their username.\\r\\ncontract SubTracker {\\r\\n\\r\\n    error NoZeros();\\r\\n    error IncorrectPayment();\\r\\n\\r\\n    address private partnerAddress;\\r\\n    address private partnerAddress1;\\r\\n    address[] public userAddresses;  // Array to keep track of all addresses\\r\\n    mapping(address => string) public usernames;\\r\\n    mapping(address => uint256) public deposits;\\r\\n    mapping(address => uint256) public timestamp;\\r\\n    uint256 public oneWeekPayment = 0.15 ether;\\r\\n    uint256 public oneMonthPayment = 0.5 ether;\\r\\n\\r\\n    event Deposited(address indexed user, uint256 amount, string username, uint256 timestamp);\\r\\n    event Withdrawn(uint256 partnerAmount1, uint256 partnerAmount);\\r\\n    event UsernameCleared(address indexed user);\\r\\n    event PaymentAmountsUpdated(uint256 newOneWeekPayment, uint256 newOneMonthPayment);\\r\\n\\r\\n    constructor(address _partnerAddress1, address _partnerAddress) {\\r\\n        if (_partnerAddress1 == address(0) || _partnerAddress == address(0)) {\\r\\n            revert NoZeros();\\r\\n        }\\r\\n        partnerAddress1 = _partnerAddress1;\\r\\n        partnerAddress = _partnerAddress;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == partnerAddress1 || msg.sender == partnerAddress, \\\"Only the owner can perform this action\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function setPaymentAmounts(uint256 newOneWeekPayment, uint256 newOneMonthPayment) external onlyOwner {\\r\\n        if (newOneWeekPayment == 0 || newOneMonthPayment == 0) {\\r\\n            revert NoZeros();\\r\\n        }\\r\\n        oneWeekPayment = newOneWeekPayment;\\r\\n        oneMonthPayment = newOneMonthPayment;\\r\\n        emit PaymentAmountsUpdated(newOneWeekPayment, newOneMonthPayment);\\r\\n    }\\r\\n\\r\\n    function deposit(string memory _username) external payable {\\r\\n        if (msg.sender == address(0)) {\\r\\n            revert NoZeros();\\r\\n        }\\r\\n        if (msg.value != oneWeekPayment && msg.value != oneMonthPayment) {\\r\\n            revert IncorrectPayment();\\r\\n        }\\r\\n\\r\\n        if (deposits[msg.sender] == 0) {\\r\\n            userAddresses.push(msg.sender);\\r\\n        }\\r\\n\\r\\n        usernames[msg.sender] = _username;\\r\\n        deposits[msg.sender] += msg.value;\\r\\n        timestamp[msg.sender] = block.timestamp;\\r\\n\\r\\n        emit Deposited(msg.sender, msg.value, _username, block.timestamp);\\r\\n    }\\r\\n\\r\\n    function ownerAddPayer(address paidAddress, string memory _username, uint256 paidValue, uint256 _timestamp) external onlyOwner {\\r\\n        if (deposits[paidAddress] == 0) {\\r\\n            userAddresses.push(paidAddress);\\r\\n        }\\r\\n        \\r\\n        usernames[paidAddress] = _username;\\r\\n        deposits[paidAddress] += paidValue;\\r\\n        timestamp[paidAddress] = _timestamp;\\r\\n\\r\\n        emit Deposited(paidAddress, paidValue, _username, _timestamp);\\r\\n    }\\r\\n\\r\\n    function withdraw() external {\\r\\n        uint256 balance = address(this).balance;\\r\\n        if (balance == 0) {\\r\\n            revert NoZeros();\\r\\n        }\\r\\n\\r\\n        uint256 halfBalance = balance / 2;\\r\\n        payable(partnerAddress1).transfer(halfBalance);\\r\\n        payable(partnerAddress).transfer(halfBalance);\\r\\n\\r\\n        emit Withdrawn(halfBalance, halfBalance);\\r\\n    }\\r\\n\\r\\n    function clearUsername(address userAddress) external onlyOwner {\\r\\n        if (bytes(usernames[userAddress]).length == 0) {\\r\\n            revert NoZeros();\\r\\n        }\\r\\n\\r\\n        delete usernames[userAddress];\\r\\n\\r\\n        emit UsernameCleared(userAddress);\\r\\n    }\\r\\n\\r\\n    function getBalance() external view returns (uint256) {\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    // Function to get all user data\\r\\n    function getAllUsers() external view returns (address[] memory, string[] memory, uint256[] memory, uint256[] memory) {\\r\\n        string[] memory allUsernames = new string[](userAddresses.length);\\r\\n        uint256[] memory allDeposits = new uint256[](userAddresses.length);\\r\\n        uint256[] memory allTimestamps = new uint256[](userAddresses.length);\\r\\n\\r\\n        for (uint i = 0; i < userAddresses.length; i++) {\\r\\n            address userAddress = userAddresses[i];\\r\\n            allUsernames[i] = usernames[userAddress];\\r\\n            allDeposits[i] = deposits[userAddress];\\r\\n            allTimestamps[i] = timestamp[userAddress];\\r\\n        }\\r\\n\\r\\n        return (userAddresses, allUsernames, allDeposits, allTimestamps);\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_partnerAddress1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_partnerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IncorrectPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoZeros\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newOneWeekPayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newOneMonthPayment\",\"type\":\"uint256\"}],\"name\":\"PaymentAmountsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UsernameCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"partnerAmount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"partnerAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"clearUsername\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneMonthPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneWeekPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paidAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"paidValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"ownerAddPayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newOneWeekPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newOneMonthPayment\",\"type\":\"uint256\"}],\"name\":\"setPaymentAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usernames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SubTracker", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000007b006899d5ddd935362f6eac985d92a96c80dbd0000000000000000000000009408cb4e0fe4215b2124b1de851befecc7d33ae3", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}