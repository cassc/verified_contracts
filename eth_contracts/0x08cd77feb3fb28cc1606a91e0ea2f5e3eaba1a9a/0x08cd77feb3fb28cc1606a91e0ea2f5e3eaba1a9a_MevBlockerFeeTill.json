{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/MevblockerFeeTill.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.6;\\n\\ncontract MevBlockerFeeTill {\\n    // --- key invariant ---\\n    // this.balance == earned + sum(bonds)\\n\\n    // --- events ---\\n    event Passed(address indexed previousOwner, address newOwner);\\n    event Relied(address indexed usr);\\n    event Denied(address indexed usr);\\n    event Joined(address indexed usr, uint256 amt);\\n    event Price(uint256 fee);\\n    event Billed(address indexed usr, uint256 amt);\\n    event Unbilled(address indexed usr, uint256 amt);\\n    event Paid(address indexed usr, uint256 amt);\\n    event Drafted(address indexed usr, uint256 amt);\\n    event Fined(address indexed usr, uint256 amt, address to);\\n    event Noped(address indexed usr);\\n    event Exited(address indexed usr, uint256 bond);\\n    event Reaped(uint256 amt);\\n\\n    // --- auth ---\\n    address payable public owner;\\n    mapping (address => bool) public billers;\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"not owner\\\");\\n        _;\\n    }\\n    modifier onlyBiller {\\n        require(billers[msg.sender] == true, \\\"not biller\\\");\\n        _;\\n    }\\n    constructor(address _owner) {\\n        owner = payable(_owner);\\n    }\\n    function pass(address whom) external onlyOwner {\\n        address previousOwner = owner;\\n        owner = payable(whom);\\n        emit Passed(previousOwner, whom);\\n    }\\n    function rely(address whom) external onlyOwner {\\n        billers[whom] = true;\\n        emit Relied(whom);\\n    }\\n    function deny(address whom) external onlyOwner {\\n        billers[whom] = false;\\n        emit Denied(whom);\\n    }\\n\\n    // --- bonding ---\\n    uint256 public wait = 7 days;\\n    mapping (address => uint256) public bonds;\\n    mapping (address => uint256) public noped;\\n\\n    function join() payable external {\\n        bonds[msg.sender] += msg.value;\\n        noped[msg.sender] = 0;\\n        emit Joined(msg.sender, msg.value);\\n    }\\n\\n    // --- billing ---\\n    mapping (address => uint256) public dues;\\n    uint256 public price;\\n    uint256 public earned;\\n\\n    function bill(address[] calldata ids, uint256[] calldata due, uint256 newPrice) external onlyBiller {\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            dues[ids[i]] += due[i];\\n            emit Billed(ids[i], due[i]);\\n        }\\n        price = newPrice;\\n        emit Price(newPrice);\\n    }\\n    function unbill(address[] calldata ids, uint256[] calldata undue) external onlyOwner {\\n        for (uint256 i = 0; i < ids.length; i++) {\\n            dues[ids[i]] -= undue[i];\\n            emit Unbilled(ids[i], undue[i]);\\n        }\\n    }\\n    function pay(address id) payable external {\\n        dues[id] -= msg.value;\\n        earned += msg.value;\\n        emit Paid(id, msg.value);\\n    }\\n\\n    // --- forced payments ---\\n    function draft(address id, uint256 amt) external onlyOwner {\\n        bonds[id] -= amt;\\n        dues[id] -= amt;\\n        earned += amt;\\n        emit Drafted(id, amt);\\n    }\\n    function fine(address id, uint256 amt, address to) external onlyOwner {\\n        bonds[id] -= amt;\\n        payable(to).transfer(amt);\\n        emit Fined(id, amt, to);\\n    }\\n\\n    // --- withdrawing ---\\n    function nope() external {\\n        noped[msg.sender] = block.timestamp;\\n        emit Noped(msg.sender);\\n    }\\n    function exit() external {\\n        require(noped[msg.sender] != 0, \\\"didn't nope\\\");\\n        require(block.timestamp > noped[msg.sender] + wait, \\\"too early\\\");\\n        require(dues[msg.sender] == 0, \\\"didn't pay\\\");\\n        uint256 bond = bonds[msg.sender];\\n        bonds[msg.sender] = 0;\\n        payable(msg.sender).transfer(bond);\\n        emit Exited(msg.sender, bond);\\n    }\\n    function reap() external onlyOwner {\\n        uint256 amt = earned;\\n        earned = 0;\\n        payable(msg.sender).transfer(amt);\\n        emit Reaped(amt);\\n    }\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 100000\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"viaIR\": false,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Billed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Denied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Drafted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bond\",\"type\":\"uint256\"}],\"name\":\"Exited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Fined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Noped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"Passed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Price\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Reaped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"}],\"name\":\"Relied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"Unbilled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"ids\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"due\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"bill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"billers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"deny\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"draft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"fine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"noped\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"pass\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"rely\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"ids\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"undue\",\"type\":\"uint256[]\"}],\"name\":\"unbill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wait\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "MevBlockerFeeTill", "CompilerVersion": "v0.8.25+commit.b61c2a91", "OptimizationUsed": "1", "Runs": "100000", "ConstructorArguments": "00000000000000000000000076f7a89c1eb4502b911cf58f7aa7c2a1da844f80", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}