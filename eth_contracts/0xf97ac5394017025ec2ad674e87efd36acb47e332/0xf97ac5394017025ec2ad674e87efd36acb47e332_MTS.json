{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MTS {\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    mapping(address => uint256) public balances;\r\n    mapping(address => mapping(address => uint256)) public allowed;\r\n\r\n    address payable public owner;\r\n\r\n    address public tax = 0xfc43961ce694a42F250ee62b2c330B5680Db032A;\r\n\r\n    uint256 public airdropReleaseDate = 1697328000;\r\n\r\n    uint256 public Fee = 100; // 1%\r\n\r\n    mapping (address => bool) private _isExcludedFromFees;\r\n\r\n    mapping (address => bool) private claimed;\r\n\r\n    receive() external payable {}\r\n\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _initialSupply\r\n    ) {\r\n        \r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n\r\n        totalSupply = _initialSupply * (10 ** uint256(_decimals));\r\n\r\n        owner = payable(msg.sender);\r\n\r\n        balances[owner] = (85 * totalSupply) / 100;\r\n        balances[address(this)] = totalSupply - balances[owner];\r\n\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        require(msg.sender == owner, \"Must be creator\");\r\n        _;\r\n    }\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function balanceOf(address _owner) public view returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function renounceOwnership() public onlyOwner {\r\n        owner = payable(address(0));\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool) {\r\n\r\n        _transfer(msg.sender, _to, _value);\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n\r\n        require(_to != address(0), \"Invalid recipient address\");\r\n        require(_from != address(0), \"Invalid sender address\");\r\n\r\n        require(balances[_from] >= _value, \"Insufficient balance\");\r\n\r\n        if (airdropReleaseDate > block.timestamp) {\r\n            if (claimed[_from] == true) {\r\n                uint256 balance = balances[_from];\r\n                balance -= 37500000 * (10 ** 18);\r\n                require(balance >= _value, \"Airdrop allocation cannot be spent at this time\");\r\n            }\r\n        }\r\n\r\n        uint256 _amount = _value;\r\n\r\n        if(!_isExcludedFromFees[_from] && !_isExcludedFromFees[_to]\r\n        ) {\r\n\r\n            uint256 fees = _value * Fee / 10000;\r\n\r\n            if(fees > 2) {\r\n                if (balances[address(0)] < (20 * totalSupply) / 100) {\r\n                    balances[tax] += fees / 2;\r\n                    balances[address(0)] += fees / 2;\r\n                }\r\n                else {\r\n                    balances[tax] += fees;\r\n                }\r\n            }\r\n\r\n            _amount = _value - fees;\r\n\r\n        }\r\n\r\n        balances[_from] -= _value;\r\n        balances[_to] += _amount;\r\n\r\n        emit Transfer(_from, _to, _amount);\r\n\r\n    }\r\n\r\n    function airdropPool() public view returns (uint256) {\r\n        return balances[address(this)];\r\n    }\r\n\r\n    function hasClaimed(address _account) public view returns (bool) {\r\n        return claimed[_account];\r\n    }\r\n\r\n    function claimAirdrop() public payable returns (bool) {\r\n\r\n        uint256 claimPerPerson = 37500000 * (10 ** 18);\r\n\r\n        require(msg.value >= 7 * (10 ** 14), \"Amount lower than required ETH for claim\");\r\n        require(claimed[msg.sender] == false, \"Cannot claim more than once\");\r\n        require(balances[address(this)] >= claimPerPerson, \"Amount in pool is insufficient\");\r\n        require(block.timestamp < airdropReleaseDate, \"Cannot claim airdrop at this time\");\r\n        \r\n        unchecked {\r\n            balances[address(this)] -= claimPerPerson;\r\n            balances[msg.sender] += claimPerPerson;\r\n        }\r\n\r\n        claimed[msg.sender] = true;\r\n\r\n        owner.transfer(msg.value);\r\n\r\n        emit Transfer(address(this), msg.sender, claimPerPerson);\r\n\r\n        return true;\r\n    }\r\n\r\n    function setClaimDate(uint256 _date) public onlyOwner returns (bool) {\r\n        airdropReleaseDate = _date;\r\n        return true;\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\r\n\r\n        require(allowed[_from][msg.sender] >= _value, \"Allowance exceeded\");\r\n\r\n        _transfer(_from, _to, _value);\r\n\r\n        allowed[_from][msg.sender] -= _value;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public view returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n    function increaseAllowance(address _spender, uint256 _addedValue) public returns (bool) {\r\n        allowed[msg.sender][_spender] += _addedValue;\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address _spender, uint256 _subtractedValue) public returns (bool) {\r\n        uint256 currentAllowance = allowed[msg.sender][_spender];\r\n        require(currentAllowance >= _subtractedValue, \"Allowance exceeded\");\r\n        allowed[msg.sender][_spender] = currentAllowance - _subtractedValue;\r\n        emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\r\n        return true;\r\n    }\r\n\r\n    function setFees(uint256 _Fee) public onlyOwner() {\r\n        require(_Fee <= 1000, \"buy tax too high\");\r\n        Fee = _Fee;\r\n    }\r\n\r\n    function excludeFromFees(address account, bool excluded) public onlyOwner {\r\n        require(_isExcludedFromFees[account] != excluded, \"Account is already the value of 'excluded'\");\r\n        _isExcludedFromFees[account] = excluded;\r\n    }\r\n\r\n    function isExcludedFromFees(address account) public view returns(bool) {\r\n        return _isExcludedFromFees[account];\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropReleaseDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAirdrop\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"excluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_date\",\"type\":\"uint256\"}],\"name\":\"setClaimDate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Fee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tax\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MTS", "CompilerVersion": "v0.8.0+commit.c7dfd78e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000002d79883d2000000000000000000000000000000000000000000000000000000000000000000b4d6574612050616e64617300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034d54530000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://397604c568f64585fc6a1b5cf82b04363680f0011290cc2355c72c57bcb81f77"}