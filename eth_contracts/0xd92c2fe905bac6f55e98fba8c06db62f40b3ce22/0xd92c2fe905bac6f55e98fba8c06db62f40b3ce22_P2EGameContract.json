{"SourceCode": "// File: @chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\r\n//SPDX-License-Identifier: MIT\r\n\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  function getRoundData(\r\n    uint80 _roundId\r\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\r\n}\r\n\r\n// File: contracts/TerminatorGame.sol\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2024-01-07\r\n*/\r\n\r\n/**\r\n *Submitted for verification at Etherscan.io on 2022-11-24\r\n*/\r\n\r\n \r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\n \r\ninterface IERC20 {\r\n \r\n    function totalSupply() external view returns (uint256);\r\n \r\n    function balanceOf(address account) external view returns (uint256);\r\n \r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n \r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n \r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n \r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n \r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n \r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n \r\ncontract P2EGameContract{\r\n \r\n \r\n    address public ceoAddress;\r\n    address public smartContractAddress;\r\n    mapping (address => uint256) public playerToken;\r\n     AggregatorV3Interface internal priceFeed;\r\n     int256 public backPrice;\r\n    address public TokenAdr = 0x508B27902C6c14972a10a4e413B9cFA449e9ceDB;\r\n\r\n\r\n\r\n \r\n    constructor(){\r\n            ceoAddress = msg.sender;\r\n            smartContractAddress = address(this);\r\n            priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\r\n\r\n \r\n        }\r\n \r\n\r\n \r\n \r\n    function setETH(address _adr, uint256 amount) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\"); \r\n (\r\n      ,//  uint80 roundID, \r\n        int256 price,\r\n     ,  // uint startedAt,\r\n   , // uint timeStamp,\r\n   //uintt updatedAt\r\n       // uint80 answeredInRound\r\n    ) = priceFeed.latestRoundData();\r\n\r\n   int256 ethPrice = (10000000000000 /price);\r\n     backPrice = (ethPrice * 100000);\r\n\r\n     playerToken[_adr] = amount;\r\n\r\n    }\r\n   \r\n  \r\n    function depositETH() public payable {}\r\n\r\n    \r\n    function depositToken(uint256 amount) public {\r\n      IERC20(TokenAdr).transferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n\r\n    function emergencyWithdrawETH() public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        (bool os, ) = payable(msg.sender).call{value: address(this).balance}('');\r\n        require(os);\r\n    }\r\n\r\n    function changeSmartContract(address smartContract) public{\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        smartContractAddress = smartContract;\r\n\r\n    \r\n    }\r\n\r\n    function emergencyWithdrawToken(address _adr) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n        uint256 bal = IERC20(_adr). balanceOf(address(this));\r\n        IERC20(_adr).transfer(msg.sender, bal);\r\n    }\r\n\r\n    function withdrawETH(uint256 amount) public payable {\r\n\r\n        require(\r\n                    playerToken[msg.sender] >= amount,\r\n                    \"Cannot Withdraw more then your Balance!!\"\r\n                );\r\n\r\n  require(msg.value == uint256(backPrice) * 1000000000, \"Sent value not equals ETH gas price\");\r\n\r\n       uint256 toPlayer = amount;\r\n\r\n        payable(msg.sender).transfer(toPlayer);\r\n      \r\n         playerToken[msg.sender] = 0;\r\n\r\n \r\n        \r\n    }\r\n\r\n \r\n    function changeCEO(address _adr) public {\r\n        require(msg.sender == ceoAddress, \"Error: Caller Must be Ownable!!\");\r\n\r\n        ceoAddress = _adr;\r\n    }\r\n \r\n  \r\n  \r\n    function balanceOfETH() external view returns (uint256) {\r\n    \r\n        return address(this).balance;\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TokenAdr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOfETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"changeCEO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartContract\",\"type\":\"address\"}],\"name\":\"changeSmartContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smartContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]", "ContractName": "P2EGameContract", "CompilerVersion": "v0.8.9+commit.e5eed63a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://d6460dab662059d35e3346938f3354f1c6ce637801e59bec1909298aa986ac52"}