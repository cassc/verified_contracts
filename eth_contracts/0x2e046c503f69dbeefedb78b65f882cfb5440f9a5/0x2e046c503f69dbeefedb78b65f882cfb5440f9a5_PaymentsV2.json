{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.24;\r\n\r\ninterface ChainlinkOracle {\r\n    function latestAnswer() external view returns (int256);\r\n\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ncontract PaymentsV2 {\r\n    address public deployer;\r\n    address public chainlinkETHFeed =\r\n        0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419;\r\n    bool public isDepositOpen;\r\n\r\n    mapping(string => uint256) public dollarDepositAmount;\r\n\r\n    event Deposit(\r\n        string depositor,\r\n        uint256 ethValue,\r\n        uint256 dollarValue,\r\n        uint256 timestamp\r\n    );\r\n\r\n    constructor() payable {\r\n        deployer = msg.sender;\r\n    }\r\n\r\n    function setChainlinkETHFeed(address _chainlinkETHFeed) external {\r\n        require(msg.sender == deployer, \"No permission\");\r\n        chainlinkETHFeed = _chainlinkETHFeed;\r\n    }\r\n\r\n    function deposit(string calldata _depositor) external payable {\r\n        require(isDepositOpen == true, \"Deposit not open\");\r\n\r\n        uint ethPrice = uint(ChainlinkOracle(chainlinkETHFeed).latestAnswer());\r\n        require(ethPrice > 0, \"Invalid ETH price\");\r\n\r\n        uint8 chainlinkPriceFeedDecimals = ChainlinkOracle(chainlinkETHFeed)\r\n            .decimals();\r\n\r\n        uint depositAmountETH = msg.value;\r\n        // Only 16 to keep Dollars in cents\r\n        uint depositAmountDollar = (depositAmountETH * ethPrice) /\r\n            (10 ** (16 + chainlinkPriceFeedDecimals));\r\n\r\n        dollarDepositAmount[_depositor] += depositAmountDollar;\r\n\r\n        emit Deposit(\r\n            _depositor,\r\n            depositAmountETH,\r\n            depositAmountDollar,\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function getUserTotalDeposit(\r\n        string calldata user\r\n    ) external view returns (uint) {\r\n        return dollarDepositAmount[user];\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////Admin Functions////////////////////////////////////////////////\r\n\r\n    function extractValue() external {\r\n        require(msg.sender == deployer, \"No permission\");\r\n\r\n        if (address(this).balance > 0) {\r\n            payable(deployer).transfer(address(this).balance);\r\n        }\r\n    }\r\n\r\n    function toggleDeposit(bool isOpen) external {\r\n        require(msg.sender == deployer, \"No permission\");\r\n        isDepositOpen = isOpen;\r\n    }\r\n\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"depositor\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dollarValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainlinkETHFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_depositor\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"dollarDepositAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extractValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"user\",\"type\":\"string\"}],\"name\":\"getUserTotalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDepositOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlinkETHFeed\",\"type\":\"address\"}],\"name\":\"setChainlinkETHFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"name\":\"toggleDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PaymentsV2", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2061333b3fe4d110275f5719ef3109012449d2405ce4c1ddcc74f93d90d0088a"}