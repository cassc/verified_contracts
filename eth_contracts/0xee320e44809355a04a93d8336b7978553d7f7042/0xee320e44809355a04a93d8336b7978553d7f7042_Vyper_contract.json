{"SourceCode": "# @version ^0.3.7\r\n\r\nfrom vyper.interfaces import ERC20\r\n\r\nCURRENCY: immutable(ERC20)\r\nAPI_VERSION: immutable(String[8])\r\n\r\nstruct Plan:\r\n    name: String[255]\r\n    price: uint256\r\n    rate_limit_per_day: uint256\r\n    rate_limit_per_minute: uint256\r\n    time_interval: uint256\r\n    is_active: bool\r\n\r\nis_active: bool\r\nowner: address\r\nnum_plans: uint8\r\nplans: HashMap[uint8, Plan]\r\nsubscriptions: HashMap[uint8, HashMap[address, uint256]]\r\n\r\nevent NewSubscriber:\r\n    plan_id: uint8\r\n    subscriber: address\r\n    duration: uint256\r\n\r\nevent PlanCreated:\r\n    plan_id: uint8\r\n    name: String[255]\r\n    price: uint256\r\n    rate_limit_per_day: uint256\r\n    rate_limit_per_minute: uint256\r\n    time_interval: uint256\r\n\r\nevent PlanActivated:\r\n    plan_id: uint8\r\n    \r\nevent PlanRetired:\r\n    plan_id: uint8\r\n\r\nevent SubscriberRetired:\r\n    pass\r\n\r\n@external\r\ndef __init__(currency: address):\r\n    self.owner = msg.sender\r\n    self.is_active = True\r\n    CURRENCY = ERC20(currency)\r\n    API_VERSION = \"0.0.0\"\r\n\r\n##################\r\n# View functions #\r\n##################\r\n\r\n@view\r\n@external\r\ndef get_plan(plan_id: uint8) -> Plan:\r\n    return self.plans[plan_id]\r\n\r\n@view\r\n@external\r\ndef plan_count() -> uint8:\r\n    return self.num_plans\r\n\r\n@view\r\n@external\r\ndef subscription_end(plan_id: uint8, subscriber: address) -> uint256:\r\n    return self.subscriptions[plan_id][subscriber]\r\n\r\n########################\r\n# Subscriber functions #\r\n########################\r\n\r\n@external\r\ndef subscribe(plan_id: uint8, amount: uint256) -> uint256:\r\n    return self._subscribe(plan_id, amount, msg.sender)\r\n\r\n@external\r\ndef subscribe_for(plan_id: uint8, amount: uint256, wallet: address) -> uint256:\r\n    return self._subscribe(plan_id, amount, wallet)\r\n\r\n######################\r\n# Internal functions #\r\n######################\r\n\r\n@internal\r\ndef _check_owner_and_active():\r\n    assert msg.sender == self.owner, \"Only contract owner can call this function.\"\r\n    assert self.is_active, \"Subscription contract has been retired\"\r\n\r\n@internal\r\ndef _subscribe(plan_id: uint8, amount: uint256, subscriber: address) -> uint256:\r\n    assert self.is_active, \"Subscription contract has been retired\"\r\n    plan: Plan = self.plans[plan_id]\r\n    assert plan.is_active, \"Plan does not exist or has been retired.\"\r\n    CURRENCY.transferFrom(subscriber, self, amount)\r\n    duration: uint256 = amount / plan.price\r\n    log NewSubscriber(plan_id, subscriber, duration)\r\n    end_timestamp: uint256 = block.timestamp + duration\r\n    self.subscriptions[plan_id][subscriber] = end_timestamp\r\n    return end_timestamp\r\n\r\n###################\r\n# Owner functions #\r\n###################\r\n\r\n@external\r\ndef create_plan(name: String[255], price: uint256, rate_limit_per_day: uint256, rate_limit_per_minute: uint256, time_interval: uint256) -> Plan:\r\n    '''\r\n    'price' the price per second for your plan, denominated in CURRENCY.\r\n    '''\r\n    self._check_owner_and_active()\r\n    assert len(name) <= 255, \"Plan name is too long.\"\r\n    plan: Plan = Plan({name: name, price: price, rate_limit_per_day: rate_limit_per_day, rate_limit_per_minute: rate_limit_per_minute, time_interval: time_interval, is_active: False})\r\n    plan_id: uint8 = self.num_plans + 1\r\n    self.plans[plan_id] = plan\r\n    self.num_plans = plan_id\r\n    log PlanCreated(plan_id, name, price, rate_limit_per_day, rate_limit_per_minute, time_interval)\r\n    return plan\r\n\r\n@external\r\ndef activate_plan(plan_id: uint8):\r\n    self._check_owner_and_active()\r\n    plan: Plan = self.plans[plan_id]\r\n    assert plan.price > 0, \"Plan does not exist.\"\r\n    assert not plan.is_active, \"Plan is already active.\"\r\n    self.plans[plan_id].is_active = True\r\n    log PlanActivated(plan_id)\r\n\r\n@external\r\ndef retire_plan(plan_id: uint8):\r\n    \"\"\"\r\n    'plan_id': the plan id of the Plan you wish to retire.\r\n    \"\"\"\r\n    self._check_owner_and_active()\r\n    plan: Plan = self.plans[plan_id]\r\n    assert plan.is_active, \"Plan is not active.\"\r\n    plan.is_active = False\r\n    log PlanRetired(plan_id)\r\n\r\n@external\r\ndef retire_contract():\r\n    self._check_owner_and_active()\r\n    self.is_active = False\r\n    log SubscriberRetired()", "ABI": "[{\"name\":\"NewSubscriber\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\",\"indexed\":false},{\"name\":\"subscriber\",\"type\":\"address\",\"indexed\":false},{\"name\":\"duration\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PlanCreated\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\",\"indexed\":false},{\"name\":\"name\",\"type\":\"string\",\"indexed\":false},{\"name\":\"price\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"rate_limit_per_day\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"rate_limit_per_minute\",\"type\":\"uint256\",\"indexed\":false},{\"name\":\"time_interval\",\"type\":\"uint256\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PlanActivated\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"PlanRetired\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\",\"indexed\":false}],\"anonymous\":false,\"type\":\"event\"},{\"name\":\"SubscriberRetired\",\"inputs\":[],\"anonymous\":false,\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"inputs\":[{\"name\":\"currency\",\"type\":\"address\"}],\"outputs\":[]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"get_plan\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_day\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_minute\",\"type\":\"uint256\"},{\"name\":\"time_interval\",\"type\":\"uint256\"},{\"name\":\"is_active\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"plan_count\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}]},{\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"subscription_end\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"},{\"name\":\"subscriber\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"subscribe\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"subscribe_for\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"create_plan\",\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_day\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_minute\",\"type\":\"uint256\"},{\"name\":\"time_interval\",\"type\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_day\",\"type\":\"uint256\"},{\"name\":\"rate_limit_per_minute\",\"type\":\"uint256\"},{\"name\":\"time_interval\",\"type\":\"uint256\"},{\"name\":\"is_active\",\"type\":\"bool\"}]}]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"activate_plan\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"retire_plan\",\"inputs\":[{\"name\":\"plan_id\",\"type\":\"uint8\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"retire_contract\",\"inputs\":[],\"outputs\":[]}]", "ContractName": "Vyper_contract", "CompilerVersion": "vyper:0.3.7", "OptimizationUsed": "0", "Runs": "0", "ConstructorArguments": "0000000000000000000000006b175474e89094c44da98b954eedeac495271d0f", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": ""}