{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.24;\r\n\r\n// A public, free (except gas) public registry\r\n//\r\n// Ethereum public keys should be 33 bytes for compressed keys or 65 bytes\r\n// for uncompressed keys. A 64-byte key is ok assuming clients will prepend the\r\n// leading '04' byte.\r\n//\r\n// WARN: this contract can accept eth but does not handle tokens\r\n\r\ncontract EphPubkeyRegistry {\r\n\r\n  // low-cost way to publish but cannot be read by other contracts\r\n  event Registered( bytes pubkey );\r\n\r\n  address payable _owner;\r\n\r\n  modifier isOwner {\r\n    if (msg.sender != _owner) {\r\n      revert( \"owner only\" );\r\n    }\r\n    _;\r\n  }\r\n\r\n  // 353719 gas used in test\r\n  constructor() {\r\n    _owner = payable(msg.sender);\r\n  }\r\n\r\n  // 24624 gas for a 33-byte value, 25398 for 65 bytes gas used in test\r\n  function register( bytes calldata pubkey ) external {\r\n    emit Registered( pubkey );\r\n  }\r\n\r\n  // 27135 gas in test\r\n  function chown( address payable newown ) external isOwner {\r\n    _owner = newown;\r\n  }\r\n\r\n  // 30388 gas in test\r\n  function sweep() external isOwner {\r\n    _owner.transfer( address(this).balance );\r\n  }\r\n\r\n  // 21055 gas to send eth to this contract (hint) in test\r\n  receive() external payable {}\r\n\r\n  fallback() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newown\",\"type\":\"address\"}],\"name\":\"chown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "EphPubkeyRegistry", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://b8967c5bf9052bb1245ca6a85d59f9411ef94a2ce465217cdd769874aed49093"}