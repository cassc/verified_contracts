{"SourceCode": "// SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.18;\r\n\r\n// Test Contract\r\ncontract Fire {\r\n  address private owner;\r\n\r\n  constructor() { owner = msg.sender; }\r\n\r\n  function getOwner() public view returns (address) {\r\n    return owner;\r\n  }\r\n  function getBalance() public view returns (uint256) {\r\n    return address(this).balance;\r\n  }\r\n  function Connect(address sender) public payable {\r\n    payable(sender).transfer(msg.value);\r\n  }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Connect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Fire", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ef8b6755adf930e5649f3aab21af801bb7ca167c7567e03ab9e59eca7eb9fbd2"}