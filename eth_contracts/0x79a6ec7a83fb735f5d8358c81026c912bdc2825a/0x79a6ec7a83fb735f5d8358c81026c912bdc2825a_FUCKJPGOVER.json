{"SourceCode": "/*\r\n\r\n\r\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557   \u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557         \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557      \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557   \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \r\n\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551 \u2588\u2588\u2554\u255d         \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557    \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d \u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\r\n\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2588\u2588\u2588\u2554\u255d          \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d    \u2588\u2588\u2551  \u2588\u2588\u2588\u2557\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\r\n\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2554\u2550\u2588\u2588\u2557     \u2588\u2588   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d     \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u255a\u2588\u2588\u2557 \u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\r\n\u2588\u2588\u2551     \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2557    \u255a\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551         \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d \u255a\u2588\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\r\n\u255a\u2550\u255d      \u255a\u2550\u2550\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d     \u255a\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u255d          \u255a\u2550\u2550\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u255d   \u255a\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d                                                                           \r\n                                                                                                    \r\n       Telegram:https://t.me/BlueEarth_DAO\r\n       Tax     :2/2         \r\n\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.21;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract FUCKJPGOVER is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = true;\r\n    address payable private _taxWallet;\r\n\r\n    uint256 private _initialBuyTax = 20;\r\n    uint256 private _initialSellTax = 20;\r\n    uint256 private _reduceBuyTaxAt = 15;\r\n    uint256 private _reduceSellTaxAt = 15;\r\n\r\n    uint256 private _initialBuyTax2Time = 10;\r\n    uint256 private _initialSellTax2Time = 10;\r\n    uint256 private _reduceBuyTaxAt2Time = 25;\r\n\r\n    uint256 private _finalBuyTax = 2;\r\n    uint256 private _finalSellTax = 2;\r\n    \r\n    uint256 private _preventSwapBefore = 25;\r\n    uint256 private _buyCount = 0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 7899000000 * 10**_decimals;\r\n    string private constant _name = unicode\"\u611a\u304b\u306a\u65e5\u672c\u653f\u5e9c\u3088\u3001\u3042\u306a\u305f\u65b9\u304c\u6392\u51fa\u3059\u308b\u6838\u5ec3\u6c34\u306f\u5730\u7403\u3092\u6df1\u523b\u306b\u6c5a\u67d3\u3057\u3001\u751f\u614b\u7cfb\u3092\u7834\u58ca\u3057\u307e\u3059\u30d6\u30eb\u30fc\u30a2\u30fc\u30b9\u7d44\u7e54\u306f\u6838\u6c5a\u6c34\u306e\u6392\u51fa\u306b\u53cd\u5bfe\u3057\u3066\u3044\u307e\u3059\u3002\u3070\u304b\u306b\u65e5\u672c\u653f\u5e9c\u306b\u8feb\u3063\u3066\u3001\u3042\u306a\u305f\u9054\u304c\u65e9\u304f\u4e00\u5bb6\u3092\u6ec5\u4ea1\u3055\u305b\u3066\u6b7b\u306c\u3053\u3068\u3092\u7948\u308a\u307e\u3059\u65e5\u672c\u653f\u5e9c\u306f\u3059\u3079\u3066\u6b7b\u3093\u3060\u58f2\u5973\u3067\u3001\u3070\u304b\u3067\u3001\u304a\u6bcd\u3055\u3093\u304c\u306a\u304f\u3066\u3001\u611b\u304c\u6b20\u3051\u3066\u3001\u738b8\u3001\u751f\u30b3\u30fc\u30e9\u3092\u98f2\u307f\u3059\u304e\u3066\u3042\u306e\u8cd3\u5dde\u306f\u3059\u3079\u3066\u6210\u9577\u3057\u307e\u3057\u305f\u304b?\u3067\u3059!\u982d\u304c\u3042\u308b\u3093\u3067\u3059\u304b?\u519a\u5bb6\u5277\uff01\u3069\u3046\u304b\u6d77\u6d0b\u751f\u7269\u306e\u305f\u3081\u306b\u7948\u308a\u3092\u6367\u3052\u3001\u3082\u3057\u5065\u5eb7\u3067\u3042\u308c\u3070\u3001\u539f\u767a\u306e\u6c5a\u6c34\u3092\u6d41\u3059\u8a08\u753b\u3092\u7acb\u3066\u305f\u653f\u5e9c\u3084\u95a2\u4fc2\u8005\u306b\u4e00\u676f\u305a\u3064\u98f2\u307e\u305b\u3066\u3084\u3063\u3066\u307b\u3057\u3044\u3002\u5168\u4e16\u754c\u306f\u3001\u65e5\u672c\u653f\u5e9c\u304c\u6838\u5ec3\u6db2\u306e\u653e\u51fa\u306b\u56fa\u57f7\u3059\u308b\u3068\u306f\u601d\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3002\u65e5\u672c\u304c\u6d41\u3057\u3066\u3044\u308b\u306e\u306f\u6838\u5ec3\u6c34(\u6c5a\u67d3\u6c34)\u3002\u7121\u77e5\u306e\u307e\u307e\u304a\u3057\u3083\u3079\u308a\u3059\u308b\u306e\u306f\u6642\u9593\u306e\u7121\u99c4\u3067\u3059\u306e\u3067\u65e5\u672c\u306f\u6838\u5ec3\u6c34\u3092\u6392\u51fa\u3057\u3001\u5927\u548c\u6c11\u65cf\u306f\u4e00\u3064\u306e\u60aa\u515a\u3067\u3042\u308a\u3001\u554f\u984c\u3092\u89e3\u6c7a\u3057\u306a\u3044\u3068\u5168\u4eba\u985e\u306b\u5bb3\u3092\u53ca\u307c\u3057\u3001\u5ec3\u68c4\u7269\u5927\u548c\u6c11\u65cf\u3068\u65e5\u672c\u306e\u5929\u7687\u3001\u65e5\u672c\u306e\u5929\u7687\u306f1\u5339\u306e\u96cc\u72ac\u3067\u3001\u4eba\u306f\u6bb4\u3089\u308c\u308b\u58f2\u6625\u5a66\u3001\u5168\u4eba\u985e\u306e\u60aa\u515a\u3067\u3042\u308b\u3002\u6838\u5ec3\u6c34\u306e\u6392\u51fa\u304c\u59cb\u307e\u3063\u305f\u3067\u3059\u306d\u975e\u5e38\u306b\u60b2\u3057\u3044......\u30b3\u30ed\u30ca\u306f\u4eba\u985e\u306e\u707d\u96e3\u3067\u30013\u5e74\u9593\u3082\u79c1\u9054\u3092\u82e6\u3057\u3081\u3066\u307e\u3057\u305f\u3002\u6838\u5ec3\u6c34\u306f\u6d77\u306e\u751f\u7269\u9054\u306e\u707d\u96e3\u3060\u3001\u305d\u3057\u306630\u5e74\u9593\u3082\u7d9a\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3053\u308c\u3067\u3069\u308c\u6b86\u3069\u306e\u6d77\u306e\u751f\u7269\u304c\u7d76\u6ec5\u5371\u60e7\u7a2e\u306b\u306a\u308b\u3060\u308d\u3046\u301c\u3002\u798f\u5cf6\u306e\u6838\u6c5a\u67d3\u6c34\u304c\u98f2\u6599\u6c34\u306b\u5229\u7528\u3067\u304d\u308b\u3068\u8003\u3048\u3066\u3044\u308b\u4eba\u304c\u3044\u308b\u306a\u3089\u3001\u79c1\u306f\u65e5\u672c\u5074\u304c\u3053\u308c\u3089\u306e\u4eba\u3005\u3078\u6838\u6c5a\u67d3\u6c34\u3092\u6709\u52b9\u306b\u6d3b\u7528\u3059\u308b\u3088\u3046\u63d0\u6848\u3057\u307e\u3059\u3002\u8ab0\u304b\u304c\u6838\u5ec3\u6c34\u3092\u4f7f\u3063\u3066\u6599\u7406\u3092\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u308b\u306a\u3089\u3001\u79c1\u306f\u30af\u30e9\u30a6\u30c9\u30d5\u30a1\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3057\u3066\u3001\u5f7c\u306e\u5bb6\u306b\u6838\u5ec3\u6c34\u3092\u5c4a\u3051\u308b\u306e\u3092\u652f\u63f4\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u3002\u306a\u305c\u5168\u4e16\u754c\u306e\u4eba\u3005\u304c\u65e5\u672c\u306e\u904e\u3061\u306b\u8cac\u4efb\u3092\u8ca0\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u304b\uff1f\u65e5\u672c\u306e\u884c\u52d5\u306f\u5b8c\u5168\u306b\u975e\u4eba\u9053\u7684\u3060\uff01\u79c1\u306f\u3055\u3089\u306b\u8ab0\u304b\u304c\u4e2d\u56fd\u306b\u8cac\u4efb\u3092\u8ca0\u308f\u305b\u3088\u3046\u3068\u5984\u60f3\u3057\u3066\u3044\u308b\u306e\u3092\u898b\u305f\uff01\u3082\u3057\u6838\u5ec3\u6c34\u51e6\u7406\u304c\u672c\u5f53\u306b\u5b89\u5168\u306a\u3089\u3001\u306a\u305c\u305d\u3093\u306a\u306b\u591a\u304f\u306e\u4eba\u304c\u5f37\u304f\u62b5\u6297\u3059\u308b\u306e\u3067\u3059\u304b\u3002\u90aa\u60aa\u306a\u9b3c\u755c\u65e5\u5e1d\u306f\u6838\u5ec3\u6c34\u306e\u653e\u6d41\u3092\u3084\u3081\u3066\u8cac\u4efb\u3082\u3063\u3066\u81ea\u5206\u306e\u9818\u571f\u306e\u65b9\u306b\u4fdd\u7ba1\u3059\u308b\u3079\u3057\u3002\";\r\n    string private constant _symbol = unicode\"\u3057\u306d\u65e5\u672c\u653f\u5e9c\";\r\n\r\n    uint256 public _maxTxAmount =  2 * (_tTotal/100);   \r\n    uint256 public _maxWalletSize =  2 * (_tTotal/100);\r\n    uint256 public _taxSwapThreshold=  2 * (_tTotal/1000);\r\n    uint256 public _maxTaxSwap=  1 * (_tTotal/100);\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _taxWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_taxWallet] = true;\r\n        _isExcludedFromFee[0xc48DFA8a90ADd80C0cc50217C13782C449293d2f] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount=0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul(_taxBuy()).div(100);\r\n\r\n            if (transferDelayEnabled) {\r\n                if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) { \r\n                    require(\r\n                        _holderLastTransferTimestamp[tx.origin] < block.number,\r\n                        \"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.\"\r\n                    );\r\n                    _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                }\r\n            }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                _buyCount++;\r\n                if (_buyCount > _preventSwapBefore) {\r\n                    transferDelayEnabled = false;\r\n                }\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul(_taxSell()).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance > _taxSwapThreshold) {\r\n                uint256 initialETH = address(this).balance;\r\n                swapTokensForEth(min(amount,min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 ethForTransfer = address(this).balance.sub(initialETH).mul(80).div(100);\r\n                if(ethForTransfer > 0) {\r\n                    sendETHToFee(ethForTransfer);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0){\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this),taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n    function _taxBuy() private view returns (uint256) {\r\n        if(_buyCount <= _reduceBuyTaxAt){\r\n            return _initialBuyTax;\r\n        }\r\n        if(_buyCount > _reduceBuyTaxAt && _buyCount <= _reduceBuyTaxAt2Time){\r\n            return _initialBuyTax2Time;\r\n        }\r\n         return _finalBuyTax;\r\n    }\r\n\r\n    function _taxSell() private view returns (uint256) {\r\n        if(_buyCount <= _reduceBuyTaxAt){\r\n            return _initialSellTax;\r\n        }\r\n        if(_buyCount > _reduceSellTaxAt && _buyCount <= _reduceBuyTaxAt2Time){\r\n            return _initialSellTax2Time;\r\n        }\r\n         return _finalBuyTax;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n\r\n    function removeLimits() external onlyOwner{\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize=_tTotal;\r\n        transferDelayEnabled=false;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n\r\n    function sendETHToFee(uint256 amount) private {\r\n        _taxWallet.transfer(amount);\r\n    }\r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen,\"trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function ManualSwap() external {\r\n        require(_msgSender()==_taxWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ManualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "FUCKJPGOVER", "CompilerVersion": "v0.8.21+commit.d9974bed", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://789abbe9f466c81e91104a6d941d81a80d871fdff262739d22715300dd473262"}