{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/access/Ownable2Step.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        require(pendingOwner() == sender, \\\"Ownable2Step: caller is not the new owner\\\");\\n        _transferOwnership(sender);\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/math/SafeMath.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/TomaccoERC.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\n\\r\\n/*\\r\\nLaunching at 21 UTC\\r\\n\\r\\n-https://t.me/tomaccoerc\\r\\n-LIQ: 3k init liq\\r\\n-TAX: 1/25 at start 1/1 after launch\\r\\n-TOKENOMICS: 96% liq, 4% treasury\\r\\n\\r\\nWHY SHOULD I BUY TOMACCO??\\r\\n\\r\\n-Oh, Daddy! It tastes like Grandma! I want more!\\r\\n-Older than pepe\\r\\n-TOMACCOOOOO \ud83d\udc2e          \\r\\n\\r\\n                                                    ..:::::::.                                      \\r\\n                                                  ~????????????7!^.                                 \\r\\n                                               .^??77777777?J777???7~.                              \\r\\n                                             :???JJ777777777?YJ?7777??7:                            \\r\\n                                            :Y77J?J7?7J7777777?JJJJ777?Y.                           \\r\\n                                            7J777JPYGYGY?77777777777777Y:                           \\r\\n                          ......            J?77J555PJYPJJ?777777777777Y:                           \\r\\n                       .7????????77!~^::.. .Y7777??J??????777777777777?Y                            \\r\\n                       ~Y77777777777???JJJ??YJJJJJJJJJJJJJJJJJJJJJJJJJJY77777!~^:.                  \\r\\n                       .?J77777JJ?777777?JP5YJYPJ777777777777777777??JJJJJJJJJ?????7!~:.            \\r\\n                         ~J?7777?JJJJJJ??Y5J??Y???7777777777???JY5YJ?7777777777!77777???7~:         \\r\\n                          .!J?77?5?J5J5Y???YJ???????????????7!!~~!!7J?777?Y7J?YYJJ7777777???.       \\r\\n                            :7J??JPYY55YP??Y!~~~~~~~~~~~~~~~~~~~~~~~~Y577?YPYGY55J77777777!J7       \\r\\n                              :!?JJY?JYYJY?!~~~~~~~~~~~~~~~~~~~~~~~~^YJ777?PY5PJY777777777?J^       \\r\\n                                .^!???7!!YY7~~~~~~~7?7?!~~~~~~~~~~~~~Y77777JJ?J77777777?J?~.        \\r\\n                                   .^!??JJ~~~~~~~~~^75~~~~~~~~~~!J~~~Y77777777777777???!:           \\r\\n                                       .?J!!!!!!!!7!?Y!!~~~!!!77!Y!!5575777777?????7~:              \\r\\n                                        :J..^.  .:^~7Y. ^^     .:Y!YJPYPY???7!~^^:                  \\r\\n                                         ^?YBY~?7!!!~!J?Y57!!!!7Y?!J~Y5~!!..                        \\r\\n                                          ??~7J5!~~!!!77!!!~~~~~!^~7?J~  .                          \\r\\n                                          .JY???JJJJJJ??JJJJJ?!~^~~!J7Y:                            \\r\\n                                          ^Y?7?7777777777777??JJ?~~77?!                             \\r\\n                                        .?J?7????????????7777777?Y!Y^                               \\r\\n                                        .YJ???7???????????JJJJJ?7?YJ~                               \\r\\n           .^~~~^^..:.                   :!77?Y?77Y?77!Y!~!J..?J77YY!                               \\r\\n        .~YPGGGGBPP5GP7!:                     !7  !!   7^ :J~?J?7?Y7?.                              \\r\\n       :YGPPPPPPPGGGGGGGGJ                    7P?7?Y7??JJ?JJ??7?JJ~!PJ?7.                           \\r\\n      :5GPPG55GPPPPPPPPPPB!                 .7JJP5?7???777777?JJ!~7JJY?JY:                          \\r\\n     .JYGPGY~^?GPPPP5PGPPGJ             ^7?YYJ?YYYJJJ?????JJJ?77???!!P???5.                         \\r\\n     .Y~?5G7~~~PGPP!^~PPPB7          .!JJJ5Y??57!!?5YYYJJJJJ???77!!!?Y???Y7                         \\r\\n      77^^??^~~!PB7^~^JBGJ.        ^7JJ?J5???557!JP55YG?!!!!!!!!!!!?P?????JJ:^....                  \\r\\n      .J!^!?~~~~~7~~~~~Y5:      .~?J????J5?7YJ!JYYPYYY5G7!!!!!77???557?J5PGGBBGPP55Y?!:             \\r\\n       :?7~^~~~~~~~~~~~^?57:  :!JJ???????Y5JY!!!?!?G5557Y???????7!!P??5GGGBPGPGBPPPPPGGJ.           \\r\\n         ~Y?7!~~~~~~~~~~JY?Y~?JJ??????JYYJJY!!!!!!?G5G!!!777!!!!!!JY75GPPPGGGGGPPPPPPPPGJ           \\r\\n         JJ5J~~~~~~~~!?JJ??PJ????????5J???57!!!!!7P5YP!!!!!!!!!!!!5??GPPPPPPPPPPPPPPPPPGG~.         \\r\\n        ^57?Y7!!77?JJJ????YP????????J57??P7!!!!!!55Y5P!!!!!!!!!!!JY??PGPPPPPPPPPPPPGPPG5!!J.        \\r\\n        .JJJ?JJJJJ?????????JPYYY????Y57?5J!!!!!!JPYYYP!!!!!!!!!!!5????PGYYPGPPPG?~~JGG5~^~Y.        \\r\\n          !5????????????????J5J?Y?J5557JY!!!!!!7PYYYYP!!!!!!!!!!JY7???JY^^!YPGGG!~~!G?~^^?5^        \\r\\n          .5??????????????????5?7J5?YY?57!!!!!!55YYYYP!!!!!!!!!!5J????YP7~^^!?Y7~~~J7^~!?PYY^       \\r\\n           ?J???????????????????Y5?75Y57!!!!!!JPYYYY5P!!!!!!!!!7P????5Y5YJJ!^^^~~~~~~^7P?JP?Y       \\r\\n           :5?????????????????7Y5???Y57!!!!!!7PYYYYYYP!!!!!!!!!5J???5JJ57?5J!~~~~~~^~!YJJPY75!      \\r\\n            !5????????????????J5????57!!!!!!!55YYYYYYP!!!!!!!!75???5J7?PJ??JJJ??777?JY?JY?5??Y      \\r\\n             ?Y??????????????J5????5?!!!!!!!JPYYYYYYYP!!!!!!!!YJ??5J????Y5????????????????JJ?5.     \\r\\n              ?Y?????????????P????5?!!!!!!!7PYYYYYYYYP!!!!!!!!5?7Y57?????P???????????????????5.     \\r\\n               ~?JJ?????????5J???5?!!!!!!!!YPYYYYYYY5P!!!!!!!75??P???????5Y?????????????????JJ      \\r\\n                 :!7?JJJJJ?5Y7??57!!!!!!!!!?PYYYYYY55?!!!!!!!!5?5Y????????YY???????????????JJ.      \\r\\n                     .:::.~Y???57!!!!!!!!!!!?P5YY55J!!!!!!!!!!5?P??????????J5YJ???????????Y?.       \\r\\n                         .5???5J!!!!!!!!!!!!!7Y55J!!!!!!!!!!!!5J?????????????JYYYYJJJJJJ57^         \\r\\n                         7Y???BP5YJ?77!!!!!!!!!7!!!!!!!!!!!!!!JY7??????????????????JJJJ?Y!          \\r\\n                        .5??7PBPPGGGGPP55Y?????77777777777????YP?????????????????????????5.         \\r\\n                        ~Y??JBP5PGGGPPPPBJ7777????JGPPPPGGGGGGPBY7???????????????????????Y?         \\r\\n                        7J??5Y5??JYY5PPPGJ??7777777GGPPPPPPPGGGGGJ????????????????????????5.        \\r\\n                        ?J??P?5J7????????JJJJJJJJJY5555555555YYJJ5J???????????????????????Y~        \\r\\n                        7Y??5?JP??????????????????????????????????5J??????????????????????J?        \\r\\n                        ^57????Y5??????????????????????????????????YY??????????????????????J        \\r\\n                         JJ????755??????????????????????????????????Y5????????????????????J?        \\r\\n                         .YJ????PY5J??????????????????????????????????5Y??????????????????5^        \\r\\n                          .?Y???P??JJ??????????????????????????????????JYY???????????????Y7         \\r\\n                            ^?JJP????????????????????????????????????????JYYYJ?????????JJ!          \\r\\n                              .:YJ?????????JJ???????????????????????????????JJYYYYJJJJ?~.           \\r\\n                                JJ??????????YYJ??????????????????????????????????5:.:.              \\r\\n                                ?Y????????????JYYYJJ?????????????????????????????5.                 \\r\\n                                :~~!77777777777!!!75~~~~!!!!!777777??????????777!7.                 \\r\\n                                     ........      .            ..............                      \\r\\n                                                                                                    \\r\\n                                                                                                   \\r\\n\\r\\n~~~^^~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^~7J555J!~^^^!?Y5P55J7~^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~^^^\\r\\n~~~^~~~~~~~^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^~~~~^^^^^^7G#B5J??5B#55BBPJ7!!7YG#G7^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~^~~~^~~~~~~~~~^^^\\r\\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^7G####BG5?~5&Y.       ~GB~         ^&&?^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~^^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^J@5:...^!YB#@?                       ~@&~^^^~~~~~^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^#&         ..                         G@57PBBGGGGP5?~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^B&.                                   .B@&Y^.....:!P#5~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^?@?                                     :.          ~@#!^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~77B@!                                                 P@P^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^!G&BP5GP                                                 J@B^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^?@Y                                                     .&@J^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5G:                                                    G@#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^?&G.                                                  .&&7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^P@P.                                  .~YGBBBBBGY7:    Y@5^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^G@:    .:..                       :~7P&@&#GP555PG#&#~  5@B7!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7JPB#&@G.~5#&####BP?^:75J~.   .?BB5JY5B&#BBPYJ??YPBBGGPP#@!~@###&&##BP5J?!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!7YPB###GP5YP@&#PY55YYY5PB#&#BB#####&&#BBBBG5YJJJJJJ5##5!^^!JG#&&&@5?JJY5PGB##&&##G5J7!~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~!7YG###BG5YJJJJJJJ&&JY#&#BBBG5YJJJJJJYY55YJJJJJJJJJYYYYJG@P.       7&@@#JJJJJJJJJJJJY5PGB#&&#BPY7~~^~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~75B###BPYJJJJJJJJJJJJ&@##?.  .:7P##PJJJYYYJJJJJJYJYYYYYYYY##~J.     .7?.^&&5JJJJJYJJJJJJJJJJJJY5GB#&&#PJ!~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~?P#&BPYJJJJJJYJJJJJJJJ??B@B.        .7#&PJJYYYYJJJJJJYYYYYJY&G. :7     ~^   .#&YJJJJJJJJJJJJJ?J??J????J5G#&&#P?!~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~!?P#&#PJ?JJJJJJJJJJJJJ??JYB&@&^            ?&BYJYYYJJJJYJYYYYYY#G    .           ^@#P5YJJJJYYY5PGB##BBG5YJJJ??JYG#&&BJ~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~!JB##G5J??JY5PP5YJYYYY55PB#&@@@@?~!!~.         ~@&YJYJYYYJYYJYYJJ#&7^^.  .!YP7      .&@@@&&&&&@@@@@@@@@@@@@@&&&##GGP5PB@@Y^~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~?G##GY??JYP#&&@@@@@&&&@@@@@@@@@@@@^    .~: .:^^~~!Y&&5JYYYYYJYJYJJ##:....  ?@@@#.     :@7.7@@##&&&&@@@@@@@@@@@@@@@@@@@&BP57~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~B&G5YY5GB&@@@@@@@@@@@@@@@@@@@@&&@@@P   ..GB.......  :&@PYJYYYYYJJJ##:      ~:^!~..7:   #G   &&7~~~!!7?J5PGGBBBBBGGP5Y?7!~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~YGB#&@@@@@@@@@@@@@@@@@@@@@&BPJP@G^P@J:J:  .   .      .P@GYYYYJJYJY&G      :B.     .^^?#B.   G@Y~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\\r\\n~~~~~~~~~~~~~~~!7?Y5PGGBB###BBBBGP5Y?7!~^P@7   5@&~      .?:      ^@@&&&GJJJJJ5&G.    7Y       :5#?     5@5~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Y@5     7&&Y.     :P:  .7#@@B55YYYYYJJ?5&&GJ!^Y5.::^!Y#B!.      #@J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^B@^      .!#@#PJ!!!P#5B&&#&#YJJYYYYYJJJJY##B######&&@@B.        G@P~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^B@~         ?@&&&&&&&BG5YJYYYYYYYYYYJJJJJ#@YJJJJYJYB@5          5@#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^5@J          ?@@&&&&#5JYYYYYYYYYYYJJJJYYJY&#YJJJJY&@Y            Y@P~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~J@P           ~&@#BBGPYJYYYYYYYYYYYYYYYYJJY@#JJJJ#@Y              &@7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#&:            P@&GPPG55P5YYYYYYYYYYYYYJYG&@@&#YY@B               #&!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~B&.             .&@P?Y&&##BYYYYYYYYYYYYYYJYY5B@@&&B                &@?~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~J@!               ?@BJ#&YJYYJYYYYYYYYYYYJJJJGBB55G&B!               :B&Y~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^P@:                P@PP&&&&&5JYYYYYYYYYYJJY#&&@P??J#@B:               P@Y~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Y@?               ?&@#JJ555&@PJJYYYYYYYJY#@&YBGPGG55G&&^              ~@#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#@!             J@GYYJYJJ?J#@GJJJYYJJJ5&@&BG&@BJY&@&5@#              7@G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^G@P            .@&YJP#####GYG&BGP55PG#@@@@&G?#5..G@@G&G              G@J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~J@Y             .&@B#@&~^~!P&BPGBGGGGB&@@&7:..!@BB@@@&G.              ?@G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^B@.              .~7?G@G....#@&PPPB&&Y?!B@?...:@@JG5:.                 5@B7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^P@7                   !@7:.!@@?...B@&:..^@#!~!5@5                       :P@G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^5@B                    ~PP5P@&:..!@@@~...&@P5J?^                          J@P~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^P&?                          7BPJJB!7@G!!J@P                               .@&~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^5@^                             ...   :?Y5Y7.                                &@!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!@5                                                                           B@G!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7@?                                                                            7@@J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~5@J                                                                             ~@@J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!#&?.                                                                              ^@&7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7&G.                                                                                 Y@G~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7@G                                                                                   .@@P~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^G@!                                                                                    :&@5~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^P@?                                                                                     5@B~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~J@G                                                                                     7@&!~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!@&.                                                                                    ?@&!~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&@~                                                                                    5@#~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\r\\n */\\r\\n\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\r\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport {SafeMath} from \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport {Ownable2Step} from \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Router02 {\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    /* solhint-disable-next-line func-name-mixedcase */\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ninterface ILiqPair {\\r\\n    function getReserves() external view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast);\\r\\n}\\r\\n\\r\\ncontract TomaccoERC is Context, IERC20, Ownable2Step {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    address DEAD = 0x000000000000000000000000000000000000dEaD;\\r\\n    address ZERO = 0x0000000000000000000000000000000000000000;\\r\\n\\r\\n    mapping(address => uint256) private _balances;\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 public _buyTax = 1;\\r\\n    uint256 public _sellTax = 25;\\r\\n\\r\\n    address payable public _devWallet; //dev\\r\\n\\r\\n    uint8 private constant _DECIMALS = 9;\\r\\n    uint256 private constant _SUPPLY = 1000000 * 10 ** _DECIMALS;\\r\\n    string private constant _NAME = \\\"TOMACCO\\\";\\r\\n    string private constant _SYMBOL = \\\"$TOMACCO\\\";\\r\\n    uint256 public _maxTxAmount = _SUPPLY.div(100); //1%\\r\\n    uint256 public _maxWalletSize = _SUPPLY.div(50); //2%\\r\\n    uint256 public _taxSwapThresholdDenom = 200;//_SUPPLY.div(200); //0.5%\\r\\n    uint256 public _maxTaxSwapDenom = 100;//_SUPPLY.div(100); //1%\\r\\n    bool public limitsEnabled = true;\\r\\n    mapping(address => bool) public _exemptLimitsTaxes;\\r\\n\\r\\n    IUniswapV2Router02 private uniswapV2Router;    \\r\\n    address private uniswapV2RouterAdr = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\\r\\n    address private uniswapV2Pair;\\r\\n    bool private tradingOpen;\\r\\n    bool private inSwap = false;\\r\\n    bool private swapEnabled = false;\\r\\n\\r\\n    modifier lockTheSwap() {\\r\\n        inSwap = true;\\r\\n        _;\\r\\n        inSwap = false;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        _devWallet = payable(_msgSender());\\r\\n        _balances[_msgSender()] = _SUPPLY;\\r\\n        _exemptLimitsTaxes[_msgSender()] = true;\\r\\n        _exemptLimitsTaxes[_devWallet] = true;\\r\\n        _exemptLimitsTaxes[address(this)] = true;\\r\\n        _approve(address(this), uniswapV2RouterAdr, type(uint256).max);\\r\\n\\r\\n        uniswapV2Router = IUniswapV2Router02(uniswapV2RouterAdr);\\r\\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\\r\\n\\r\\n        emit Transfer(address(0), _devWallet, _SUPPLY);\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _NAME;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _SYMBOL;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _DECIMALS;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public pure override returns (uint256) {\\r\\n        return _SUPPLY;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\")\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n\\r\\n        uint256 taxAmount = 0;\\r\\n        if(!_exemptLimitsTaxes[to] && !_exemptLimitsTaxes[from]) {\\r\\n            // Tx limit, wallet limit //\\r\\n            if (limitsEnabled) {\\r\\n                if (to != uniswapV2Pair) {\\r\\n                    uint256 heldTokens = balanceOf(to);\\r\\n                    require(\\r\\n                        (heldTokens + amount) <= _maxWalletSize,\\r\\n                        \\\"Total Holding is currently limited, you can not buy that much.\\\"\\r\\n                    );\\r\\n                    require(amount <= _maxTxAmount, \\\"TX Limit Exceeded\\\");\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // Buy tax //\\r\\n            if(from == uniswapV2Pair) {\\r\\n                taxAmount = amount.mul(_buyTax).div(100);\\r\\n            }\\r\\n\\r\\n            // Sell tax //\\r\\n            if (to == uniswapV2Pair) {\\r\\n                taxAmount = amount.mul(_sellTax).div(100);\\r\\n            }\\r\\n\\r\\n            // Swap and send fee //\\r\\n            (uint256 taxSwapThreshold, uint256 maxTaxSwap) = getSwapSettings();\\r\\n            uint256 contractTokenBalance = balanceOf(address(this));\\r\\n            if (!inSwap && to == uniswapV2Pair && swapEnabled && contractTokenBalance > taxSwapThreshold) {\\r\\n                swapTokensForEth(min(contractTokenBalance, maxTaxSwap));\\r\\n                uint256 contractETHBalance = address(this).balance;\\r\\n                if (contractETHBalance > 0) {\\r\\n                    sendETHToFee(address(this).balance);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            // Apply tax //\\r\\n            if (taxAmount > 0) {\\r\\n                _balances[address(this)] = _balances[address(this)].add(taxAmount);\\r\\n                emit Transfer(from, address(this), taxAmount);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _balances[from] = _balances[from].sub(amount);\\r\\n        _balances[to] = _balances[to].add(amount.sub(taxAmount));\\r\\n        emit Transfer(from, to, amount.sub(taxAmount));\\r\\n    }\\r\\n\\r\\n    function getSwapSettings() public view returns(uint256, uint256) {\\r\\n        uint256 liqPairBalance = balanceOf(uniswapV2Pair);\\r\\n        return(liqPairBalance.div(_taxSwapThresholdDenom), liqPairBalance.div(_maxTaxSwapDenom));\\r\\n    }\\r\\n\\r\\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\\r\\n        return (a > b) ? b : a;\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\\r\\n        if(tokenAmount == 0) return;\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();     \\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0,\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /** \\r\\n     *@notice Send eth to tax wallets \\r\\n     */ \\r\\n    function sendETHToFee(uint256 amount) private returns(bool) {\\r\\n        return _devWallet.send(amount);\\r\\n    }\\r\\n\\r\\n    // #region ADMIN\\r\\n\\r\\n    function openTrading() external payable onlyOwner {\\r\\n        require(!tradingOpen, \\\"trading is already open\\\");\\r\\n        uniswapV2Router.addLiquidityETH{value: msg.value}(\\r\\n            address(this),\\r\\n            balanceOf(address(this)),\\r\\n            0,\\r\\n            0,\\r\\n            owner(),\\r\\n            block.timestamp\\r\\n        );\\r\\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\\r\\n        swapEnabled = true;\\r\\n        tradingOpen = true;\\r\\n    }\\r\\n\\r\\n    function AddWalletExemptLimitsTaxes(address _wallet, bool exempt) external onlyOwner {\\r\\n        _exemptLimitsTaxes[_wallet] = exempt;\\r\\n    }\\r\\n\\r\\n    function enableLimits(bool enable) external onlyOwner {\\r\\n        limitsEnabled = enable;\\r\\n    }\\r\\n\\r\\n    function unstuckETH() external onlyOwner {\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function unstuckToken(address _token) external onlyOwner {  \\r\\n        require(_token != address(this), \\\"You can unstuck the own token\\\");   \\r\\n        IERC20(_token).transfer(msg.sender, IERC20(_token).balanceOf(address(this)));\\r\\n    }\\r\\n\\r\\n    function manualSwap() external onlyOwner {\\r\\n        uint256 tokenBalance = balanceOf(address(this));\\r\\n        if (tokenBalance > 0) {\\r\\n            swapTokensForEth(tokenBalance);\\r\\n        }\\r\\n        uint256 ethBalance = address(this).balance;\\r\\n        if (ethBalance > 0) {\\r\\n            sendETHToFee(ethBalance);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function reduceFee(uint256 newbuyFee, uint256 newSellFee) external onlyOwner {\\r\\n        require(newbuyFee <= _buyTax, \\\"Buy tax only can be reduced\\\");\\r\\n        require(newSellFee <= _sellTax, \\\"Sell tax only can be reduced\\\");\\r\\n        require(newbuyFee >= 1, \\\"Buy tax can not be lower than 1%\\\");\\r\\n        require(newSellFee >= 1, \\\"Sell tax can not be lower than 1%\\\");\\r\\n        _buyTax = newbuyFee;\\r\\n        _sellTax = newSellFee;        \\r\\n    }\\r\\n\\r\\n    // #endregion\\r\\n\\r\\n    /* solhint-disable-next-line no-empty-blocks */\\r\\n    receive() external payable {}\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"istanbul\",\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 999\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exempt\",\"type\":\"bool\"}],\"name\":\"AddWalletExemptLimitsTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_devWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_exemptLimitsTaxes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTaxSwapDenom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThresholdDenom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"enableLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSwapSettings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limitsEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newbuyFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellFee\",\"type\":\"uint256\"}],\"name\":\"reduceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstuckETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unstuckToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TomaccoERC", "CompilerVersion": "v0.8.12+commit.f00d7308", "OptimizationUsed": "1", "Runs": "999", "ConstructorArguments": "", "EVMVersion": "istanbul", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}