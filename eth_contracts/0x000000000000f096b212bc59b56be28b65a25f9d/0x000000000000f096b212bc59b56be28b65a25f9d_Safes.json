{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/Safes.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.25;\\n\\n/// @notice Tokenized ownership of Safes.\\ncontract Safes {\\n    error Unauthorized();\\n\\n    error CallReverted();\\n\\n    event TransferSingle(\\n        address indexed owner, address indexed from, address indexed to, uint256 id, uint256 amount\\n    );\\n\\n    event URI(string metadata, uint256 indexed id);\\n\\n    string public constant name = \\\"Safes\\\";\\n\\n    string public constant symbol = unicode\\\"\ud83d\udddd\ufe0f\\\";\\n\\n    mapping(uint256 id => string metadata) internal _uri;\\n\\n    function uri(uint256 id) public view returns (string memory) {\\n        return _uri[id]; // Metadata.\\n    }\\n\\n    function setURI(uint256 id, string calldata metadata) public {\\n        if (balanceOf(msg.sender, id) != 0) emit URI(_uri[id] = metadata, id);\\n        else revert Unauthorized();\\n    }\\n\\n    function balanceOf(address owner, uint256 id) public view returns (uint256) {\\n        return ISafes(address(uint160(id))).isOwner(owner) ? 1 : 0;\\n    }\\n\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) public payable {\\n        if (balanceOf(msg.sender, id) != 0) {\\n            if (\\n                ISafes(to).onERC1155Received{value: msg.value}(msg.sender, from, id, amount, data)\\n                    != ISafes.onERC1155Received.selector\\n            ) revert CallReverted();\\n            emit TransferSingle(msg.sender, from, to, id, amount);\\n        } else {\\n            revert Unauthorized();\\n        }\\n    }\\n\\n    function register(address account) public {\\n        address[] memory owners = ISafes(account).getOwners();\\n        uint256 id = uint256(uint160(account));\\n        for (uint256 i; i != owners.length; ++i) {\\n            emit TransferSingle(msg.sender, address(0), owners[i], id, 1);\\n        }\\n    }\\n}\\n\\ninterface ISafes {\\n    function isOwner(address) external view returns (bool);\\n    function getOwners() external view returns (address[] memory);\\n    function onERC1155Received(address, address, uint256, uint256, bytes calldata)\\n        external\\n        payable\\n        returns (bytes4);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"@solady/=lib/solady/\",\r\n      \"@forge/=lib/forge-std/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"solady/=lib/solady/src/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 9999999\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"cancun\",\r\n    \"viaIR\": false,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"name\":\"CallReverted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "Safes", "CompilerVersion": "v0.8.25+commit.b61c2a91", "OptimizationUsed": "1", "Runs": "9999999", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU AGPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://a2fa09c2ffd61bb3a16035d243e9dd05d78f0f25f65a55260c32835ab217af28"}