{"SourceCode": "// SPDX-License-Identifier: MIT\r\n\r\n                                                                           \r\n/*\r\n  ArtPurchase 1.0.1  img.art\r\n\r\n  88                                                                         \r\n  \"\"                                                                  ,d     \r\n                                                                      88     \r\n  88  88,dPYba,,adPYba,    ,adPPYb,d8       ,adPPYYba,  8b,dPPYba,  MM88MMM  \r\n  88  88P'   \"88\"    \"8a  a8\"    `Y88       \"\"     `Y8  88P'   \"Y8    88     \r\n  88  88      88      88  8b       88       ,adPPPPP88  88            88     \r\n  88  88      88      88  \"8a,   ,d88  888  88,    ,88  88            88,    \r\n  88  88      88      88   `\"YbbdP\"Y8  888  `\"8bbdP\"Y8  88            \"Y888  \r\n                           aa,    ,88                                        \r\n                            \"Y8bbdP\"                                         \r\n  \r\n*/\r\n\r\npragma solidity ^0.8.0;\r\n\r\ncontract ArtPurchase_1_0_1 {\r\n\r\n    address payable public owner;\r\n    uint256 public minimumPayment;\r\n    uint256 public totalPurchaseLimit;\r\n    uint256 public currentPurchases;\r\n    uint256 public userPurchaseLimit;\r\n\r\n    mapping(address => string[]) public userIDs; // Change to string array\r\n    mapping(address => uint256) public hasPurchased;\r\n\r\n    event Purchase(address indexed purchaser, uint256 value, uint256 purchaseCount, string userID);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only the contract owner can call this function.\");\r\n        _;\r\n    }\r\n\r\n    constructor(uint256 _minimumPaymentInWei, uint256 _totalPurchaseLimit, uint256 _userPurchaseLimit) {\r\n        owner = payable(msg.sender);\r\n        minimumPayment = _minimumPaymentInWei; // Wei\r\n        totalPurchaseLimit = _totalPurchaseLimit;\r\n        userPurchaseLimit = _userPurchaseLimit;\r\n    }\r\n\r\n    struct PurchaseStatus {\r\n        uint256 minimumPayment;\r\n        uint256 totalPurchaseLimit;\r\n        uint256 currentPurchases;\r\n        uint256 userPurchaseLimit;\r\n        uint256 hasPurchased;\r\n    }\r\n\r\n    function getPurchaseStatus(address user) public view returns (PurchaseStatus memory) {\r\n        return PurchaseStatus(minimumPayment, totalPurchaseLimit, currentPurchases, userPurchaseLimit, hasPurchased[user]);\r\n    }\r\n\r\n\r\n    function purchase(string memory userID, uint256 _purchaseCount) external payable {\r\n        require(_purchaseCount > 0, \"Purchase count must be greater than 0.\");\r\n        require(msg.value >= minimumPayment * _purchaseCount, \"Total payment is below the minimum amount.\");\r\n        require(hasPurchased[msg.sender] + _purchaseCount <= userPurchaseLimit, \"User purchase limit exceeded.\");\r\n        require(currentPurchases + _purchaseCount <= totalPurchaseLimit, \"Total purchase limit reached.\");\r\n\r\n        hasPurchased[msg.sender] += _purchaseCount;\r\n        userIDs[msg.sender].push(userID); // Add userID to the array for the sender's address\r\n        currentPurchases += _purchaseCount;\r\n\r\n        emit Purchase(msg.sender, msg.value, _purchaseCount, userID);\r\n    }\r\n\r\n    function updateMinimumPayment(uint256 _newMinimumPaymentInWei) external onlyOwner {\r\n        minimumPayment = _newMinimumPaymentInWei; // Wei\r\n    }\r\n\r\n    function setTotalPurchaseLimit(uint256 _totalPurchaseLimit) external onlyOwner {\r\n        totalPurchaseLimit = _totalPurchaseLimit;\r\n    }\r\n\r\n    function setUserPurchaseLimit(uint256 _userPurchaseLimit) external onlyOwner {\r\n        userPurchaseLimit = _userPurchaseLimit;\r\n    }\r\n\r\n    function withdrawFunds(address payable _to) external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        _to.transfer(balance);\r\n    }\r\n\r\n    function withdrawTokens(address _tokenAddress, address _to, uint256 _amount) external onlyOwner {\r\n        IERC20 token = IERC20(_tokenAddress);\r\n        token.transfer(_to, _amount);\r\n    }\r\n\r\n    function getUserID(address _user, uint256 _index) public view returns (string memory) {\r\n        return userIDs[_user][_index];\r\n    }\r\n\r\n    function getUserIDCount(address _user) public view returns (uint256) {\r\n        return userIDs[_user].length;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumPaymentInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalPurchaseLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userPurchaseLimit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchaseCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"userID\",\"type\":\"string\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPurchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPurchaseStatus\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minimumPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchaseLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentPurchases\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userPurchaseLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hasPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ArtPurchase_1_0_1.PurchaseStatus\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getUserID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserIDCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasPurchased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"userID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_purchaseCount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalPurchaseLimit\",\"type\":\"uint256\"}],\"name\":\"setTotalPurchaseLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userPurchaseLimit\",\"type\":\"uint256\"}],\"name\":\"setUserPurchaseLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPurchaseLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMinimumPaymentInWei\",\"type\":\"uint256\"}],\"name\":\"updateMinimumPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIDs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userPurchaseLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "ArtPurchase_1_0_1", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000429d069189e000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://85c0255a7de381786a1d427a17c50a12f3b412e9b9ed9f7532613b8dc0776956"}