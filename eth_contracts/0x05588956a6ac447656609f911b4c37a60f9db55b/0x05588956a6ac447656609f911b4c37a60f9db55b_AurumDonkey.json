{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/AUDonkey.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n    // AUDonkey $AUD AurumDonkey\\n    // Telegram: https://t.me/AUDonkey\\n    // Website:  https://audonkey.com\\n    // Twitter:  https://x.com/AUDonkey\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28a0\u2844\u2814\u2812\u2800\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2801\u2800\u2810\u2802\u2820\u2804\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28c4\u2836\u2808\u2808\u28c9\u2820\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fc\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u2800\u2800\u2800\u2801\u2810\u2820\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2844\u2802\u2801\u2881\u2804\u2812\u2808\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28fe\u28ff\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2824\u28c2\u28fd\u28f6\u28e4\u2880\u2800\u2800\u2800\u2800\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2870\u2808\u2888\u2820\u2800\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28bc\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2824\u288a\u28e5\u28fe\u28ff\u287f\u28bb\u280b\u2800\u2808\u2810\u2862\u2880\u2800\u2809\u2800\u2880\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2824\u281c\u2808\u2800\u2814\u2821\u2864\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u288a\u28fe\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2860\u2892\u28e5\u28fe\u28ff\u28ff\u28ff\u280b\u2870\u2803\u2800\u2800\u2800\u2812\u2800\u2800\u2809\u2802\u2884\u2800\u2808\u2822\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2870\u280b\u2800\u2800\u28c0\u2868\u2812\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2889\u2832\u28e4\u2840\u2800\u284c\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2800\u2880\u2834\u288b\u28f4\u28ff\u28ff\u28ff\u28ff\u285f\u2895\u2874\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2891\u28e6\u2840\u2800\u2810\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2868\u280a\u28e0\u2834\u28ff\u28ff\u28f7\u28d6\u2824\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28d2\u28ca\u286c\u28ff\u28f7\u28e7\u28ff\u28ff\u28ff\u28ff\u285f\u284e\u2800\u2880\u2814\u2801\u28a0\u28ff\u28ff\u28ff\u28ff\u281f\u2809\u2860\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28d0\u2808\u2880\u28fd\u28ff\u28ff\u28e6\u2840\u2808\u2811\u2884\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2864\u280a\u2840\u28fc\u28ff\u28c6\u2800\u2800\u2809\u2819\u280f\u283f\u2800\u2800\u2800\u2800\u2800\u2800\u2834\u28db\u28db\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28b1\u28cf\u2860\u2803\u280a\u28f0\u28ff\u283f\u281f\u280b\u28c0\u2834\u280b\u2800\u2800\u2800\u2880\u2840\u2820\u2824\u2814\u2832\u2894\u28ec\u2840\u2828\u2892\u28fa\u28ff\u28ff\u28ff\u287f\u28a6\u2840\u2800\u2881\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2890\u2805\u2800\u280a\u2800\u2800\u2819\u283b\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281a\u2869\u28bd\u283f\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u280b\u2800\u2802\u280a\u28c9\u28e0\u2824\u2816\u280b\u2800\u2800\u2800\u2800\u2880\u28fc\u28cb\u2820\u2840\u2800\u2800\u28d0\u2812\u28ba\u28ed\u28f7\u28ff\u28ff\u28ff\u281f\u28bd\u281f\u28ff\u2839\u2866\u2840\u2808\u28a2\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u287e\u2803\u2850\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2800\u2821\u2832\u287b\u281b\u281b\u287b\u280b\u2801\u28c0\u2800\u2800\u2800\u2800\u2831\u28c4\u28f0\u28ff\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2801\u2822\u282a\u2890\u28ca\u28e1\u28a6\u28e4\u28ec\u28ff\u28ff\u28fe\u28f6\u28e6\u28ec\u28c6\u2810\u2801\u2804\u2800\u2890\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2852\u2880\u280c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u2815\u2802\u2804\u2800\u28f0\u28fb\u28ed\u28dd\u28b3\u2840\u2800\u2800\u2800\u2819\u28bb\u28e7\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28d4\u28fe\u28fd\u28ff\u28ff\u287e\u28ab\u28ff\u28ff\u28f7\u280e\u2809\u2809\u2800\u2819\u28e7\u2800\u2808\u2820\u2800\u2832\u2804\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2820\u2805\u28a0\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u28c0\u2860\u2824\u2816\u289a\u2869\u2804\u280a\u2800\u2800\u2800\u2800\u2800\u2809\u2809\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2839\u28ff\u2864\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28fe\u283f\u285f\u283f\u2801\u280b\u2808\u2800\u28b8\u28ff\u283f\u281b\u2800\u2800\u2800\u2800\u2800\u2818\u28a7\u2800\u2800\u2867\u2800\u2819\u2846\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u28a0\u284d\u2880\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2804\u2820\u2814\u2809\u2800\u2800\u2800\u2800\u280a\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\u2818\u28ff\u2862\u2800\u2800\u2800\u2800\u2800\u2800\u2834\u2803\u2801\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u2838\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28a7\u2800\u2800\u2810\u2840\u2810\u2804\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u28a0\u2857\u2880\u2802\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2801\u28f4\u28e2\u2800\u2800\u2800\u2800\u2800\u2880\u28c0\u2810\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2840\u2800\u2800\u2818\u28ef\u2842\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u2802\u2800\u2822\u2840\u2808\u28b7\u2840\u2800\u2830\u2800\u28b9\u28c4\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u287e\u2800\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2887\u2819\u283f\u2804\u2800\u28e0\u28f6\u28ff\u28ff\u28ff\u28c7\u2808\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2847\u2800\u2800\u2800\u2818\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2814\u2848\u28b8\u2800\u2800\u2808\u2822\u2808\u28e7\u2800\u2800\u28a1\u2800\u283a\u2840\u2800\u2800\\n    //\u2800\u2800\u28e8\u2803\u2878\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u2812\u2884\u2800\u2800\u2800\u2858\u2800\u2800\u2800\u2850\u2809\u2809\u2809\u2809\u2809\u2809\u2800\u2800\u2800\u2880\u2870\u28a4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u2847\u2800\u2800\u2800\u2800\u2818\u28ff\u2842\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2802\u2880\u2801\u2838\u2800\u2800\u2800\u2800\u2810\u28bc\u2844\u2808\u2800\u2803\u2800\u28a5\u2800\u2800\\n    //\u2800\u28a0\u284b\u2880\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u280c\u2800\u2800\u2802\u2821\u2800\u2800\u2843\u2800\u2800\u281c\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u2874\u288b\u2834\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2838\u28ff\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2850\u28a1\u2800\u2858\u2800\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2833\u2840\u2800\u2818\u2840\u2838\u2840\u2800\\n    //\u2800\u28d8\u2803\u2818\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u2801\u2800\u2800\u2808\u28aa\u2800\u2801\u28c4\u28a7\u2824\u288c\u2840\u2800\u2800\u2800\u2800\u28c0\u28e0\u2874\u281e\u2889\u28d4\u28c1\u28c0\u2840\u2800\u2800\u2880\u28c0\u28e4\u28f4\u28fe\u28ff\u28ff\u287f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u28b9\u2893\u28d7\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2804\u2850\u2803\u2800\u2800\u2862\u2801\u2800\u2800\u2800\u2840\u2800\u2800\u2800\u2818\u28a6\u2840\u2803\u2800\u2801\u2800\\n    //\u2800\u28fe\u2800\u2847\u2800\u2800\u2800\u2800\u2820\u281c\u2800\u2800\u2800\u2800\u2800\u2800\u2867\u2800\u2808\u2882\u2811\u2822\u282c\u282d\u282d\u287f\u283f\u281b\u2801\u2880\u2874\u281f\u283b\u283f\u283f\u283f\u2813\u2812\u281b\u28bb\u28bf\u28ff\u28ff\u287f\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28b3\u28b3\u2813\u28ff\u2811\u28a6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2814\u2801\u280a\u2800\u2807\u2800\u285c\u2884\u2811\u28a2\u2860\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u288e\u2800\u28b8\u2800\\n    //\u2800\u280b\u2800\u2847\u2800\u2800\u2860\u287a\u280b\u2800\u2800\u2810\u2800\u2800\u2860\u2822\u28e1\u2800\u2808\u2800\u2811\u2800\u2800\u2800\u2800\u2811\u2812\u2812\u2812\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u284e\u288e\u288f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2860\u289e\u2850\u28f1\u283b\u28f8\u2889\u28b8\u28b8\u287c\u2844\u2800\u2800\u2800\u2860\u2802\u2814\u2801\u2800\u28a0\u2800\u285c\u2800\u2808\u28a0\u2819\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2800\u2800\u2800\\n    //\u2818\u2846\u2800\u28e7\u2880\u2868\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2818\u2840\u2808\u2823\u2800\u2805\u2800\u2800\u2822\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28f4\u28b9\u285c\u28a6\u2859\u2826\u28c4\u28c0\u28c0\u28c0\u2824\u2816\u28e9\u289e\u2871\u28aa\u28ab\u28a3\u2807\u287c\u28fd\u28b8\u2807\u2847\u2800\u2880\u2808\u2800\u2800\u2800\u2800\u2800\u2848\u28b0\u2801\u2800\u28a0\u2803\u2855\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2800\u2800\u2844\\n    //\u2800\u2847\u2800\u2814\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2888\u2821\u2840\u2810\u2844\u2800\u2883\u2800\u2800\u2808\u2886\u2810\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28a0\u28de\u285f\u28f4\u28bb\u2878\u2852\u282c\u28d1\u28d2\u2804\u2834\u28d6\u28db\u2875\u28ba\u283d\u28eb\u28f3\u28df\u281f\u28f0\u28a7\u28cf\u28f8\u28d1\u2847\u2820\u2801\u2800\u2800\u2800\u2800\u2800\u2860\u2880\u2807\u2800\u28a0\u2803\u2820\u2850\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2801\u2800\u2800\u2800\u2847\\n    //\u2800\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2888\u2800\u2808\u2804\u28b0\u2800\u2800\u2806\u2800\u2800\u2880\u2800\u2808\u2800\u2814\u2808\u2801\u2822\u2840\u2800\u2800\u283b\u287b\u28ab\u2859\u2859\u28a6\u287b\u28ae\u28d3\u2826\u282c\u282d\u282d\u282d\u2895\u286e\u2881\u28dc\u28f5\u28fb\u280f\u28fc\u286b\u287e\u28a0\u2827\u283c\u2800\u2801\u2800\u2800\u2800\u2800\u2840\u2890\u2815\u28b9\u2800\u2880\u2806\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2807\\n    //\u2800\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2800\u2800\u2806\u2808\u280c\u2800\u28c7\u2800\u2800\u2886\u2800\u2800\u2820\u2840\u2800\u2801\u2840\u2800\u2800\u2808\u2802\u2800\u2887\u2871\u28e1\u2831\u287b\u2894\u28ad\u2876\u282c\u28d9\u28d3\u28d2\u28d2\u28cb\u2825\u289e\u28ed\u28ae\u28fc\u288f\u283e\u28d1\u283e\u28a6\u285e\u2892\u28fe\u2841\u2800\u2800\u2880\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2848\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u2824\u2888\u2800\u2800\u2800\u2800\u2800\u28b9\u2844\u2800\u2800\u2811\u2804\u2800\u2800\u2800\u2820\u2800\u2820\u2840\u2800\u2800\u28b1\u285e\u2806\u28bb\u2837\u28cd\u282e\u28d1\u28be\u28d3\u2836\u282c\u282d\u2824\u2836\u289a\u28eb\u28b7\u289b\u2870\u28cb\u2871\u281b\u28e4\u280e\u2889\u28ff\u2801\u28a7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2820\u2800\u2880\u2800\\n    //\u2800\u28b9\u2800\u28b0\u2820\u28c0\u2840\u2880\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2887\u2800\u2800\u2800\u2811\u2840\u2800\u2800\u2800\u2800\u2800\u2808\u2822\u2820\u285f\u2830\u2809\u285e\u28a2\u287c\u2833\u28cc\u28f1\u28e6\u28cd\u28db\u28d3\u28db\u281b\u2889\u28e0\u2874\u28af\u283c\u284f\u2899\u2856\u2813\u28d4\u281f\u2801\u28f8\u2838\u2846\u2800\u2884\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2840\u28a4\u2800\u28c0\u2880\u2840\u2824\u2824\u2884\u2880\u2844\u2800\u2858\u2800\\n    //\u2800\u2818\u2847\u2830\u2817\u2811\u2824\u2824\u2824\u2884\u28c0\u2820\u2834\u2816\u2800\u2840\u2820\u2880\u2808\u2840\u2800\u2880\u2814\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u2801\u2803\u2800\u2818\u280f\u2891\u28f6\u285b\u281b\u28c5\u28c8\u284f\u2800\u2810\u289e\u2889\u28e7\u2810\u28b3\u28e4\u283e\u28cf\u28c8\u287f\u2801\u2800\u2800\u28b8\u2800\u28b3\u2800\u2800\u2811\u2820\u2840\u2800\u2800\u2880\u2840\u28c0\u2820\u28ca\u2860\u2800\u28e6\u2804\u28b8\u2812\u2812\u2835\u28a4\u28e4\u28c1\u2800\u28b0\u2847\u2800\\n    //\u2800\u2800\u28bf\u2800\u2891\u28d2\u28f0\u2804\u2813\u2800\u283a\u28c4\u28c0\u28e6\u2800\u28b3\u2840\u2878\u2880\u2800\u2800\u2841\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28a8\u2800\u2800\u2800\u2808\u282b\u28c0\u283d\u283e\u28c1\u28f9\u2801\u2824\u2824\u280a\u28eb\u28e0\u28f7\u281f\u281b\u28e4\u281c\u2801\u2800\u2800\u2800\u2800\u28b8\u2800\u2858\u2846\u2800\u2800\u2800\u2808\u2890\u2800\u2800\u287a\u28a4\u2850\u2809\u2823\u2824\u28ac\u28e0\u2884\u28d1\u28e6\u2814\u280a\u2800\u284b\u2800\u287e\u2800\u2800\\n    //\u2800\u2800\u2818\u28c7\u2818\u2851\u2840\u2811\u2820\u2844\u28a9\u2840\u2800\u28e0\u2800\u2810\u2803\u2824\u2804\u2840\u2810\u28c8\u2820\u2826\u2820\u2804\u2850\u2802\u2810\u2852\u2800\u28bc\u2838\u2800\u2800\u2800\u2800\u2800\u2808\u2822\u2856\u2809\u2803\u2803\u2824\u28b4\u281f\u281b\u28a3\u28c0\u2817\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u285c\u2800\u2802\u28d7\u2802\u2800\u2884\u2880\u2842\u2800\u2804\u2880\u2850\u2801\u2822\u28a4\u28c7\u2840\u2800\u2819\u2824\u2804\u28f3\u2864\u2816\u2800\u28b0\u2807\u2800\u2800\\n    //\u2800\u2800\u2800\u28bb\u2844\u2811\u28a4\u28c0\u2864\u288f\u28c0\u28c9\u281b\u282d\u2835\u28c0\u2800\u2810\u2820\u286e\u2801\u2820\u2881\u2804\u2800\u2800\u2802\u2800\u2840\u2814\u2801\u281a\u28c7\u2823\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2813\u28b7\u2826\u2824\u28a4\u2877\u2812\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2858\u2801\u2800\u2800\u28ff\u2800\u2832\u280c\u28c0\u2820\u2822\u2880\u280f\u2839\u2849\u2804\u28f0\u2825\u283c\u2852\u280a\u2800\u2802\u2899\u28e4\u2800\u28a0\u285f\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u28bb\u2844\u2822\u2800\u2800\u2878\u28a7\u28c4\u28c0\u28c4\u2800\u2808\u28df\u28c5\u2800\u2808\u2886\u2800\u2800\u28b4\u2806\u2800\u2892\u2818\u2820\u2802\u2820\u2882\u28fd\u2833\u28d5\u2884\u2800\u2800\u2800\u2800\u2844\u2800\u2808\u2837\u2836\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u281c\u2800\u2800\u2800\u2840\u28ff\u28c8\u2856\u280a\u2892\u2840\u2825\u285e\u2800\u2852\u2828\u28bf\u2840\u2800\u2880\u2871\u28e4\u28e0\u28dc\u28cb\u2800\u2880\u281e\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u28b3\u2840\u2888\u281b\u28a6\u2800\u2808\u2801\u28c8\u284d\u2809\u2868\u28bb\u28c4\u28c0\u285c\u2802\u2800\u2800\u2840\u2880\u28fc\u2842\u2869\u281f\u2801\u2818\u2847\u2840\u2808\u28b9\u28a2\u2884\u28c0\u28f0\u28ff\u28f6\u28e4\u28e6\u28e4\u28e4\u28e4\u28f4\u28f6\u28ff\u28e4\u28c0\u2820\u2800\u2880\u2874\u280b\u2800\u2800\u2800\u28a0\u28bb\u28cf\u2800\u2808\u287b\u2889\u2873\u2812\u28ed\u28e7\u28c0\u28c0\u286c\u280a\u285d\u28a3\u2800\u2800\u28b8\u2820\u280b\u2880\u287e\u2803\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u283b\u2844\u2811\u287f\u28b7\u2860\u281c\u2801\u2800\u2828\u2854\u28d9\u288c\u282c\u28b7\u28e4\u2864\u28b4\u28c0\u2880\u2824\u280f\u28a0\u2817\u2812\u28a1\u2847\u2847\u2800\u2808\u28b8\u2800\u2880\u28b9\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2818\u280b\u2800\u2800\u2800\u2800\u2880\u28a6\u2817\u288b\u2808\u2819\u2824\u28c0\u2877\u2804\u28bd\u2857\u2800\u2808\u2801\u2810\u2819\u2828\u287f\u2864\u289a\u2803\u2880\u285e\u2801\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2829\u28c6\u2810\u2844\u2818\u28f6\u28c4\u2800\u28b4\u28ff\u28ed\u2850\u2800\u2800\u2888\u2864\u2802\u281f\u2801\u2880\u2800\u2888\u28c4\u2800\u28a8\u28c7\u2881\u2800\u2800\u28b8\u2800\u28b8\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2844\u2800\u2800\u2800\u2800\u2878\u280b\u2810\u28b8\u28e6\u28e4\u2834\u283e\u2804\u2840\u2800\u280a\u2833\u28f4\u2842\u2800\u28a0\u28e4\u284f\u2820\u2801\u28a0\u2814\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2811\u28e7\u2848\u2818\u284b\u2800\u2800\u2880\u284f\u2800\u2800\u2891\u28ee\u28ff\u2800\u2800\u2800\u2846\u28f1\u28db\u28fa\u28f7\u285f\u2801\u28bb\u2848\u2844\u2844\u2840\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u2800\u2800\u2800\u2847\u2800\u2800\u28e0\u285e\u2801\u2800\u28a0\u28f8\u2803\u2801\u2800\u2800\u2815\u28e4\u2840\u2800\u2800\u28e0\u288c\u2830\u28ff\u28cf\u2815\u2800\u28f4\u280b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u282a\u2884\u2808\u283a\u28b6\u2809\u2800\u2800\u2880\u28bf\u28ff\u28ff\u28d5\u2876\u2876\u281b\u283b\u284f\u2809\u2809\u2833\u28c4\u2860\u28e7\u2870\u2846\u2847\u2800\u28ff\u28ff\u281b\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28bf\u2800\u2800\u2800\u2880\u28e7\u28f6\u287f\u280b\u2800\u2800\u2800\u28f8\u28c7\u2800\u2800\u28e0\u2816\u281b\u281b\u281a\u2873\u28bc\u2837\u28e4\u28e0\u281c\u2801\u2840\u2854\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b3\u2884\u2808\u2832\u28c4\u2840\u28f8\u2811\u2801\u2800\u2808\u28ff\u2804\u28c0\u28e4\u28f7\u28c4\u28c0\u28f8\u2802\u2800\u2808\u28bf\u2801\u2807\u2800\u28ff\u28ff\u28e4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u284f\u28a0\u2800\u2800\u28fc\u287f\u2809\u2800\u2800\u2800\u2800\u287e\u281b\u2822\u28ad\u28c9\u28af\u28c4\u2800\u2800\u2820\u2874\u2801\u2800\u2860\u2803\u2880\u287c\u280a\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28b7\u28c4\u2808\u2889\u2800\u2800\u2804\u28c0\u28f4\u2801\u2800\u2808\u284f\u2809\u2811\u2844\u2808\u2877\u2802\u2810\u28ff\u28b8\u2800\u2800\u28ff\u28ff\u28f7\u28ff\u28e6\u28c4\u2840\u2800\u2800\u2800\u2800\u28b9\u285e\u2800\u2800\u28bb\u28ff\u28ff\u28f7\u28f6\u28f6\u28df\u28c1\u2860\u2802\u2800\u2808\u28a2\u2809\u28b9\u28c6\u2840\u2880\u2815\u2800\u28c0\u2874\u280f\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2831\u2844\u2848\u2822\u2800\u280a\u2819\u2822\u28e4\u28fc\u28c1\u28e0\u28f4\u28c7\u2872\u28c7\u2800\u2800\u284f\u2838\u2800\u2800\u28ff\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28f7\u28e6\u28e4\u28e4\u28fc\u2847\u28c4\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u280f\u2833\u28a4\u28e4\u2814\u2858\u28a2\u284f\u2840\u2810\u2801\u2880\u2834\u281b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2886\u2844\u2801\u2820\u2800\u2809\u28b9\u287f\u285f\u2801\u2800\u2809\u288e\u2811\u28f2\u2847\u2847\u2800\u28b0\u284f\u2800\u288c\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u28bf\u2847\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28e6\u28d4\u285a\u2889\u2820\u281a\u2801\u2880\u2860\u2816\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2808\u2806\u2844\u2840\u2818\u2813\u2837\u28c6\u28c0\u2860\u283f\u283e\u28f0\u2880\u2847\u2800\u28ff\u2813\u287e\u2803\u28bc\u2840\u2800\u2839\u28bf\u28c7\u2800\u2800\u2800\u28e7\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u28ff\u284f\u2881\u2800\u280c\u280b\u2800\u2880\u2860\u2814\u2809\u2800\u2800\u2800\u2800\u2800 $AUD \u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u2821\u2806\u2844\u2880\u2809\u2800\u2800\u2800\u28b8\u28b8\u2800\u2800\u28b8\u2869\u28c6\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u2877\u2832\u282e\u28bd\u28bb\u28ff\u28ff\u28ff\u2845\u2820\u2804\u2818\u2801 AUDonkey: Turn shit into gold! \u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2810\u2800\u2824\u28a0\u28c0\u2840\u28c8\u2809\u2809\u2801\u2800\u2809\u2812\u2802\u2800\u281a\u281b\u281b\u281b\u2802\u2800\u2818\u2809\u2809\u2801\u28c0\u28c0\u28c0\u2864\u2834\u2812\u280a\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n    //\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u2808\u2819\u2812\u2800\u2800\u2800\u2820\u2824\u2824\u2824\u2824\u2800\u2824\u2800\u2800\u2800\u2813\u2812\u2801\u2809\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract AurumDonkey is ERC20 {\\n    constructor() ERC20(\\\"AurumDonkey\\\", \\\"$AUD\\\") {\\n        uint256 totalSupply = 69_000_000_000 * 10 ** 18; // Total supply of 69 billion tokens\\n        _mint(msg.sender, totalSupply);\\n    }\\n\\n    // The standard ERC-20 functions\\n    function transfer(address to, uint256 amount) public override returns (bool) {\\n        require(to != address(0), \\\"Transfer to the zero address\\\");\\n        require(balanceOf(msg.sender) >= amount, \\\"Insufficient balance\\\");\\n        _transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\n        _approve(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    // AUD sets the total supply and assigns it to the specified holder.\\n    // 3.69% of the total supply will be transfered into a Wallet for CEX Listing.\\n    // 3.69% of the total supply will be transfered into a Wallet for Marketing.\\n    // 50 Billion of the total supply will be added to Uniswap V3 Pool.\\n    // The remaining supply will be send to the Death Wallet.\\n    // Nobody is the owner of the contract and the contract cant be changed.\\n    // \u201cAUDonkey: Turning shit into gold.\\\"\\n}\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/utils/Context.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\r\n    },\r\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "AurumDonkey", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}