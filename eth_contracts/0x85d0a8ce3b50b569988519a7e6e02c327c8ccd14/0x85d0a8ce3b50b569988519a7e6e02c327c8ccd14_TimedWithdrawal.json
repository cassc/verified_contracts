{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract TimedWithdrawal {\r\n    address public owner;\r\n    uint256 public lastWithdrawTime;\r\n    uint256 public contractCreationTime;\r\n    uint256 public constant withdrawalRate = 16;\r\n    uint256 public constant basisPoint = 1000000;\r\n    uint256 public constant fullWithdrawalPeriod = 5 * 365 days;\r\n\r\n    constructor() {\r\n        owner = 0x7FF427a41f763C5beb330b3747Cd01Ce5aE76f48;\r\n        lastWithdrawTime = block.timestamp;\r\n        contractCreationTime = block.timestamp;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Only owner can perform this action\");\r\n        _;\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function changeOwner(address newOwner) public onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n\r\n    function getWithdrawAmount() public view returns (uint256) {\r\n        uint256 daysSinceLastWithdraw = (block.timestamp - lastWithdrawTime) / 1 days;\r\n        uint256 amount = address(this).balance * withdrawalRate * daysSinceLastWithdraw / basisPoint;\r\n        return amount;\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        uint256 amount = getWithdrawAmount();\r\n        require(amount > 0, \"No funds to withdraw\");\r\n\r\n        lastWithdrawTime = block.timestamp;\r\n        payable(owner).transfer(amount);\r\n    }\r\n\r\n    function fullWithdraw() public onlyOwner {\r\n        require(block.timestamp >= contractCreationTime + fullWithdrawalPeriod, \"Full withdrawal period not reached\");\r\n\r\n        uint256 amount = address(this).balance;\r\n        payable(owner).transfer(amount);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"basisPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractCreationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullWithdrawalPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "TimedWithdrawal", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ce7a7d1c5b8a6052087a2980342a3d6f9d534da250280cbe9b8f69783b564a16"}