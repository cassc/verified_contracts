{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/dev/CoreChainlinkFeed.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL 1.1\\npragma solidity =0.8.22;\\n\\nimport \\\"chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\n\\n\\n// Uses Chainlink price oracles to retrieve prices for USDC/USD\\n// Prices are returned with Chainlink's defualt 8 decimals.\\ncontract CoreChainlinkFeed is IPriceFeed\\n    {\\n\\t// https://docs.chain.link/data-feeds/price-feeds/addresses\\n\\tAggregatorV3Interface immutable public CHAINLINK_USDC_USD;\\n\\n\\n\\tconstructor( address _CHAINLINK_USDC_USD )\\n\\t\\t{\\n\\t\\tCHAINLINK_USDC_USD = AggregatorV3Interface(_CHAINLINK_USDC_USD);\\n\\t\\t}\\n\\n\\n\\t// Returns zero on any type of failure.\\n\\tfunction latestChainlinkPrice(AggregatorV3Interface chainlinkFeed) public view returns (uint256)\\n\\t\\t{\\n\\t\\tint256 price = 0;\\n\\n\\t\\ttry chainlinkFeed.latestRoundData()\\n\\t\\treturns (\\n\\t\\t\\tuint80, // _roundID\\n\\t\\t\\tint256 _price,\\n\\t\\t\\tuint256, // _startedAt\\n\\t\\t\\tuint256,// _answerTimestamp,\\n\\t\\t\\tuint80 // _answeredInRound\\n\\t\\t)\\n\\t\\t\\t{\\n\\t\\t\\t// Make sure that the Chainlink price update has occurred within its 60 minute heartbeat\\n\\t\\t\\t// https://docs.chain.link/data-feeds#check-the-timestamp-of-the-latest-answer\\n\\t\\t\\t//uint256 answerDelay = block.timestamp - _answerTimestamp;\\n\\n\\t\\t\\t// Not really needed just for displaying UI price\\n//\\t\\t\\tif ( answerDelay <= MAX_ANSWER_DELAY )\\n\\t\\t\\t\\tprice = _price;\\n\\t//\\t\\telse\\n\\t\\t//\\t\\tprice = 0;\\n\\t\\t\\t}\\n\\t\\tcatch (bytes memory) // Catching any failure\\n\\t\\t\\t{\\n\\t\\t\\t// In case of failure, price will remain 0\\n\\t\\t\\t}\\n\\n\\t\\tif ( price < 0 )\\n\\t\\t\\treturn 0;\\n\\n\\t\\treturn uint256(price);\\n\\t\\t}\\n\\n\\n\\tfunction getPriceUSDC() external view returns (uint256)\\n\\t\\t{\\n\\t\\treturn latestChainlinkPrice( CHAINLINK_USDC_USD );\\n\\t\\t}\\n    }\"\r\n    },\r\n    \"lib/chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\"\r\n    },\r\n    \"src/dev/IPriceFeed.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL 1.1\\npragma solidity =0.8.22;\\n\\n\\ninterface IPriceFeed\\n\\t{\\n\\tfunction getPriceUSDC() external view returns (uint256);\\n\\t}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"chainlink/=lib/chainlink/\",\r\n      \"ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"openzeppelin/=lib/openzeppelin-contracts/contracts/\",\r\n      \"v3-core/=lib/v3-core/contracts/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 10000\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_CHAINLINK_USDC_USD\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CHAINLINK_USDC_USD\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"chainlinkFeed\",\"type\":\"address\"}],\"name\":\"latestChainlinkPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "CoreChainlinkFeed", "CompilerVersion": "v0.8.22+commit.4fc1097e", "OptimizationUsed": "1", "Runs": "10000", "ConstructorArguments": "0000000000000000000000008fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}