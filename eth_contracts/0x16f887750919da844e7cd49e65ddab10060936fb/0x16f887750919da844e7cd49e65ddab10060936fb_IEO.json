{"SourceCode": "// SPDX-License-Identifier: Unlicensed\r\npragma solidity ^0.8.7;\r\n\r\n\r\nlibrary SafeMath {\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ninterface ITetherUSDTERC20 {\r\n\r\n    function balanceOf(address who) external  returns (uint);\r\n\r\n    function transfer(address to, uint value) external ;\r\n\r\n    function allowance(address owner, address spender) external  returns (uint);\r\n\r\n    function transferFrom(address from, address to, uint value) external;\r\n\r\n    function approve(address spender, uint value) external;\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n}\r\n\r\n\r\ninterface IERC20 {\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n\r\n\r\n\r\ninterface IPancakeSwapRouter {\r\n\r\n    function WETH() external pure returns (address);\r\n\r\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\r\n    external\r\n    view\r\n    returns (uint256[] memory amounts);\r\n\r\n}\r\n\r\ncontract IEO {\r\n\r\n    //\u8def\u7531\r\n    IPancakeSwapRouter public router;\r\n\r\n    using SafeMath for uint;\r\n\r\n    address  public admin;\r\n\r\n    ITetherUSDTERC20 public USDT;\r\n\r\n    IERC20 public ROBOT;\r\n\r\n    //\u8d28\u62bc\r\n    event Pledge(uint ,address, address, uint);\r\n    //\u9886\u53d6\r\n    event CLaim(address,uint256);\r\n\r\n    bool initialized;\r\n\r\n    //\u5168\u7f51\u9650\u989d(USDT)\r\n    uint256 public  PLAT_TOTAL;\r\n    //\u4e2a\u4eba\u9650\u989d(ETH)\r\n    uint256 public SINGLE_MAX;\r\n    //\u5355\u4ef7 18wei\r\n    uint256 public ROBOT_PRICE;\r\n\r\n    //\u8d28\u62bc\u6570\u91cf\u6362\u7b97ROBOT\r\n    mapping (address =>uint256) public   totalRobot;\r\n\r\n    //\u5df2\u8d28\u62bc\u6298\u5408USDT\u603b\u548c\r\n    mapping (address=>uint256) public totalUSDT;\r\n\r\n    //\u5168\u7f51\u5df2\u8d28\u62bc\u603b\u548c\uff08USDT\uff09\r\n    uint256 public finish;\r\n\r\n    //\u7ed3\u675f\u65f6\u95f4\r\n    uint256 public endTime;\r\n\r\n\r\n\r\n    modifier onlyAdmin {\r\n        require(msg.sender == admin, \"You Are not admin\");\r\n        _;\r\n    }\r\n\r\n\r\n    constructor(){\r\n\r\n        admin = msg.sender;\r\n\r\n        USDT = ITetherUSDTERC20(0xdAC17F958D2ee523a2206206994597C13D831ec7);\r\n\r\n        router=IPancakeSwapRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n\r\n        //\u5168\u7f51\u9650\u989d\uff08USDT\uff09\r\n        PLAT_TOTAL=3500000 * 10 **6;\r\n        //\u4e2a\u4eba\u9650\u989d\uff08ETH\uff09\r\n        SINGLE_MAX=1*10**18;\r\n        //18wei\r\n        ROBOT_PRICE=500000000;\r\n\r\n        endTime=1697299200;\r\n\r\n    }\r\n\r\n    //\u8bbe\u7f6e\u7ba1\u7406\u5458\r\n    function setAdmin(address _admin) external onlyAdmin {\r\n        admin = _admin;\r\n    }\r\n\r\n    //\u53c2\u6570\u8bbe\u7f6e\r\n    function setParams(uint256 _PLAT_TOTAL,uint256 _SINGLE_MAX,uint256 _ROBOT_PRICE) external onlyAdmin\r\n    {\r\n        PLAT_TOTAL=_PLAT_TOTAL;\r\n        SINGLE_MAX=_SINGLE_MAX;\r\n        ROBOT_PRICE=_ROBOT_PRICE;\r\n    }\r\n\r\n    //\u7ed3\u675f\u65f6\u95f4\r\n    function setEndTime(uint256 _end) external onlyAdmin\r\n    {\r\n        endTime=_end;\r\n    }\r\n\r\n\r\n    function setRouter(address _router) external onlyAdmin {\r\n        router = IPancakeSwapRouter(_router);\r\n    }\r\n\r\n    function setUSDT(address _usdt) external onlyAdmin {\r\n        USDT = ITetherUSDTERC20(_usdt);\r\n    }\r\n\r\n    function setRobot(address _token) external onlyAdmin {\r\n        ROBOT = IERC20(_token);\r\n    }\r\n\r\n\r\n    //\u8f6cUSDT\r\n    function batchAdminWithdraw(address[] memory _userList, uint[] memory _amount) external onlyAdmin {\r\n        for (uint i = 0; i < _userList.length; i++) {\r\n            USDT.transfer(address(_userList[i]), uint(_amount[i]));\r\n        }\r\n    }\r\n\r\n    //\u8f6cUSDT\r\n    function withdrawUSDT(address _addr, uint _amount) external onlyAdmin {\r\n        require(_addr != address(0), \"Can not withdraw to Blackhole\");\r\n        USDT.transfer(_addr, _amount);\r\n    }\r\n\r\n    //\u8f6cROBOT\r\n    function withdrawROBOT(address _addr, uint _amount) external onlyAdmin {\r\n        require(_addr != address(0), \"Can not withdraw to Blackhole\");\r\n        ROBOT.transfer(_addr, _amount);\r\n    }\r\n\r\n\r\n\r\n    //\u8f6cETH\r\n    function withdrawETH(address payable  _addr, uint _amount) external onlyAdmin {\r\n        require(_addr != address(0), \"Can not withdraw to Blackhole\");\r\n        _addr.transfer(_amount);\r\n    }\r\n\r\n\r\n    //\u9886\u53d6\r\n    function claim() external {\r\n        //\u672a\u5230\u65f6\u95f4\r\n        require(block.timestamp>endTime,\"not yet\");\r\n\r\n        emit CLaim(msg.sender,totalRobot[msg.sender]);\r\n\r\n        ROBOT.transfer(msg.sender, totalRobot[msg.sender]);\r\n\r\n        totalRobot[msg.sender]=0;\r\n    }\r\n\r\n\r\n\r\n    //\u8d28\u62bc\r\n    function pledge(uint _amount) payable  external {\r\n        uint256 uPrice=_amount;\r\n\r\n        //\u8d28\u62bcETH\r\n        if(msg.value>0)\r\n        {\r\n            uPrice= getUSDTPrice(msg.value, address(router.WETH()), address(USDT));\r\n        }\r\n        else {\r\n            USDT.transferFrom(msg.sender, address(this), _amount);\r\n        }\r\n\r\n        finish=finish+uPrice;\r\n\r\n        //\u622a\u6b62\u65f6\u95f4\r\n        require(block.timestamp<=endTime,\"end time\");\r\n\r\n        //\u603b\u989d\u9650\u5236\r\n        require(finish<=PLAT_TOTAL,\"over plat amount\");\r\n\r\n        //\u5355\u4eba\u9650\u989d\u8bbe\u7f6e\r\n        totalUSDT[msg.sender]=totalUSDT[msg.sender]+uPrice;\r\n        uint256 maxU=getUSDTPrice(SINGLE_MAX, address(router.WETH()), address(USDT));\r\n\r\n        require(totalUSDT[msg.sender]<=maxU,\"limit total amount\");\r\n\r\n        //\u6362\u7b97robot\u6570\u91cf\r\n        totalRobot[msg.sender]=totalRobot[msg.sender]+((uPrice*10**12/ROBOT_PRICE))*10**18;\r\n\r\n        emit Pledge(msg.value>0?0:1,msg.sender, address(this), uPrice);\r\n\r\n    }\r\n\r\n\r\n    //\u83b7\u53d6\u4ef7\u503ctoken\u53ef\u5151\u6362USDT\r\n    function getUSDTPrice(uint256 _amount, address tokenIn, address tokenOut) public view returns (uint256 amountOut){\r\n        address[] memory path=new address[](2);\r\n        path[0]=tokenIn;\r\n        path[1]=tokenOut;\r\n        uint256[] memory amounts = router.getAmountsOut(_amount, path);\r\n        return amounts[amounts.length-1];\r\n    }\r\n\r\n\r\n\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"CLaim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Pledge\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PLAT_TOTAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROBOT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROBOT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SINGLE_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract ITetherUSDTERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_userList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchAdminWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getUSDTPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pledge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract IPancakeSwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"setEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_PLAT_TOTAL\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_SINGLE_MAX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ROBOT_PRICE\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setRobot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"name\":\"setUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalRobot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawROBOT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "IEO", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://576f5195d673beddaac8d64850253f8630d2229f9be7e278a2a6f53f58621b96"}