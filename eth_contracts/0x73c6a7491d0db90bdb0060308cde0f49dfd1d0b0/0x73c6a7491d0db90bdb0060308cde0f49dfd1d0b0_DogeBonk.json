{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/dogebonk.sol\": {\r\n      \"content\": \"//SPDX-License-Identifier: MIT\\r\\n\\r\\n/**\\r\\n *                                          .yyyy-\\r\\n *                                    `yd/``+M`\\r\\n *                                  `om+-.`/ds\\r\\n *                                `+m+``./dy.\\r\\n *                               +mo```-ydmh/\\r\\n *                             /ds.``.:+++:+dh\\r\\n *                           .hh-``./+++//:/+dd/-\\r\\n *                         `sm/``-/+oooo++++//oyhm:             .`                                         ...`                          :o`\\r\\n *                       `+my/:-/sshdhys+///+++//oNo           +MMMmy/`                                   /MmdmNd+                       hM-\\r\\n *                      :No::/+++oyhyso+//+++/////oM-          oM+`-omNs`                                 +M+  `yM+            `-        hM.   ..\\r\\n *                    .yNd+oNyyyhhysooossso+///://+ym`         oM/    /NN:  `omMNms`  -ymMNMh/  -yNmmNy.  +M/  .dM:   +dNNNy.  hMhmNNh-  dM. :hMy\\r\\n *                  `sNdhmMMdhhhdhhyyyysssso+/::/+/:hh         sM/     .NN``mM/  +Ms :Md:  -Md :My..-+Nm  sMNNNMMy`  yMs` -Nd  hMs-`:MN  dM+dMs.\\r\\n *                 oNmdmm/dmhyyhhhhhhhhhhyo+//////::/N:        yM-     `NM`:My   `Md hM-   /My hMdhyso+-  sM:  `:mN-`Mm    dM  mM`   NM  mMNyMh.\\r\\n *               /mmdmd:  smsssyhhyyyyyyso+///////://ds        hM-   `:dM/ .Nm.  oMs yMs../NM+ +Mo`   :s. yM:  `-dM: dM:  :Nd  mM`   NM  NM  -mN/\\r\\n *             :mmdmd/    +msyyyyyyyysso++/////////:/M-        yMNmmNNds.   -yNNNdo  `ohddhdM:  -ymmmmh+  yMmdNNmy:  `smNNms`  hm    mm  mm   `yN-\\r\\n *           :dNdmd:      omsyyyoossssso++/:::/:://+my                                    `mN`             ```\\r\\n *         :dNmNd:   `:+shmdsyhs/:+oooyoo+/:--::::oN+                                shysyNm:\\r\\n *      .+dNmNm:    smdhsosyyyy+//+ossyso+/:--::smy.                                 `-:::.\\r\\n *     +Ndhmm+      ydddNMMdyso/osyyyyso+//-:ohd+`\\r\\n *     -mNdN/       sdddyyssyhddmmmddyso+/hdy/`\\r\\n *       `.`       `NysssyydNs`````.+Mso/dh\\r\\n *                  .dmdhdmo`       smso/dy\\r\\n *                    `..`         .Ndso/N/\\r\\n *                                 mhssohN\\r\\n *                                 /yhhy/`\\r\\n *\\r\\n *    DogeBonk token features:\\r\\n *    Bonk!\\r\\n *\\r\\n */\\r\\n\\r\\npragma solidity >=0.8.12 <0.9.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\r\\n}\\r\\n\\r\\ncontract DogeBonk is IERC20 {\\r\\n    string public constant name = \\\"DogeBonk\\\";\\r\\n    string public constant symbol = \\\"DOBO\\\";\\r\\n    uint256 public constant decimals = 18;\\r\\n    uint256 public constant totalSupply = 420690000 * 10 ** decimals;\\r\\n\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    constructor() {\\r\\n        balanceOf[msg.sender] = totalSupply;\\r\\n    }\\r\\n\\r\\n    function approve(\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) public override returns (bool) {\\r\\n        allowance[msg.sender][spender] = amount;\\r\\n        emit Approval(msg.sender, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transfer(\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external override returns (bool) {\\r\\n        return _transfer(msg.sender, to, amount);\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external override returns (bool) {\\r\\n        if (allowance[from][msg.sender] < type(uint).max) {\\r\\n            allowance[from][msg.sender] -= amount;\\r\\n        }\\r\\n        return _transfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) private returns (bool) {\\r\\n        balanceOf[from] -= amount;\\r\\n        balanceOf[to] += amount;\\r\\n        emit Transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "DogeBonk", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}