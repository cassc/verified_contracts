{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/VaultClaimer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.23;\\n\\nimport { IVaultClaimer } from \\\"./interfaces/IVaultClaimer.sol\\\";\\n\\n/// @title VaultClaimer\\n/// @author Zeropoint Labs\\ncontract VaultClaimer is IVaultClaimer {\\n    //////////////////////////////////////////////////////////////\\n    //                      EXTERNAL FUNCTIONS                  //\\n    //////////////////////////////////////////////////////////////\\n\\n    /// @inheritdoc IVaultClaimer\\n    function claimProtocolOwnership(string calldata protocolId_) external override {\\n        emit Claimed(msg.sender, protocolId_);\\n    }\\n}\\n\"\r\n    },\r\n    \"src/interfaces/IVaultClaimer.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.23;\\n\\n/// @title IVaultClaimer\\n/// @author Zeropoint Labs\\ninterface IVaultClaimer {\\n    //////////////////////////////////////////////////////////////\\n    //                      EVENTS                              //\\n    //////////////////////////////////////////////////////////////\\n    event Claimed(address indexed claimer, string protocolId);\\n\\n    //////////////////////////////////////////////////////////////\\n    //                      EXTERNAL FUNCTIONS                  //\\n    //////////////////////////////////////////////////////////////\\n\\n    /// @notice helps users claim ownership of a protocol id\\n    /// @param protocolId_ unique identifier of the protocol to claim ownership\\n    /// @dev actual validation of ownership happens offchain\\n    /// calling this function, triggers ownership verification\\n    function claimProtocolOwnership(string calldata protocolId_) external;\\n}\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"solmate/=lib/ERC1155A/lib/solmate/src/\",\r\n      \"@openzeppelin/contracts/=lib/ERC1155A/lib/openzeppelin-contracts/contracts/\",\r\n      \"ERC1155A/=lib/ERC1155A/src/\",\r\n      \"ds-test/=lib/ds-test/src/\",\r\n      \"erc4626-tests/=lib/ERC1155A/lib/openzeppelin-contracts/lib/erc4626-tests/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"openzeppelin-contracts/=lib/ERC1155A/lib/openzeppelin-contracts/\",\r\n      \"pigeon/=lib/pigeon/src/\",\r\n      \"solady/=lib/pigeon/lib/solady/\",\r\n      \"super-vaults/=lib/super-vaults/src/\",\r\n      \"v2-core/=lib/super-vaults/lib/v2-core/contracts/\",\r\n      \"v2-periphery/=lib/super-vaults/lib/v2-periphery/contracts/\",\r\n      \"v3-core/=lib/super-vaults/lib/v3-core/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"protocolId\",\"type\":\"string\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"protocolId_\",\"type\":\"string\"}],\"name\":\"claimProtocolOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "VaultClaimer", "CompilerVersion": "v0.8.23+commit.f704f362", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}