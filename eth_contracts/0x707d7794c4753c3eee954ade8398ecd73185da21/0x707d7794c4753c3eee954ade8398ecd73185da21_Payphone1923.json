{"SourceCode": "// PAYPHONE dialer extension for SOUND MACHINES session\r\n// by 0xDEAFBEEF\r\n// March 2024\r\n\r\n//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.4;\r\n\r\nabstract contract extPhoneCard  {\r\n  function balanceOf(address owner) external virtual view returns (uint256);\r\n  function tokenOfOwnerByIndex(address owner, uint256 i) external virtual view returns (uint256);\r\n}\r\n\r\ncontract Payphone1923  {\r\n  extPhoneCard public phonecard;\r\n\r\n  uint256 public last_dial_ts;\r\n  uint256 public dial_index;\r\n  uint256 public callsRemaining;\r\n\r\n  uint256 public phonecard_range_lo;\r\n  uint256 public phonecard_range_hi;    \r\n  address _owner;\r\n  address _owner2;\r\n\r\n  uint256 public callRateLimit;\r\n  uint256 public callRateLimit_phonecard;\r\n  bool public inTheOffice;\r\n  uint256 _dialCost1;\r\n  uint256 _dialCost2;\r\n  uint256 _dialCostMode;\r\n  uint256 _dialCostBegin;  \r\n  uint256 _dialCostLen;\r\n\r\n  uint256 public maxMsgLength;\r\n  event DialEvent(address from, string m,uint256 dial_id, uint256 phoneCardID);\r\n\r\n  struct dialStruct {\r\n    address from;\r\n    uint256 ts;\r\n    string m; //optionally store the message in contract storage\r\n  }\r\n   \r\n  mapping (uint256 => dialStruct) public dials;\r\n  mapping (address => uint256) public last_dial_ts_phonecard;\r\n\r\n  modifier onlyOwner() {\r\n    require(_owner == msg.sender || _owner2 == msg.sender, \"only owner\");\r\n    _;\r\n  }\r\n\r\n  constructor() {\r\n    address _phonecard_contract_address = 0x1D9787369B1DCf709f92Da1d8743c2A4b6028a83;\r\n    phonecard = extPhoneCard(_phonecard_contract_address);\r\n    _owner = msg.sender;\r\n    _owner2 = 0x95FDE6CF0d305078B7EEaC44182A931c169DD947;\r\n\r\n    dial_index = 1000000; \r\n    inTheOffice = false;\r\n    callsRemaining = 0;\r\n    callRateLimit = 10; //communal rate limit for public\r\n    callRateLimit_phonecard = 60*1; // individual rate limits for phone card holders\r\n    _dialCost1 = 25000000000; //calls cost 25 Gwei, unless you have a prepaid phonecard\r\n    maxMsgLength=2000;\r\n\r\n    phonecard_range_lo = 339348595130070749814751437599411258966098496;\r\n    phonecard_range_hi = 339348595130070749814751437599411258966098525;\r\n  }\r\n\r\n  function hasPhoneCard(address a) public view returns (bool) {\r\n    return (phoneCardID(a) > 0);\r\n  }\r\n  function phoneCardID(address a) public view returns (uint256) {\r\n    if (address(phonecard)==0x0000000000000000000000000000000000000000) return 0;\r\n    uint256 n = phonecard.balanceOf(a);\r\n    if (n==0) return 0;\r\n    for (uint256 i=0;i<n;i++) {\r\n      uint256 tid = phonecard.tokenOfOwnerByIndex(a,i);\r\n      if (tid >= phonecard_range_lo && tid <= phonecard_range_hi) {\r\n        return tid % 1000;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function dial(string calldata m) payable public {\r\n    require(inTheOffice==true,\"Please call back during business hours.\");\r\n    require(callsRemaining > 0,\"Order book is full for now. Call back later.\");\r\n    require(bytes(m).length < maxMsgLength, \"Message too long\");\r\n        \r\n    if (hasPhoneCard(msg.sender)) {\r\n      //no cost for prepaid phonecard holders.\r\n\r\n      //rate limit is on individual basis. only one call every 3 minutes.\r\n      require(block.timestamp - last_dial_ts_phonecard[msg.sender] > callRateLimit_phonecard,\"Phone card holders have priority, but are limited to 1 call per minute. Wait [callRateLimit_phoneCard] seconds before calling back.\");\r\n\r\n      last_dial_ts_phonecard[msg.sender] = block.timestamp;\r\n    } else {\r\n      // \r\n      require(msg.value>=dialCost(), \"Must send [dialCost] to dial\");\r\n      require(block.timestamp - last_dial_ts > callRateLimit,\"Busy signal. Wait [callRateLimit] seconds before calling back.\");\r\n\r\n      last_dial_ts = block.timestamp;\r\n    }\r\n        \r\n    dial_index++;\r\n    callsRemaining--;\r\n    emit DialEvent(msg.sender,m,dial_index-1,phoneCardID(msg.sender));    \r\n  }\r\n\r\n  //seconds remaining in rate limiting\r\n  function timeRemaining() public view returns (uint256) { \r\n    uint256 a = block.timestamp - last_dial_ts;\r\n    if (a > callRateLimit) {\r\n      return 0;\r\n    }  else {\r\n      return callRateLimit - a;\r\n    }\r\n  }\r\n\r\n  //seconds remaining in phonecard holder rate limiting (on per user basis)\r\n  function timeRemaining_phonecard(address a) public view returns (uint256) { \r\n    if (!hasPhoneCard(a)) return 999999; //if not phonecard holder, time remaining is infinite\r\n\r\n    uint256 t = block.timestamp - last_dial_ts_phonecard[a];\r\n    if (t > callRateLimit_phonecard) {\r\n      return 0;\r\n    }  else {\r\n      return callRateLimit_phonecard - t;\r\n    }\r\n  }\r\n\r\n  function setMaxMsgLength(uint256 a) public onlyOwner {\r\n    maxMsgLength=a;\r\n  }\r\n  \r\n  function setDialCost(uint256 mode, uint256 t, uint256 a, uint256 b) public onlyOwner {\r\n    _dialCost1 = a;\r\n    _dialCost2 = b;\r\n    _dialCostMode = mode;\r\n    _dialCostBegin = block.timestamp;\r\n    if (t <= 0) t = 1;\r\n    \r\n    _dialCostLen = t;\r\n  }\r\n\r\n  function dialCost() public view returns (uint256) {\r\n    //in mode 0, fixed dialCost equal to _dialCost1\r\n    if (_dialCostMode ==0) return _dialCost1;\r\n\r\n    //in mode 1, linearly descending cost from _dialCost1 to _dialCost2 over time _dialCostLen \r\n    uint256 am = ((block.timestamp - _dialCostBegin)*1000) / _dialCostLen;\r\n    if (am > 1000 ) am = 1000; //clamp to 1000;\r\n    if (am < 0) am = 0;\r\n    uint256 cost = _dialCost2*am + _dialCost1 * (1000-am);\r\n    cost /= 1000;\r\n    return cost;\r\n  }\r\n\r\n    // all calls get event logged as DialEvent, but for prompts that interpreted, also manually\r\n    // permanently store details, including the message, in contract storage\r\n\r\n    function storeDialMessage(uint256 dialId, address from, uint256 ts, string calldata m) public onlyOwner {\r\n        require(dialId < dial_index, \"Dial Index out of range.\");\r\n        dials[dialId].m = m;\r\n        dials[dialId].ts = ts;\r\n        dials[dialId].from = from;\r\n    }\r\n\r\n  //enable\r\n  function setInTheOffice(bool a) public onlyOwner {\r\n    inTheOffice = a;\r\n  }\r\n\r\n  //set the number of calls allowed during a shift\r\n  function setCallsRemaining(uint256 a) public onlyOwner {\r\n    callsRemaining = a;\r\n  }\r\n    \r\n  function withdraw() public onlyOwner {\r\n    payable(msg.sender).transfer(address(this).balance);\r\n  }\r\n\r\n  //set the allowable minimum number of seconds between calls\r\n  function setCallRateLimit(uint256 a) public onlyOwner {\r\n    callRateLimit = a;\r\n  }\r\n\r\n  //set the allowable minimum number of seconds between calls\r\n  function setCallRateLimit_phonecard(uint256 a) public onlyOwner {\r\n    callRateLimit_phonecard = a;\r\n  }\r\n  \r\n  function setPhoneCardContractAddress(address _phonecard_contract_address) public onlyOwner {\r\n    phonecard = extPhoneCard(_phonecard_contract_address);\r\n  }\r\n\r\n  //Set inclusive token ID range\r\n  function setPhoneCardTokenRange(uint256 lo, uint256 hi) public onlyOwner {\r\n    phonecard_range_lo = lo;\r\n    phonecard_range_hi = hi;\r\n  }\r\n  \r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"m\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dial_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"phoneCardID\",\"type\":\"uint256\"}],\"name\":\"DialEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"callRateLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callRateLimit_phonecard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callsRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"m\",\"type\":\"string\"}],\"name\":\"dial\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dialCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dial_index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dials\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"m\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"hasPhoneCard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inTheOffice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last_dial_ts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"last_dial_ts_phonecard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMsgLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"phoneCardID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phonecard\",\"outputs\":[{\"internalType\":\"contract extPhoneCard\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phonecard_range_hi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phonecard_range_lo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setCallRateLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setCallRateLimit_phonecard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setCallsRemaining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"setDialCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"a\",\"type\":\"bool\"}],\"name\":\"setInTheOffice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"}],\"name\":\"setMaxMsgLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_phonecard_contract_address\",\"type\":\"address\"}],\"name\":\"setPhoneCardContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hi\",\"type\":\"uint256\"}],\"name\":\"setPhoneCardTokenRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dialId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"m\",\"type\":\"string\"}],\"name\":\"storeDialMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"timeRemaining_phonecard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Payphone1923", "CompilerVersion": "v0.8.7+commit.e28d00a7", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6ab1caa12a17d8a3718772e1331afc7c8de6d3088d4ac92a617b88dacfa94f47"}