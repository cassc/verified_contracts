{"SourceCode": "// SPDX-License-Identifier: UNLICENSED\r\n/*\r\n    Telegram:   https://t.me/XIAOerc20\r\n    Website:    https://xiaoxiaoerc.xyz/\r\n    Twitter:    https://twitter.com/XIAOerc20\r\n*/\r\n// ................................:::^^~~!!77??JJYY555YY?!~^.:!~^^^^^^^^^^^~~~^^~^~~~~~~!!!!!!!!!!!!!!\r\n// ...............:^~~!~7!~7~:::::::^^~~!77?JJYY55PGGGGGP55J7~:~7!?J?!77?J?!?YJ77J??J7777!~!!!!!!!!!!!!\r\n// ............:^!J5PGPYJ7?5YJ~J?~~~!!777?JJJYY555PPPGGGP5Y55??J5YYPP5PPGGG5PGP55PP5PPPP5Y?!!!!!!!!!!!!\r\n// ..........:^7J5PGGY:....::^^!!~~!!7?????JYYYY55PPPPPPPYYJYJ7JJJ??!~!J5J!!77~~~~~~!!?5555Y7!!!!!!!!!!\r\n// .........:~?YPGGP5:.........:^:^^~!77??JJYYYY55PPP5P55YJYJJ??Y?!~^^^^^^^^^^^~^~~~^~~!YY5P5?!!!!!!!!!\r\n// ........:^7YPGPPP7...........:^:^~!!777JJJJYY555P55P555Y5YJ?7J5?!~^^^^^~~~~~~~~~~~~~~?55PPY7!!!!!!!!\r\n// .......::!J5GGPP5!...........::^~!!!!!7???JY5555PP5P55Y5Y5J???Y5?^^^^^^^^^^^^~~~~~~~~75PPP5?!~~!!!!!\r\n// .......:^!?PGPPPY!...........:.~77!!!7????JYPP555555555YYYYJ??Y5J^^^^^^^^^^^^^^~~~~~~?5PPPP?!~~!!!!!\r\n// .......:~!JPPPPPY7:...........:?7!!!7JYYYYY5PP555PPPPP55YYYY??J5Y~^^^^^^^^^^^^^^~~^~~YPPPPPJ!!~!~~!!\r\n// 5YJ7^:.:~!JPPPPPY?:...........!J!!~~7Y5PGGPP55PPGGGGGGP55YYYJ?JY?~^^^^^^^^^^^^^^^~~~75P5P55Y7~~~~~~!\r\n// GGBGYY7^~!JP5PPP5?^..........:~?!~^^!J5PPGPYJPPGGGP5555555YYJ?YY7~^^^^^^^^^^^^^^^^~~J5P5P55Y!~~~~!~!\r\n// YYP5PPJ~!!JP55PP5J^..........^!?!~!?5PBBBBGJ?PPGGGGGGGGP55YYJY5Y7~^^^^^^^^^^^^^^~~^!YPP555YY!~~~~~!~\r\n// JJYJPG?~!!J555PP5J~:......::^!YJ~~7JYPBBBGJ7JGPGGBB##BGPP5YYY555Y!~~^^^^^^^^^^^^~~~J5P55Y5YJ!~~~~~~~\r\n// JJJY5P?~~!J5Y5PPPJ~:.....:^~!77!~^!JY555Y!~!JGPPPGGGGPPP5YYYY55Y?!!~^^^^^^^^^^^^^^!5PP5YY55?~~~~~~~~\r\n// JJYYYPJ7!7JYY55PPJ!:....:^^^~^!!^^!?JJJJ7:^^7P555PPPPPP55YYYYP5?~!~~~~^^^^^^^^^^^~J5PP5YY55?~~~~~~~~\r\n// 555555Y7!!?YY55PPJ!:...:^^:^:^!!~~!77?JJ?~^^75YY5PPPPP555YJY5Y77!~~~~~^^^^^^^^^^^!YPPP5Y5P5J~~~~~~~~\r\n// 5PPPP55?!!7JYY5PPJ~.::.:^:^::^~7777???5P7!~!YYYY5PGGPPP55YYYY7!!!~~~~~^^^^^^^^^^~?YPGPYYPP5J~~~~~~~~\r\n// YYYYYYY7~!7YYYY5PJ~...:^^::::^^!?7?77Y5?!!7JPPPPPPGBGPP55YYYY7!!!~~~~~~^^^^^^^^^!?5PP5Y5PP5J~~~~~~~~\r\n// 55YYYYY7~~7YYYY5PY~:..:^:::::^^^7J7!?J?~~7J5PGGPPPPGGP555YYY?!~!~~~~~~~^^^^^^^~~!?5P555PPP5J!~~~~~~~\r\n// P555YYJ7~~7JYJJ55J~:..:~:::::^^::!J??55Y55PPGBBBGPPGPP55YYYY77~~~~~~~~~~~~~~~~~~!?5Y555PPPYJ7~~~~~~~\r\n// 55555YJ7^~7JJ7J5YJ~::.:^^::::^::.:~?J5P5J?PPPB##BBGGGP555PPGGP?~~~~~~~~~~~~~~~~~!?5JY55PPPYYJ!~~~~~~\r\n// PP555Y?~~!?J?7JYY?~:::::^::::::::..~?JYY??5GGBGGGGGGPPGGGGGGGPY!~~~~~~~~~~~~~~~~!?Y?Y55PP55YJ7!~!!!!\r\n// Y55555?^~!?J?!JYY?~::::::^:::::::..^7??JY5PGBGGGGGGGB#GY5PGGGG57~~~~~~~~~~~~~~~~!JY7YY55555YJ77!~~!!\r\n// 55P5P5!^~7?J?!YYY?~:::::::::::::...^7J??Y5PGGGGGBB###BPJPGGGPYYJ~~~~~~~~~~~~~~~~!JY7Y555555YJ7!7!~~!\r\n// PPPPP?^~!7?J77YYJ7~.::::::.:::::...^7YYJYPGGGGGB#####BGGGPYYY5P5?7!~~!!!~~!~~~~~!JJ7Y55YY5YYJ7~7!~~!\r\n// 55555!~!!7JJ77YYJ7~::.::::::::::::.:75GPGGGGP5PGGBG#BBBBB555GGBGYJ!^!~7!7?7!~~~~!JY?YY5YJ55YJ7~!!!!!\r\n// Y555J!!~!7J?77JYJ?7!~~:::::::::::..:YGGPPGGBY77?Y5B#GPGBBGBGGGGG55?!7~~7J?777!~~~JJ?JYYYJY5Y?7!!!!!!\r\n// YYYY?!!~!7J?7?JJJ?77??7!^:::::::::^JBGGY?55GY?7!!Y55YBBBBBBBGGGBGGBPJ!!??!77??!~!?J?JJYYJYYY?7!!!!!!\r\n// ?7??!!~~!?J???JJJ???????7^::::^^^~~5P5J!7!:~^!??JPGBBBBBBBBBBPY5BBBGP5Y7^~77???7!?J?JJ5YJ55Y?7!!!!!!\r\n// ?77?!!!!7?J???JJJ????J??J7::^^~~~~~5?~~^J~~7555PGGPPPPP??PGBG5PGPY7777??77!~77??7?JJYJYYY555?!!!!7!!\r\n// 7??7!!!!7?J??JJ?????JJJJJJ!^^^~~!~!5Y5GY55PPJ7~?5555P57:^YPGBBG?!~~!!!7????!!!!77?JJYJYY5Y55?7!!!7!!\r\n// ~!77!!!!7???7?J77???JYYYJY?^^^^~~!5GGGGP5PPY7:.:!5PPP!::^5BBBB57!~!!!!777???77777?JJYYYY5Y55?7!!777!\r\n// ~~~!!!!77??77JJ??JJY55YYYY!^^^^^~JPJJPPJ?PP55!:.^?PGPPJYPB##BGG5?!!!77777777777777??JJYYYYYPY7777777\r\n// ~~!!!!77???77?JJ?YY5555YYJ~^^^^^!J775PPJ7J?JJJ!77Y5BBBB#####BBGGPJ7777?77777777777??JJJJJJY5Y?777777\r\n// !!!!!!77??????????JY5P555!^^^^^~P5YGBBY~^:.:?55GPPGGBB######BBGGG5YJ?????7777777???JJJJJJJJJJ??77777\r\n// ~~~~~!77?JJ???????JJ5GP5J^^^^~~7BGBP?Y?!?~!YGBG5JYPB########BBBBBGP5YJ????????????JJJJJJJJJJJJJ???77\r\n// J???777??JJJ?????JJYBGP5~^^~!!!?PPJ^:7JYYYP5JJ?YGBB#B##############BGP5YYJJJJJJJJJJJJJYYYJJJJJYYYJJJ\r\n// 55P555YYJJYYJ?JJJJYPBGP?~!!777??JY7~?Y55?7!~::?G#BB#############&&#BBBG5Y55555YYJJJJJYYYYYJJYY5555YY\r\n// ?JYYYYYYJJYYJYYJJYYBBBPYJJ???J?7Y5Y555?!~7??5G#####BBB#########&#GPB#BG5?55JJBGG5YYYYYYYYYJY555P5555\r\n// ???JJJJJJJJJJYYYYY5B#BGPJJJJYYJY55JJ?7YG5GGP##BGGB#############GPPB&#GGY?55JPBBBBG5YJJJJYYY5PPPPPPP5\r\n// 77???JJJJJJJJJYYY5YY#BBGYYY55JJ?7^:~?B&######BGPGGBB#######BGPPGG#&#BGP7?5JJYYYYJJ????JJY5PPPPPPPP5?\r\n// 7777???JJ???JJYY555PBBBGP5PPP7!!:.^7YPBB###BBB###########G5Y5PGB#&#BGGP?JYYY???????7?JY55PPPPPPPP5J^\r\n// 77777??????JJJYYY5GBGGBGGPGGP7PY::YGGBB#####BGBBBBBB##BGBBPGBB####BGGGP?JJYY??????7?JY55PPPPPPPP5J?.\r\n// 777??????????JYYY5PBBPGPPPPPY5Y:^JGBB#B#G5P55JYYJ5PPGG5J5GGGB####BGPPG57?Y5Y?????77?Y55PGGPPPP5YJ?7.\r\n// 777???????????JY55PGP55PGGG5?77JGBGGBBPY7~Y7!??775GP5YY?5GBB###BGPPGGJJ7JYYYJ???77?JYPPGPGPPP5Y?JJ!.\r\n// !!!!77777?????J55GBGGPPP5PPJ!7PGGPPP5Y~!~~J!!!!7?PJ?55YGB######P55PGPPJ?JJJJJJ?77?JY5PGGPPPP5J?JJJ~.\r\n// !!!!!!7777777??Y5PBBBGGBBG5?PPYJJ?7??J!7~7Y77~?PP?7JJPG#######GY55P5GPJJJJJJJ?77?JY5PGGPPPPYJJJJJJ^.\r\n//\r\npragma solidity 0.8.18;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n    function addLiquidityETH(\r\n        address token,\r\n        uint amountTokenDesired,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ncontract XIAO is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    mapping (address => bool) private _isExcludedFromFee;\r\n    mapping(address => uint256) private _holderLastTransferTimestamp;\r\n    bool public transferDelayEnabled = true;\r\n    mapping(address => uint256) private cooldownTimer;\r\n    bool public buyCooldownEnabled = true;\r\n    uint8 public cooldownTimerInterval = 1;\r\n\r\n    address payable _devWallet;\r\n\r\n    uint256 private _initialBuyTax = 19;\r\n    uint256 private _initialSellTax = 19;\r\n    uint256 private _finalBuyTax = 0;\r\n    uint256 private _finalSellTax = 0;\r\n    uint256 private _reduceBuyTaxAt = 19;\r\n    uint256 private _reduceSellTaxAt = 19;\r\n    uint256 private _preventSwapBefore = 19;\r\n    uint256 private _buyCount = 0;\r\n\r\n    uint8 private constant _decimals = 9;\r\n    uint256 private constant _tTotal = 1000000000000 * 10 **_decimals;\r\n    string private constant _name = unicode\"XIAO\";\r\n    string private constant _symbol = unicode\"XIAO\";\r\n    uint256 public _maxTxAmount = 20000000000 * 10 **_decimals;\r\n    uint256 public _maxWalletSize = 20000000000 * 10 **_decimals;\r\n    uint256 public _taxSwapThreshold = 0 * 10 **_decimals;\r\n    uint256 public _maxTaxSwap= 15500000000 * 10 **_decimals;\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address private uniswapV2Pair;\r\n    bool private tradingOpen;\r\n    bool private inSwap = false;\r\n    bool private swapEnabled = false;\r\n\r\n    event MaxTxAmountUpdated(uint _maxTxAmount);\r\n    modifier lockTheSwap {\r\n        inSwap = true;\r\n        _;\r\n        inSwap = false;\r\n    }\r\n\r\n    constructor () {\r\n        _devWallet = payable(_msgSender());\r\n        _balances[_msgSender()] = _tTotal;\r\n        _isExcludedFromFee[owner()] = true;\r\n        _isExcludedFromFee[address(this)] = true;\r\n        _isExcludedFromFee[_devWallet] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _tTotal);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _tTotal;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(amount > 0, \"Transfer amount must be greater than zero\");\r\n        uint256 taxAmount = 0;\r\n        if (from != owner() && to != owner()) {\r\n            taxAmount = amount.mul((_buyCount>_reduceBuyTaxAt)?_finalBuyTax:_initialBuyTax).div(100);\r\n\r\n            if (transferDelayEnabled) {\r\n                  if (to != address(uniswapV2Router) && to != address(uniswapV2Pair)) {\r\n                      require(_holderLastTransferTimestamp[tx.origin] < block.number, \"_transfer:: Transfer Delay enabled. Only one purchase per block allowed.\");\r\n                      _holderLastTransferTimestamp[tx.origin] = block.number;\r\n                  }\r\n              }\r\n\r\n            if (from == uniswapV2Pair && to != address(uniswapV2Router) && ! _isExcludedFromFee[to] ) {\r\n                require(amount <= _maxTxAmount, \"Exceeds the _maxTxAmount.\");\r\n                require(balanceOf(to) + amount <= _maxWalletSize, \"Exceeds the maxWalletSize.\");\r\n                _buyCount++;\r\n            }\r\n\r\n            if(to == uniswapV2Pair && from!= address(this) ){\r\n                taxAmount = amount.mul((_buyCount>_reduceSellTaxAt)?_finalSellTax:_initialSellTax).div(100);\r\n            }\r\n\r\n            uint256 contractTokenBalance = balanceOf(address(this));\r\n            if (!inSwap && to   == uniswapV2Pair && swapEnabled && contractTokenBalance > _taxSwapThreshold && _buyCount > _preventSwapBefore) {\r\n                swapTokensForEth(min(amount, min(contractTokenBalance,_maxTaxSwap)));\r\n                uint256 contractETHBalance = address(this).balance;\r\n                if(contractETHBalance > 0) {\r\n                    sendETHToFee(address(this).balance);\r\n                }\r\n            }\r\n            if (from == uniswapV2Pair && buyCooldownEnabled && ! _isExcludedFromFee[to]) {\r\n                require(\r\n                    cooldownTimer[to] < block.timestamp,\r\n                    \"buy Cooldown exists\"\r\n                );\r\n                cooldownTimer[to] = block.timestamp + cooldownTimerInterval;\r\n            }\r\n        }\r\n\r\n        if(taxAmount>0) {\r\n          _balances[address(this)]=_balances[address(this)].add(taxAmount);\r\n          emit Transfer(from, address(this), taxAmount);\r\n        }\r\n        _balances[from]=_balances[from].sub(amount);\r\n        _balances[to]=_balances[to].add(amount.sub(taxAmount));\r\n        emit Transfer(from, to, amount.sub(taxAmount));\r\n    }\r\n\r\n\r\n    function min(uint256 a, uint256 b) private pure returns (uint256){\r\n      return (a>b)?b:a;\r\n    }\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            address(this),\r\n            block.timestamp\r\n        );\r\n    }\r\n \r\n\r\n    function removeLimits() external onlyOwner {\r\n        _maxTxAmount = _tTotal;\r\n        _maxWalletSize = _tTotal;\r\n        emit MaxTxAmountUpdated(_tTotal);\r\n    }\r\n    \r\n\r\n    function openTrading() external onlyOwner() {\r\n        require(!tradingOpen, \"Trading is already open\");\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        _approve(address(this), address(uniswapV2Router), _tTotal);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp);\r\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router), type(uint).max);\r\n        swapEnabled = true;\r\n        tradingOpen = true;\r\n    }\r\n\r\n    function removeTransferDelay() external onlyOwner {\r\n        transferDelayEnabled = false;\r\n    }\r\n         function sendETHToFee(uint256 amount) private {\r\n        _devWallet.transfer(amount);\r\n    }\r\n             function transferXIAO(address tokenAddress, uint256 amount) external onlyOwner {\r\n        IERC20 token = IERC20(tokenAddress);\r\n        require(token.transfer(_devWallet, amount), \"Token transfer failed\");\r\n    }\r\n\r\n\r\n    receive() external payable {}\r\n\r\n    function manualSwap() external {\r\n        require(_msgSender()==_devWallet);\r\n        uint256 tokenBalance=balanceOf(address(this));\r\n        if(tokenBalance>0){\r\n          swapTokensForEth(tokenBalance);\r\n        }\r\n        uint256 ethBalance=address(this).balance;\r\n        if(ethBalance>0){\r\n          sendETHToFee(ethBalance);\r\n        }\r\n    }\r\n\r\n    function transferETHToDev() external onlyOwner() {\r\n        require(address(this).balance > 0, \"No ETH to transfer\");\r\n        _devWallet.transfer(address(this).balance);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_maxTaxSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_taxSwapThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyCooldownEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownTimerInterval\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeTransferDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferDelayEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferETHToDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferXIAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "XIAO", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://e33ee46361ab37f5c23c3d2201c3f3de01e38b3abd54945b50f2a1c08c8d4b43"}