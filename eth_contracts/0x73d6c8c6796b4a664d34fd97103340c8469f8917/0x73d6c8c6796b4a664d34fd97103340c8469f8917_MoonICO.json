{"SourceCode": "//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^~~!!7??JJY55PPPPPPPP5?~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^~7?YPGB#&&&&&&&&&&&&&&&&&@#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!?5GB&&&&&&&&&&&&&&&&&&&&&&&&&&7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~7B#&&&########&&&&&&&&&&&&&&&&&&@J~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!#&&##########&&&&&&&&&&&&&&&&&&@P^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~?@&&&&######&&&&&&&&&&&&&&&&&&&&B~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~P@&&&######&&&&&&&&&&&&&&&&&&&&&!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!&&&&######&&&&&&&&####BBBBBB###G7?YY5Y7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Y@&&&&&&####BBGPPP5555555PPGBB#&@@@@@@#!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~~~~~!!!!!!~!#&&##BGGPP55555PPPPGGBB#&&&@@@@@@@@&G7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~~~~!!!!~~~~!!7?G@###########&&&&@@@@@@@@@@@@@@@@@B7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~~~!!!~~!!!!JPB#&&@&@@&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@5~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~~!!!~!!!!!~5@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@&&&&&&&&&@@@Y~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n//~~~~~~~~~~~~~~~!!~!!!!!!!!!JPGB#@@@@@@@@@@@@&&&#BB#######&&&&&&&&@@@@@7~~~~~~~~~~~~~~~~~~~~~~~~!!!!!\r\n//~~~~~~~~~~~~~~!!!!!!!!!!!!!!~!!?@Y!7JPP5YYJ??YG5PG##&&&&&&&&&@@@@@@@@@G~~~~~~~~!!!!!!!!!777777777777\r\n//~~~~~~~~~~~~~~!!!!!!!!!!!!!!!!!Y@~^!!?YPY5PYJG5G&&&@@@@@@@@@@@&@@@@@@@&77777777777777777777777777777\r\n//~~~~~~~~~~~~~!!!!!!!!!!!!!!777!5@~7555P55PP55PYY##&@@@@@@&&&@@&@@@@@@@&?77777777777777?YYY5YJ?777777\r\n//~~~~~~~~~~~~~!~!!!!!7777777777!Y&J5Y??7!?!!75G5JG#&&@@@@@&&&&@@@@@@@@@&?777777777777?P&@@@@@&GJJJJ??\r\n//~~~~~~~~~~~~~!!!77777777777777YB#Y?77YJJ!7JY??55G####&&&&&&&&&@@&@@@@@#777?JJYYYYYYYYG&@@@@@@#5YYYYY\r\n//~~~~~~~~~~!!!777777777777777?BB?JY5Y5P5?^755??Y?YPGGG###&&&&&&&@&@@@@@5?JYYYYYYYYYYY5#&&&&&&@&G5YYYY\r\n//~~~~~!!!!7777777777777777777P@^^77!~!YYYJ7?!??~^5PPGB####&#&&&&@@@@@@#YYYYYYYYYYYYY5G&@&&&&@&@&B5YYY\r\n//!!!77777777777777777777777775@~.^!!!?YY?7??!!?!^!J5GBBB###&&&&&@@@@@#5YYYYYYYYYYYYY5#@&&&&&&&&@#5YYY\r\n//77777777???????????7777777777P#J~^~7?77?77?Y55YYJJ5PPB###&&&&&@@@@@#5YYYYYYYYYYYYYY5B&&&&&&&&@@&PYYY\r\n//7777??????????????????????????JGBGP555BP~!5Y7~!Y55JJY5PG#&&&&&&@@&GYYYYYYYYYYYYYYYYYG&@&&&&&&&@&GYYY\r\n//?????????????????????????????????JYYYJG@::YY?7?J5Y7!7JJ?P#&&&&&&G5YYYYYYYYYYYYYYYYYYP&@&&&&&&&@&GYYY\r\n//??????????????????????????????????JYPB&@J:~??JYYY7~!557~?#&&@@&5YY55555PPPGGGBBBPYYYP&@&&&&&&&@&B5YY\r\n//??????????????????????????????JYG#&&&&&&@J~!7!77!777?YJYG&&@@@@######&&&&@@@@@@@B5YYP&@&&&&&&&&@&B5Y\r\n//????????????????????J5555YJ5G#&&&&&&&&&&&@GY??77?J5JJYPG#&@&@@&&&&@@@@@@&&&&&&&@&BBB#&@&&&&&&&&&@&BG\r\n//????JJJJJJJJ?????J5GB###&&&@@&&&&&&&&&&&&&@@#G5Y?JJJ5GBB#&&&&@&&&&&&&&@@@@@&&&&&&@@@@&&&&&&&&&&&&&##\r\n//JJYYYYYYYY55PPPGGB#####&@@@&&&@@@@@@@&&&&&&&&@@&##BBBB##&&&&@@@&&&&&&&&@@@@@@@&&&&&&&&&&&&&&&&&&&&&#\r\n//YYYY55PPGGBB#######&&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&@&@#5YJJJYYG&&&&&&@@&&&&&&@@@@@&&&&&&&&&&&&&&&&&&&\r\n//5PPGBB###########&@&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&GPGG5YJ5PBPG#&&&&&@@&&&&&&&&@@@&&&&&&&&&&&&&&&&@&\r\n//#################@&&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&&&&PPPPG&GPPGBB&&&&&&&@@&&&&&&@@&&&&&&&&&&&&&&&&&&&\r\n//###############B&@&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&PPG#57775@&&&&&&&&&&@@&&&&&@@&&&&&&&&&&&&&&&&&&\r\n//################@&&&&&&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&#G#&J7?7P@&&&&&&&&&&&@@&&&&@@&&&&&&&&&&&&&&&&&&\r\n//###############&@&&&&&&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&@57?7B@&&&&&&&@@@&&&&&&&@@@@@&&&&&&&&&&&&&&&\r\n//###############@&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@&&&&@G77?&@&&&&&@@&&&&&@&&&&&@@&&&&&&&&&&&&&&&&&\r\n//########&&&&&&@@&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&@@&&&@B77Y@&&&&&&@&&&&&&@&&&&&@@&&&&&&&&&&&&&&&&&\r\n//#####&&@@@@@&@@&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&@&&&@#?75@&&&&&@&&&&&&&@&&&&&@@@&&&&&&&&&&&&&&&&\r\n//#&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&@@&&@#?7G@&&&&@&&&&&&&&@@&&&&&@@&&&&&&&&&&&&&&&&\r\n//@@@@@&&&&&&&@@&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&@&&@#7?#@&&&@@&&&&&&&&@@&&&&&@@&&&&&&&&&&&&&&&&\r\n//&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&@&&@B7J@&&&@@&&&&&&&&&&@&&&&&@@@&&&&&&&&&&&&&&&\r\n//&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&@&&@G7P@&&&@&&&&&&&&&&&@&&&&&&@@&@&&&&&&&&&&&&&\r\n//&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&&&&@&&@P7B@&&@&&&&&&&&&&&&@@&&&&&@@&&&&&&&&&&&&&&&\r\n//&&&&&&&&&&@@&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&&@&&@5?&@&@@&&&&&&&&&&&&@@&&&&&@@@&&&&&&&&&&&&&&\r\n//@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&@&&&&&&&&&&&&&&&&&&&&&@@&&@PP@&@@&&&&&&&&&&&&&@@&&&&&@@@@@@@@@@@@@@@@@\r\n\r\n/**\r\n *  SPDX-License-Identifier: MIT\r\n*/\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n\r\n// File: contracts/MyToken.sol\r\n\r\n\r\npragma solidity 0.8.16;\r\n\r\n\r\ncontract MoonICO {\r\n    //Administration Details\r\n    address public admin;\r\n    address payable public ICOWallet;\r\n\r\n    //Token\r\n    IERC20 public token;\r\n\r\n    //ICO Details\r\n    uint public tokenPrice = 0.000000001 ether;\r\n    uint public hardCap = 8 ether;\r\n    uint public raisedAmount;\r\n    uint public minInvestment = 0.005 ether;\r\n    uint public maxInvestment = 1 ether;\r\n\r\n    //Investor\r\n    mapping(address => uint) public investedAmountOf;\r\n\r\n    //ICO State\r\n    enum State {\r\n        BEFORE,\r\n        RUNNING,\r\n        END,\r\n        HALTED\r\n    }\r\n    State public ICOState;\r\n\r\n    //Events\r\n    event Invest(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint value\r\n    );\r\n    event TokenBurn(address to, uint amount, uint time);\r\n\r\n\r\n    //Initialize Variables\r\n    constructor(address payable _icoWallet, address _token) {\r\n        admin = msg.sender;\r\n        ICOWallet = _icoWallet;\r\n        token = IERC20(_token);\r\n    }\r\n\r\n    //Access Control\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Admin Only function\");\r\n        _;\r\n    }\r\n\r\n    //Receive Ether Directly\r\n    receive() external payable {\r\n        invest();\r\n    }\r\n\r\n    fallback() external payable {\r\n        invest();\r\n    }\r\n\r\n    /* Functions */\r\n\r\n    //Get ICO State\r\n    function getICOState() external view returns (string memory) {\r\n        if (ICOState == State.BEFORE) {\r\n            return \"Not Started\";\r\n        } else if (ICOState == State.RUNNING) {\r\n            return \"Running\";\r\n        } else if (ICOState == State.END) {\r\n            return \"End\";\r\n        } else {\r\n            return \"Halted\";\r\n        }\r\n    }\r\n\r\n    /* Admin Functions */\r\n\r\n    //Start, Halt and End ICO\r\n    function startICO() external onlyAdmin {\r\n        require(ICOState == State.BEFORE, \"ICO isn't in before state\");\r\n        ICOState = State.RUNNING;\r\n    }\r\n\r\n    function haltICO() external onlyAdmin {\r\n        require(ICOState == State.RUNNING, \"ICO isn't running yet\");\r\n        ICOState = State.HALTED;\r\n    }\r\n\r\n    function resumeICO() external onlyAdmin {\r\n        require(ICOState == State.HALTED, \"ICO State isn't halted yet\");\r\n        ICOState = State.RUNNING;\r\n    }\r\n\r\n    //Change ICO Wallet\r\n    function changeICOWallet(address payable _newICOWallet) external onlyAdmin {\r\n        ICOWallet = _newICOWallet;\r\n    }\r\n\r\n    //Change Admin\r\n    function changeAdmin(address _newAdmin) external onlyAdmin {\r\n        admin = _newAdmin;\r\n    }\r\n\r\n    /* User Function */\r\n    \r\n    //Invest\r\n    function invest() public payable returns (bool) {\r\n        require(ICOState == State.RUNNING, \"ICO isn't running\");\r\n        require(\r\n            msg.value >= minInvestment && msg.value <= maxInvestment,\r\n            \"Check Min and Max Investment\"\r\n        );\r\n        require(\r\n            investedAmountOf[msg.sender] + msg.value <= maxInvestment,\r\n            \"Investor reached maximum Investment Amount\"\r\n        );\r\n        require(\r\n            raisedAmount + msg.value <= hardCap,\r\n            \"Send within hardcap range\"\r\n        );\r\n\r\n        raisedAmount += msg.value;\r\n        investedAmountOf[msg.sender] += msg.value;\r\n\r\n        (bool transferSuccess, ) = ICOWallet.call{value: msg.value}(\"\");\r\n        require(transferSuccess, \"Failed to Invest\");\r\n\r\n        emit Invest(address(this), msg.sender, msg.value);\r\n        return true;\r\n    }\r\n\r\n    function claimTokens() external {\r\n        require(ICOState == State.END, \"ICO isn't over yet\");\r\n        uint tokensAmt = investedAmountOf[msg.sender] / tokenPrice * 1e18;\r\n        investedAmountOf[msg.sender] = 0;\r\n        token.transfer(msg.sender, tokensAmt);\r\n    }\r\n\r\n    //Burn Tokens\r\n    function burn() external onlyAdmin returns  (bool) {\r\n        require(ICOState == State.END, \"ICO isn't over yet\");\r\n\r\n        uint remainingTokens = token.balanceOf(address(this));\r\n        bool success = token.transfer(address(0), remainingTokens);\r\n        require(success, \"Failed to burn remaining tokens\");\r\n\r\n        emit TokenBurn(address(0), remainingTokens, block.timestamp);\r\n        return true;\r\n    }\r\n\r\n    //End ICO After reaching Hardcap or ICO Timelimit\r\n    function endIco() public onlyAdmin {\r\n        require(ICOState == State.RUNNING, \"ICO Should be in Running State\");\r\n        ICOState = State.END;\r\n    }\r\n\r\n    //Check ICO Contract Token Balance\r\n    function getICOTokenBalance() external view returns (uint) {\r\n        return token.balanceOf(address(this));\r\n    }\r\n\r\n    //Check ICO Contract Investor Token Balance\r\n    function investorBalanceOf(address _investor) external view returns (uint) {\r\n        return token.balanceOf(_investor);\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_icoWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"TokenBurn\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ICOState\",\"outputs\":[{\"internalType\":\"enum MoonICO.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ICOWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newICOWallet\",\"type\":\"address\"}],\"name\":\"changeICOWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getICOState\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getICOTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"haltICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"investedAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_investor\",\"type\":\"address\"}],\"name\":\"investorBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minInvestment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"raisedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startICO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MoonICO", "CompilerVersion": "v0.8.16+commit.07a7930e", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "0000000000000000000000006c26d351317c3ce1152d4769fe1b8874680506c2000000000000000000000000b3330ca4cae02da29ebf597cfc2dc815d05ee997", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://2339479d1219e3bc6e21da36fbec80315c2b726e3cdb279567253292cb2482a9"}