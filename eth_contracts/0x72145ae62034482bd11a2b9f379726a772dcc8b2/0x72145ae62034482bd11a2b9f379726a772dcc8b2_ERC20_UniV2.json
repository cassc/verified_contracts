{"SourceCode": "// HTTPS://T.ME/BOTTLEOFWATERCOIN\r\n// TIRED OF LOSING SO MUCH MONEY ON CRYPTO? \r\n// A HOLE BURNING IN YER POCKET??\r\n// BUY BOTTLE OF WATER COIN!! \r\n// NO MATTER HOW MUCH YOU INVEST \r\n// YOU WILL HAVE ENOUGH TO BUY A BOTTLE OF WATER!\r\n// HTTPS://T.ME/BOTTLEOFWATERCOIN\r\n\r\npragma solidity 0.8.18;\r\n\r\ninterface IUniswapV2Router02{\r\n    function WETH() external pure returns (address);\r\n    function factory() external pure returns (address);\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;\r\n    function addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\n\r\ninterface IUniswapV2Factory{function createPair(address tokenA, address tokenB) external returns (address pair);}\r\n\r\ncontract ERC20_UniV2 {\r\n\r\n    address private _v2Router = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;\r\n    string private _name = \"Bottle of Water\";\r\n    string private _symbol = \"WATA\";\r\n    uint private immutable _decimals = 18;\r\n    uint private _totalSupply = 10000000 * 10 ** 18;\r\n    uint public _swapAmount = 10000 * 10 ** 18;\r\n    uint public _buyTax = 0; uint public _sellTax = 0;\r\n    uint public _max = 6; uint public _transferDelay = 1;\r\n    address public _v2Pair; address private _collector;\r\n    address private _dev; address[] public _path;\r\n    mapping(address => uint) private _balances;\r\n    mapping(address => mapping(address => uint)) private _allowances;\r\n    mapping(address => bool) public _whitelisted;\r\n    mapping(address => bool) public _blacklisted;\r\n    mapping(address => uint) private _lastTransferBlock;\r\n    address[] public _blacklistArray;\r\n    IUniswapV2Router02 public uniswapV2Router;\r\n\r\n    uint256 private _totalShares;\r\n    uint256 private _totalReleased;\r\n    mapping(address => uint256) private _shares;\r\n    mapping(address => uint256) private _released;\r\n    address[] private _payees;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n    event PayeeAdded(address account, uint256 shares);\r\n    event PaymentReleased(address to, uint256 amount);\r\n    event PaymentReceived(address from, uint256 amount);\r\n\r\n    modifier onlyDev() {require(msg.sender == _dev, \"Only the developer can call this function\");_;}\r\n\r\n    constructor(address[] memory payees, uint256[] memory shares_) {\r\n        require(payees.length == shares_.length);\r\n        require(payees.length > 0);\r\n\r\n        for (uint256 i = 0; i < payees.length; i++) {_addPayee(payees[i], shares_[i]);}\r\n        _dev = msg.sender;\r\n        _balances[address(this)] = _totalSupply;\r\n        emit Transfer(address(0), address(this), _totalSupply);\r\n        uniswapV2Router = IUniswapV2Router02(_v2Router);\r\n        _v2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        _path = new address[](2); _path[0] = address(this); _path[1] = uniswapV2Router.WETH();\r\n        _whitelisted[address(this)] = true; _whitelisted[msg.sender] = true;\r\n    }\r\n\r\n    function name() external view returns (string memory) {return _name;}\r\n    function symbol() external view returns (string memory) {return _symbol;}\r\n    function decimals() external pure returns (uint) {return _decimals;}\r\n    function totalSupply() external view returns (uint) {return _totalSupply;}\r\n    function balanceOf(address account) external view returns (uint) {return _balances[account];}\r\n    function allowance(address owner, address spender) external view returns (uint) {return _allowances[owner][spender];}\r\n    function totalShares() public view returns (uint256) {return _totalShares;}\r\n    function totalReleased() public view returns (uint256) {return _totalReleased;}\r\n    function shares(address account) public view returns (uint256) {return _shares[account];}\r\n    function released(address account) public view returns (uint256) {return _released[account];}\r\n    function payee(uint256 index) public view returns (address) {return _payees[index];}\r\n    function deposit() external payable onlyDev{}\r\n    receive () external payable{emit PaymentReceived(msg.sender, msg.value);}\r\n    fallback () external payable{emit PaymentReceived(msg.sender, msg.value);}\r\n\r\n    function transfer(address to, uint256 amount) public returns (bool) {_transfer(msg.sender, to, amount); return true;}\r\n\r\n    function approve(address spender, uint256 amount) public returns (bool) {_approve(msg.sender, spender, amount); return true;}\r\n\r\n    function withdraw(uint amount_) external onlyDev {_transfer(address(this), _dev, amount_);}\r\n\r\n    function setDev (address dev_) external onlyDev {_dev = dev_;}\r\n\r\n    function setTax (uint buyTax_, uint sellTax_) external onlyDev {_buyTax = buyTax_; _sellTax = sellTax_;}\r\n\r\n    function setMax(uint max_) external onlyDev {_max = max_;}\r\n\r\n    function setTransferDelay(uint delay) external onlyDev {_transferDelay = delay;}\r\n\r\n    function setSwapAmount(uint swapAmount_) external onlyDev {_swapAmount = swapAmount_ * 10 ** _decimals;}\r\n\r\n    function maxInt() internal view returns (uint) {return _totalSupply * _max / 100;}\r\n\r\n    function transferFrom(address from, address to, uint256 amount) public returns (bool) {\r\n        _spendAllowance(from, msg.sender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n\tfunction _transfer(address from, address to, uint256 amount) internal {\r\n\t\trequire(_balances[from] >= amount && (amount + _balances[to] <= maxInt() || _whitelisted[from] || _whitelisted[to] || to == _v2Pair), \"ERC20: transfer amount exceeds balance or max wallet\");\r\n\t\trequire(block.number >= _lastTransferBlock[from] + _transferDelay || from == _v2Pair || _whitelisted[from] || _whitelisted[to], \"ERC20: transfer delay not met\");\r\n\t\trequire(!_blacklisted[from] && !_blacklisted[to], \"ERC20: YOU DON'T HAVE THE RIGHT\");\r\n\t\tuint256 taxAmount = 0;\r\n\t\tif ((from == _v2Pair || to == _v2Pair) && !_whitelisted[from] && !_whitelisted[to]) {\r\n\t\t\tif (to == _v2Pair) {taxAmount = amount * _sellTax / 100;} else {taxAmount = amount * _buyTax / 100;}\r\n\t\t\t_balances[address(this)] += taxAmount; emit Transfer(from, address(this), taxAmount);\r\n\t\t\t_lastTransferBlock[from] = block.number; _lastTransferBlock[to] = block.number;\r\n\t\t\tif (_balances[address(this)] > _swapAmount && to == _v2Pair) {_swapBack(_balances[address(this)]);}\r\n\t\t}\r\n\t\t_balances[from] -= amount; _balances[to] += (amount - taxAmount); emit Transfer(from, to, (amount - taxAmount));\r\n\t}\r\n\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    function _spendAllowance(address owner, address spender, uint256 amount) internal {\r\n        uint256 currentAllowance = _allowances[owner][spender];\r\n        require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n        _approve(owner, spender, currentAllowance - amount);\r\n    }\r\n\r\n    function updateWhitelist(address[] memory addresses, bool whitelisted_) external onlyDev {\r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            _whitelisted[addresses[i]] = whitelisted_;\r\n        }\r\n    }\r\n\r\n    function updateBlacklist(address[] memory addresses, bool blacklisted_) external onlyDev{\r\n        for (uint i = 0; i < addresses.length; i++) {_blacklisted[addresses[i]] = blacklisted_; _blacklistArray.push(addresses[i]);}\r\n    }\r\n\r\n    function _swapBack(uint256 amount_) internal{\r\n        _approve(address(this), _v2Router, amount_ + 100);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount_, 0, _path, address(this), block.timestamp);\r\n    }\r\n\r\n    function _addLiquidity() external onlyDev{\r\n        _approve(address(this), _v2Router, _balances[address(this)]); _buyTax = 24; _sellTax = 25;\r\n        uniswapV2Router.addLiquidityETH{value: address(this).balance}(address(this), _balances[address(this)], 0, 0, msg.sender, block.timestamp);\r\n    }\r\n\r\n    function setRouter(address v2Router_) external onlyDev {\r\n        _v2Router = v2Router_;\r\n        uniswapV2Router = IUniswapV2Router02(_v2Router);\r\n        _v2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n    }\r\n\r\n    function release(address payable account) public {\r\n        require(_shares[account] > 0);\r\n        uint256 totalReceived = address(this).balance+(_totalReleased);\r\n        uint256 payment = totalReceived*(_shares[account])/(_totalShares)-(_released[account]);\r\n        require(payment != 0);\r\n        _released[account] = _released[account]+(payment);\r\n        _totalReleased = _totalReleased+(payment);\r\n        account.transfer(payment);\r\n        emit PaymentReleased(account, payment);\r\n    }\r\n\r\n    function _addPayee(address account, uint256 shares_) private {\r\n        require(account != address(0));\r\n        require(shares_ > 0);\r\n        require(_shares[account] == 0);\r\n        _payees.push(account);\r\n        _shares[account] = shares_;\r\n        _totalShares = _totalShares+(shares_);\r\n        emit PayeeAdded(account, shares_);\r\n    }\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"payees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"PayeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_blacklistArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_path\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_swapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_transferDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_v2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"released\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dev_\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max_\",\"type\":\"uint256\"}],\"name\":\"setMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"v2Router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapAmount_\",\"type\":\"uint256\"}],\"name\":\"setSwapAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyTax_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellTax_\",\"type\":\"uint256\"}],\"name\":\"setTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"setTransferDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReleased\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"blacklisted_\",\"type\":\"bool\"}],\"name\":\"updateBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"whitelisted_\",\"type\":\"bool\"}],\"name\":\"updateWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "ERC20_UniV2", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c142b87015a172453dface230f91c26435738b8300000000000000000000000010e515fa15f88ca2b6ccef95386c9be86892140e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000055000000000000000000000000000000000000000000000000000000000000000f", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://0f5039b71f482383af9d40450590a4e793ad1f2a25098bdf166cea97b9743b22"}