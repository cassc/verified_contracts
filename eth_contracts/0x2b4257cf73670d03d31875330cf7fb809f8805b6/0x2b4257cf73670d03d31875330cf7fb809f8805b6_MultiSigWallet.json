{"SourceCode": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.13;\r\n\r\ncontract MultiSigWallet {\r\n\r\n    // \u5b58\u94b1 \u8bb0\u5f55\r\n    event Deposit_log(address indexed sender, uint amount, uint balance);\r\n\r\n    // \u4ea4\u6613 \u8bb0\u5f55\r\n    event SubmitTransaction_log(\r\n        address indexed owner,\r\n        uint indexed txIndex,\r\n        address indexed to,\r\n        uint value,\r\n        bytes data,\r\n        uint timestamp\r\n    );\r\n\r\n    // \u786e\u8ba4\u4ea4\u6613 \u8bb0\u5f55\r\n    event ConfirmTransaction_log(address indexed owner, uint indexed txIndex);\r\n\r\n    // \u6267\u884c\u4ea4\u6613 \u8bb0\u5f55\r\n    event ExecuteTransaction_log(address indexed owner, uint indexed txIndex);\r\n\r\n    // \u591a\u7b7e\u6210\u5458\r\n    address[] public owners;\r\n    mapping(address => bool) public isOwner;\r\n\r\n    // \u4ea4\u6613\u591a\u7b7e\u901a\u8fc7 \u4eba\u6570\r\n    uint public numConfirmationsRequired;\r\n\r\n    // \u4ea4\u6613\u6570\u636e\r\n    struct Transaction {\r\n        address to;\r\n        uint value;\r\n        bytes data;\r\n        uint timestamp;\r\n        bool executed;\r\n        uint numConfirmations;\r\n    }\r\n\r\n    // \u6bcf\u7b14\u4ea4\u6613\u4e2d \u6bcf\u4e2a\u591a\u7b7e\u8005\u786e\u8ba4\u60c5\u51b5\r\n    mapping(uint => mapping(address => bool)) public isConfirmed;\r\n\r\n    // \u5168\u90e8\u4ea4\u6613\u6570\u636e\r\n    Transaction[] public transactions;\r\n\r\n    // \u53ea\u6709\u7b7e\u540d\u8005\u624d\u80fd\u8c03\u7528\u51fd\u6570\r\n    modifier onlyOwner() {\r\n        require(isOwner[msg.sender], \"not owner\");\r\n        _;\r\n    }\r\n\r\n    // \u901a\u8fc7\u5e8f\u53f7\u5224\u65ad\u4ea4\u6613\u662f\u5426\u5b58\u5728\r\n    modifier txExists(uint _txIndex) {\r\n        require(_txIndex < transactions.length, \"tx does not exist\");\r\n        _;\r\n    }\r\n\r\n    // \u4ea4\u6613\u7ed3\u675f\u7684\u4e0d\u6267\u884c\r\n    modifier notExecuted(uint _txIndex) {\r\n        require(!transactions[_txIndex].executed, \"tx already executed\");\r\n        _;\r\n    }\r\n\r\n    // \u907f\u514d\u540c\u4e00\u7b7e\u540d\u8005\u91cd\u590d\u786e\u8ba4\u4ea4\u6613\r\n    modifier notConfirmed(uint _txIndex) {\r\n        require(!isConfirmed[_txIndex][msg.sender], \"tx already confirmed\");\r\n        _;\r\n    }\r\n\r\n    // \u521d\u59cb\u5316\u5408\u7ea6,\u8bbe\u7f6e\u7b7e\u540d\u8005\u548c\u6743\u91cd\r\n    constructor(address[] memory _owners, uint _numConfirmationsRequired) {\r\n        require(_owners.length > 0, \"owners required\");\r\n        require(\r\n            _numConfirmationsRequired > 0 &&\r\n                _numConfirmationsRequired <= _owners.length,\r\n            \"invalid number of required confirmations\"\r\n        );\r\n\r\n        // \u6dfb\u52a0\u7b7e\u540d\u8005\r\n        for (uint i = 0; i < _owners.length; i++) {\r\n            address owner = _owners[i];\r\n\r\n            require(owner != address(0), \"invalid owner\");\r\n            require(!isOwner[owner], \"owner not unique\"); // \u786e\u4fdd\u7b7e\u540d\u8005 \u4e0d\u91cd\u590d\r\n\r\n            isOwner[owner] = true;\r\n            owners.push(owner);\r\n        }\r\n\r\n        numConfirmationsRequired = _numConfirmationsRequired;\r\n    }\r\n\r\n    // \u5b9e\u73b0 receive \u51fd\u6570, \u53ef\u63a5\u53d7 ETH\r\n    receive() external payable {\r\n        emit Deposit_log(msg.sender, msg.value, address(this).balance);\r\n    }\r\n\r\n    //\u672a\u627e\u5230\u65b9\u6cd5\u65f6\r\n    fallback() external payable {\r\n        revert(\"error func\");\r\n    }\r\n\r\n    // \u63d0\u4ea4\u4ea4\u6613\r\n    function submitTransaction(\r\n        address _to,\r\n        uint _value,\r\n        bytes memory _data\r\n    ) public onlyOwner {\r\n        // \u83b7\u53d6\u5e8f\u53f7\r\n        uint txIndex = transactions.length;\r\n\r\n        // \u83b7\u53d6\u65f6\u95f4\u6233\r\n        uint _timestamp = block.timestamp;\r\n\r\n        transactions.push(\r\n            Transaction({\r\n                to: _to,\r\n                value: _value,\r\n                data: _data,\r\n                timestamp: _timestamp,\r\n                executed: false,\r\n                numConfirmations: 1\r\n            })\r\n        );\r\n\r\n        // \u9ed8\u8ba4\u63d0\u4ea4\u4ea4\u6613\u8005\u786e\u8ba4\u4ea4\u6613\r\n        isConfirmed[txIndex][msg.sender] = true;\r\n\r\n        // \u8bb0\u5f55\u4ea4\u6613\u4fe1\u606f\r\n        emit SubmitTransaction_log(msg.sender, txIndex, _to, _value, _data, _timestamp);\r\n\r\n        // \u8bb0\u5f55\u786e\u8ba4\u4ea4\u6613\u8005\r\n        emit ConfirmTransaction_log(msg.sender, txIndex);\r\n\r\n    }\r\n\r\n    // \u786e\u8ba4\u4ea4\u6613\r\n    function confirmTransaction(uint _txIndex)\r\n        public\r\n        onlyOwner\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n        notConfirmed(_txIndex)\r\n    {\r\n        Transaction storage transaction = transactions[_txIndex];\r\n\r\n        // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u6233\r\n        uint now_timestamp = block.timestamp;\r\n\r\n        uint wait_time = 60 minutes * 24;\r\n\r\n        // \u672a\u8d85\u65f6\u7684\u6295\u7968\u624d\u6709\u6548\r\n        if (now_timestamp - transaction.timestamp <= wait_time) {\r\n            transaction.numConfirmations += 1;\r\n            isConfirmed[_txIndex][msg.sender] = true;\r\n            emit ConfirmTransaction_log(msg.sender, _txIndex);\r\n        } else {\r\n            transaction.executed = true;\r\n        }\r\n\r\n    }\r\n\r\n    // \u6267\u884c\u4ea4\u6613\r\n    function executeTransaction(uint _txIndex)\r\n        public\r\n        txExists(_txIndex)\r\n        notExecuted(_txIndex)\r\n    {\r\n\r\n        Transaction storage transaction = transactions[_txIndex];\r\n\r\n        require(\r\n            transaction.numConfirmations >= numConfirmationsRequired,\r\n            \"cannot execute tx\"\r\n        );\r\n\r\n        transaction.executed = true;\r\n\r\n        (bool success, ) = transaction.to.call{value: transaction.value}(\r\n            transaction.data\r\n        );\r\n        require(success, \"tx failed\");\r\n\r\n        emit ExecuteTransaction_log(msg.sender, _txIndex);\r\n\r\n    }\r\n\r\n    // \u83b7\u5f97\u591a\u7b7e\u8005\r\n    function getOwners() public view returns (address[] memory) {\r\n        return owners;\r\n    }\r\n\r\n    // \u83b7\u5f97\u4ea4\u6613\u6570\u91cf\r\n    function getTransactionCount() public view returns (uint) {\r\n        return transactions.length;\r\n    }\r\n\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ConfirmTransaction_log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Deposit_log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"ExecuteTransaction_log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SubmitTransaction_log\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MultiSigWallet", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000050000000000000000000000006ba50066f232c3f3a8e00034311aa424182e353200000000000000000000000048c415c7fc27a2ae9864c9e57c5a03afc290ace80000000000000000000000009d3daf8d791a1a5df122008cca794bef7989e44900000000000000000000000067cbba9f5350fff3685a5c410aba1f042780f5a300000000000000000000000060299d8886654729020a08084bf19d9ba10ff153", "EVMVersion": "Default", "Library": "", "LicenseType": "GNU GPLv3", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6142b30cf759147f308d79c99af86421a948cbe20498eef040fc2e8672c0f4b6"}