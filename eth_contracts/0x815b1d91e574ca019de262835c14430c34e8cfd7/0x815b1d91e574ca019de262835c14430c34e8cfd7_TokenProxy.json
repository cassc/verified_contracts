{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/TokenProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/*    \\n\\n                             ##########                             \\n                          ###### ## ######                          \\n                         ######  ##  ## ###                         \\n                        ##  ##   ##   ##  ##                        \\n                       ##   #    ##    #   ##                       \\n                        ##  ##   ##   ##  ##                        \\n                         ### ##  ##  ## ###                         \\n                          ###### ## ######                          \\n                             ##########                             \\n                                                                    \\nhttps://taxfarm.ing/token/0x815B1D91e574Ca019DE262835C14430c34e8cfD7\\n\\n\\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\\n\u2502     __  __           _         _             _______         ______                      _               \u2502\\n\u2502    |  \\\\/  |         | |       | |           |__   __|       |  ____|                    (_)              \u2502\\n\u2502    | \\\\  / | __ _  __| | ___   | |__  _   _     | | __ ___  _| |__ __ _ _ __ _ __ ___     _ _ __   __ _   \u2502\\n\u2502    | |\\\\/| |/ _` |/ _|` |/ _ \\\\  | '_ \\\\| | | |    | |/ _` | / /  __/ _` | '__| '_ ` _ \\\\   | | '_ \\\\ / _` |  \u2502\\n\u2502    | |  | | (_| | (_| |  __/  | |_) | |_| |    | | (_| |>  <| | | (_| | |  | | | | | |  | | | | | (_| |  \u2502\\n\u2502    |_|  |_|\\\\__,_|\\\\__,_|\\\\___|  |_.__/ \\\\__, |    |_|\\\\__,_/_/\\\\_\\\\_|  \\\\__,_|_|  |_| |_| |_|(_)_|_| |_|\\\\__, |  \u2502\\n\u2502                                       __/ |                                                      __/ |   \u2502\\n\u2502                                      |___/                                                      |___/    \u2502\\n\u2502                                                                                                          \u2502\\n\u2502                                             taxfarm.ing                                                  \u2502\\n\u2502                                                                                                          \u2502\\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\\n\\n*/\\n\\n\\ncontract TokenProxy {\\n    // constant stored in runtime bytecode to ensure contract uniqueness and be able to verify it on etherscan with custom comments\\n    uint256 public constant uniqueId = 0x1000100000000000000000000000000000000000000000000000000000000007; // use a 32 bytes uint to ensure consistency of PUSH32 opcode, 1st byte to ensure 32 bytes length, 2 next bytes are used as a placeholder for factory version and the next 29 bytes are used as a placeholder for unique id\\n\\n    address public immutable tokenLogic;\\n\\n    constructor(address _tokenLogic) {\\n        tokenLogic = _tokenLogic;\\n    }\\n\\n    // delegate functions call to the token logic contract\\n    fallback() external payable {\\n        address dest = tokenLogic;\\n        \\n        assembly {\\n            calldatacopy(0, 0, calldatasize())\\n\\n            let result := delegatecall(gas(), dest, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"evmVersion\": \"shanghai\",\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenLogic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"tokenLogic\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniqueId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]", "ContractName": "TokenProxy", "CompilerVersion": "v0.8.20+commit.a1b79de6", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "0000000000000000000000007Af9AC1fDb60caf6510Af1944f8B4b21F0FE9244", "EVMVersion": "shanghai", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}