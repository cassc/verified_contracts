{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"contracts/HinkalWrapper.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.17;\\n\\nimport {IHinkal, Dimensions, CircomData} from \\\"./types/IHinkal.sol\\\";\\nimport {IHinkalWrapper} from \\\"./types/IHinkalWrapper.sol\\\";\\n\\n/**\\n * @title HinkalWrapper\\n * @notice This contract is used to wrap Hinkal.transact call and pass sender address to target contract\\n */\\ncontract HinkalWrapper is IHinkalWrapper {\\n    IHinkal internal immutable hinkal;\\n    address public sender;\\n\\n    constructor(address _hinkal) {\\n        hinkal = IHinkal(_hinkal);\\n    }\\n\\n    function transact(\\n        uint256[2] calldata a,\\n        uint256[2][2] calldata b,\\n        uint256[2] calldata c,\\n        Dimensions calldata dimensions,\\n        CircomData calldata circomData\\n    ) external {\\n        sender = msg.sender;\\n        hinkal.transactWithExternalAction(a, b, c, dimensions, circomData);\\n        sender = address(0);\\n    }\\n}\\n\"\r\n    },\r\n    \"contracts/types/CircomData.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.6;\\n\\nimport \\\"./StealthAddressStructure.sol\\\";\\n\\nuint256 constant CIRCOM_P = 21888242871839275222246405745257275088548364400416034343698204186575808495617; // https://docs.circom.io/circom-language/basic-operators/\\n\\nstruct CircomData {\\n    uint256 rootHashHinkal;\\n    address[] erc20TokenAddresses;\\n    uint256[] tokenIds;\\n    int256[] amountChanges;\\n    uint256[][] inputNullifiers;\\n    uint256[][] outCommitments;\\n    bytes[][] encryptedOutputs;\\n    uint256[] flatFees;\\n    uint256 timeStamp;\\n    StealthAddressStructure stealthAddressStructure;\\n    uint256 rootHashAccessToken;\\n    uint256 calldataHash;\\n    uint16 publicSignalCount;\\n    address relay;\\n    address externalAddress;\\n    uint256 externalActionId;\\n    bytes externalActionMetadata;\\n    HookData hookData;\\n}\\n\\nstruct HookData {\\n    address preHookContract;\\n    address hookContract;\\n    bytes preHookMetadata;\\n    bytes postHookMetadata;\\n}\\n\"\r\n    },\r\n    \"contracts/types/Dimensions.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.6;\\n\\nstruct Dimensions {\\n    uint16 tokenNumber;\\n    uint16 nullifierAmount;\\n    uint16 outputAmount;\\n}\\n\"\r\n    },\r\n    \"contracts/types/IHinkal.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.6;\\n\\nimport \\\"../types/Dimensions.sol\\\";\\nimport \\\"../types/CircomData.sol\\\";\\n\\ninterface IHinkal {\\n    event ExternalActionRegistered(address externalActionAddress);\\n\\n    event ExternalActionRemoved(address externalActionAddress);\\n\\n    struct ConstructorArgs {\\n        uint256 levels;\\n        address poseidon;\\n        address accessTokenAddress;\\n        address circomDataBuilderAddress;\\n        address erc20TokenRegistryAddress;\\n        address relayStoreAddress;\\n    }\\n\\n    function transact(\\n        uint256[2] calldata a,\\n        uint256[2][2] calldata b,\\n        uint256[2] calldata c,\\n        Dimensions calldata dimensions,\\n        CircomData calldata circomData\\n    ) external payable;\\n\\n    function transactWithExternalAction(\\n        uint256[2] calldata a,\\n        uint256[2][2] calldata b,\\n        uint256[2] calldata c,\\n        Dimensions calldata dimensions,\\n        CircomData calldata circomData\\n    ) external payable;\\n\\n    function transactWithHook(\\n        uint256[2] calldata a,\\n        uint256[2][2] calldata b,\\n        uint256[2] calldata c,\\n        Dimensions calldata dimensions,\\n        CircomData calldata circomData\\n    ) external payable;\\n\\n    function transactWithExternalActionAndHook(\\n        uint256[2] calldata a,\\n        uint256[2][2] calldata b,\\n        uint256[2] calldata c,\\n        Dimensions calldata dimensions,\\n        CircomData calldata circomData\\n    ) external payable;\\n}\\n\"\r\n    },\r\n    \"contracts/types/IHinkalWrapper.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.17;\\n\\ninterface IHinkalWrapper {\\n    function sender() external view returns (address);\\n}\\n\"\r\n    },\r\n    \"contracts/types/StealthAddressStructure.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.6;\\n\\nstruct StealthAddressStructure {\\n    uint256 extraRandomization;\\n    uint256 stealthAddress;\\n    uint256 H0;\\n    uint256 H1;\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 1000\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hinkal\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"sender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"tokenNumber\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"nullifierAmount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"outputAmount\",\"type\":\"uint16\"}],\"internalType\":\"struct Dimensions\",\"name\":\"dimensions\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rootHashHinkal\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"erc20TokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"int256[]\",\"name\":\"amountChanges\",\"type\":\"int256[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"inputNullifiers\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"outCommitments\",\"type\":\"uint256[][]\"},{\"internalType\":\"bytes[][]\",\"name\":\"encryptedOutputs\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"flatFees\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"extraRandomization\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stealthAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"H0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"H1\",\"type\":\"uint256\"}],\"internalType\":\"struct StealthAddressStructure\",\"name\":\"stealthAddressStructure\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rootHashAccessToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"calldataHash\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"publicSignalCount\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"relay\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"externalAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"externalActionId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"externalActionMetadata\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"preHookContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hookContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"preHookMetadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"postHookMetadata\",\"type\":\"bytes\"}],\"internalType\":\"struct HookData\",\"name\":\"hookData\",\"type\":\"tuple\"}],\"internalType\":\"struct CircomData\",\"name\":\"circomData\",\"type\":\"tuple\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "HinkalWrapper", "CompilerVersion": "v0.8.17+commit.8df45f5f", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "0000000000000000000000002ea81946ff675d5eb88192144ffc1418fa442e28", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}