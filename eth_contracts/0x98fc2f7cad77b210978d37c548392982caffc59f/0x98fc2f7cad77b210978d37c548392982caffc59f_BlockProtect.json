{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.18;\r\n\r\ninterface ISkateContractV2AuctionHouseV2 {\r\n    function settleCurrentAndCreateNewAuction() external;\r\n}\r\n\r\ncontract BlockProtect {\r\n    address public constant AUCTION_HOUSE =\r\n        0xC28e0d3c00296dD8c5C3F2E9707361920f92a209;\r\n\r\n    function settleAuction(uint expectedBlock) external {\r\n        require(block.number == expectedBlock, \"Gnar missed\");\r\n\r\n        ISkateContractV2AuctionHouseV2(AUCTION_HOUSE)\r\n            .settleCurrentAndCreateNewAuction();\r\n    }\r\n}", "ABI": "[{\"inputs\":[],\"name\":\"AUCTION_HOUSE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expectedBlock\",\"type\":\"uint256\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]", "ContractName": "BlockProtect", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "1", "Runs": "1000", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://6b56590ea05a91beb95b6e9d34bd69a46bb3b29232eb50e3ee5c9fb2f94731e6"}