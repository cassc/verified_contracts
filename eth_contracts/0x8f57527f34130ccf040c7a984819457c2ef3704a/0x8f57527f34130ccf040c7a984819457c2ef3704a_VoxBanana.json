{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\ninterface ITokenBuyer {\r\n    function buyExactTokens(address tokenAddress, uint256 tokenAmount, address refundAddress) external payable;\r\n    function withdraw() external;\r\n}\r\n\r\ncontract VoxBanana {\r\n    ITokenBuyer public tokenBuyer;\r\n    address public owner;\r\n\r\n    constructor(address _tokenBuyer) {\r\n        tokenBuyer = ITokenBuyer(_tokenBuyer);\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller must be the owner!!\");\r\n        _;\r\n    }\r\n\r\n    // Allows sending ETH to buy tokens. Any ETH sent with this call will be forwarded.\r\n    function voxBanana(address tokenAddress, uint256 tokenAmount, address refundAddress) external payable {\r\n        tokenBuyer.buyExactTokens{value: msg.value}(tokenAddress, tokenAmount, refundAddress);\r\n    }\r\n\r\n    // Allows the owner to trigger a withdrawal from the TokenBuyer contract.\r\n    function triggerWithdrawal() external onlyOwner {\r\n        tokenBuyer.withdraw();\r\n    }\r\n\r\n    // Withdraw ETH stored in this contract to the owner's address.\r\n    function withdraw() external onlyOwner {\r\n        (bool success, ) = payable(owner).call{value: address(this).balance}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n    }\r\n\r\n    // To receive ETH and ensure the contract can receive ETH without reverting.\r\n    receive() external payable {}\r\n    fallback() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenBuyer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBuyer\",\"outputs\":[{\"internalType\":\"contract ITokenBuyer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"voxBanana\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "VoxBanana", "CompilerVersion": "v0.8.19+commit.7dd6d404", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "00000000000000000000000063556e2a7797d307ca26f4c4607d07a68b85734b", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://3f9fc29df8bd97bc370eac044dc181d796dafac45687105a4d9a99c2b6e971ec"}