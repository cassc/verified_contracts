{"SourceCode": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MultiSend {\r\n    address public owner;\r\n\r\n    // Modifier to check if the caller is the owner\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    // Constructor to set the owner of the contract\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // Function to perform multi-send, callable only by the owner\r\n    function multiSend(address[] calldata addresses, uint256[] calldata amounts) external payable onlyOwner {\r\n        require(addresses.length == amounts.length, \"Arrays must have the same length\");\r\n\r\n        uint256 totalAmount = 0;\r\n        for (uint256 i = 0; i < amounts.length; i++) {\r\n            totalAmount += amounts[i];\r\n        }\r\n\r\n        require(msg.value + address(this).balance >= totalAmount, \"Total amount does not match msg.value\");\r\n\r\n        for (uint256 i = 0; i < addresses.length; i++) {\r\n            (bool success, ) = addresses[i].call{value: amounts[i]}(\"\");\r\n            require(success, \"Transfer failed\");\r\n        }\r\n    }\r\n\r\n    // Function to withdraw all Ether from the contract, callable only by the owner\r\n    function withdraw() external onlyOwner {\r\n        uint256 balance = address(this).balance;\r\n        require(balance > 0, \"No Ether to withdraw\");\r\n\r\n        (bool success, ) = owner.call{value: balance}(\"\");\r\n        require(success, \"Withdraw failed\");\r\n    }\r\n\r\n    // Fallback function to accept Ether sent to the contract\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "MultiSend", "CompilerVersion": "v0.8.26+commit.8a97fa7a", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "MIT", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ccc6726b57eb4262fd7db45806dfcc93158c4bcdbd5c6e89ccdbf24f69580cb2"}