{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"src/AccaAuctionProxy.sol\": {\r\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Proxy // This is the Auction\\n * @notice Basic proxy that delegates all calls to a fixed implementation contract.\\n * @dev    Implementation address is stored in the slot defined by the Proxy's address\\n */\\ncontract AccaProxy {\\n    constructor(address _implementation) {\\n        if(_implementation == address(0))\\n            revert(\\\"Invalid implementation address\\\");\\n        assembly {\\n            sstore(address(), _implementation)\\n        }\\n    }\\n\\n    fallback() external payable {\\n        address target;\\n        assembly {\\n            target := sload(address())\\n            calldatacopy(0, 0, calldatasize())\\n            let result := delegatecall(gas(), target, 0, calldatasize(), 0, 0)\\n            returndatacopy(0, 0, returndatasize())\\n            switch result\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n}\\n\\n\\n\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"remappings\": [\r\n      \"ds-test/=lib/forge-std/lib/ds-test/src/\",\r\n      \"forge-std/=lib/forge-std/src/\",\r\n      \"solady/=lib/solady/src/\",\r\n      \"@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\r\n      \"@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\r\n      \"@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\r\n      \"create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\r\n      \"create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\r\n      \"erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\r\n      \"libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\r\n      \"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\r\n      \"openzeppelin-contracts/=lib/openzeppelin-contracts/\",\r\n      \"royalty-registry-solidity/=lib/royalty-registry-solidity/\",\r\n      \"solady/=lib/solady/\"\r\n    ],\r\n    \"optimizer\": {\r\n      \"enabled\": true,\r\n      \"runs\": 200\r\n    },\r\n    \"metadata\": {\r\n      \"useLiteralContent\": false,\r\n      \"bytecodeHash\": \"ipfs\",\r\n      \"appendCBOR\": true\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    },\r\n    \"evmVersion\": \"paris\",\r\n    \"viaIR\": false,\r\n    \"libraries\": {}\r\n  }\r\n}}", "ABI": "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "AccaProxy", "CompilerVersion": "v0.8.25+commit.b61c2a91", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000dd8ecd869287af1ccc6e3b5efa74776f3dc4660e", "EVMVersion": "paris", "Library": "", "LicenseType": "", "Proxy": "1", "Implementation": "0xdd8ecd869287af1ccc6e3b5efa74776f3dc4660e", "SwarmSource": ""}