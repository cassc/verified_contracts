{"SourceCode": "/*\r\n\r\n\u28df\u287f\u287d\u28ef\u28bf\u2879\u28af\u28c6\u2800\u2809\u288f\u2873\u28ed\u2893\u28af\u2859\u28ee\u2833\u28e4\u2880\u2800\u2808\u2800\u2800\u2800\u2801\u2800\u2840\u28c4\u2832\u28cd\u288f\u2873\u283d\u28cd\u282f\u287d\u28d9\u2803\u2880\u28f4\u28bb\u28cf\u287f\u28ef\u28df\u28ff\u28fb\u28df\u28ff\r\n\u28fb\u287c\u28b3\u285d\u28f6\u28ab\u2857\u28ae\u2833\u28c4\u2800\u2833\u282c\u28d9\u28a6\u2859\u28a6\u288b\u2800\u2800\u2800\u28c0\u2824\u28a0\u2804\u28c0\u2800\u2800\u2800\u2808\u2896\u2869\u289e\u2879\u28cc\u280f\u2815\u2801\u28d4\u28af\u28da\u28bd\u28ea\u2897\u28fb\u28ae\u28f3\u285f\u28fc\u28fb\r\n\u2873\u28ed\u28b3\u285d\u28b2\u28cb\u289e\u2829\u2813\u2808\u28b1\u2880\u2808\u2831\u288e\u2871\u28aa\u284d\u28b2\u2800\u2800\u2800\u2818\u2825\u281a\u2804\u2801\u2800\u28a0\u2858\u28a6\u2859\u28a2\u2813\u284c\u2808\u2860\u280a\u2819\u2802\u280f\u28be\u2871\u28eb\u283e\u28dd\u28f3\u287b\u28f7\u28af\r\n\u2873\u28a5\u2813\u2818\u2803\u2800\u2800\u28c0\u28a4\u28b0\u2843\u28a7\u2840\u2800\u2800\u2891\u2802\u28cc\u2823\u28b1\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u2852\u28a5\u2883\u285a\u28a5\u281b\u2880\u2814\u28cd\u2833\u2886\u2824\u28c0\u2800\u2808\u2801\u281b\u285c\u28e7\u287d\u28de\u287d\r\n\u2809\u2880\u28c0\u28a4\u28a2\u28cd\u2833\u28cc\u28b2\u28a1\u281a\u2864\u28a3\u2825\u2840\u2800\u2818\u28a0\u2892\u2821\u2852\u2844\u2800\u2840\u2800\u2800\u28a0\u2823\u2858\u28a2\u2806\u2869\u2800\u2860\u2881\u282f\u28b0\u2829\u285c\u2878\u2882\u281f\u28d8\u2826\u28e4\u2800\u2840\u2809\u2813\u283d\r\n\u28ce\u2833\u28cc\u282e\u2871\u288c\u2833\u284c\u28cc\u2833\u2848\u2816\u2861\u288e\u2821\u2844\u2800\u2818\u28a4\u2813\u282c\u28d1\u2802\u2800\u2800\u2800\u2887\u2882\u2871\u2802\u2802\u2880\u284a\u2894\u2849\u2806\u2871\u288c\u2870\u28a1\u280f\u287c\u28a1\u280f\u2874\u28ab\u28d5\u28a3\u2826\u28c4\r\n\u288e\u2873\u289c\u28a2\u2871\u28c9\u2816\u2861\u2886\u2831\u28c8\u281c\u2830\u288c\u2812\u28cc\u2822\u2880\u2800\u2813\u2812\u2801\u28a0\u280a\u2811\u2884\u2800\u2801\u2840\u2801\u2854\u2861\u2898\u2882\u2831\u2848\u2814\u2842\u2885\u2883\u281e\u2861\u2887\u285a\u28e1\u2893\u28ae\u2859\u28de\u28f1\r\n\u28cd\u2816\u284c\u2856\u2871\u288c\u2832\u2848\u2894\u2802\u28a4\u2859\u2882\u2806\u285c\u2820\u2851\u2882\u2817\u2800\u2880\u2814\u2841\u2880\u2840\u2800\u2821\u28c0\u2800\u2822\u284c\u2870\u2808\u2806\u2861\u2812\u2849\u2834\u2849\u288c\u2832\u28c9\u28a6\u2871\u28cc\u282d\u28a6\u2879\u285c\u2876\r\n\u285c\u285a\u28b4\u28c9\u2816\u28c9\u2826\u2829\u285c\u284c\u2806\u2834\u28c1\u28aa\u2830\u2851\u280c\u2801\u2880\u2874\u28c1\u2806\u2870\u2801\u2859\u2884\u2820\u2831\u28a4\u2844\u2808\u2822\u2869\u2830\u2881\u2823\u2851\u2882\u2831\u2848\u2827\u28cc\u2832\u2871\u288c\u281e\u28e5\u2833\u284d\u2885\r\n\u285c\u2811\u280a\u2834\u2858\u28a4\u2849\u2827\u2830\u284c\u2859\u2834\u2848\u2825\u2866\u280b\u2880\u28f4\u28ff\u2871\u28c7\u285e\u2800\u2800\u2804\u2808\u28a7\u2879\u28d6\u28fb\u28a7\u2840\u2800\u289c\u2824\u2883\u2811\u284a\u2825\u28a3\u2831\u28cc\u28a3\u2871\u28cb\u281e\u2801\u2823\u28dc\u287e\r\n\u28c5\u2800\u2800\u2800\u2801\u2832\u28a1\u280e\u2871\u28a4\u2849\u2886\u28e9\u280e\u2880\u28f4\u28ff\u28ff\u2877\u28df\u280e\u2800\u2860\u2814\u28e6\u28c6\u28e0\u28bb\u28f3\u28ef\u28ff\u28ff\u28e6\u2840\u2819\u28a4\u2883\u2885\u2853\u2886\u28a3\u281c\u2862\u2811\u2801\u2800\u2800\u28c0\u28bc\u28f9\r\n\u28dc\u28a3\u2804\u2800\u2800\u2800\u2880\u2808\u2811\u2886\u28e9\u289e\u28e7\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u2867\u2812\u2801\u2800\u2800\u28ff\u28ff\u28ff\u287f\u28fd\u28f7\u28ff\u28ff\u28ff\u28ff\u28e6\u2840\u2819\u28a4\u28c9\u2816\u2808\u2800\u2800\u2800\u2880\u287c\u28b9\u28ec\u28b3\u28ed\r\n\u2863\u288f\u289e\u28c0\u2800\u2800\u2808\u2808\u2800\u2870\u2801\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u2800\u2888\u28c0\u2844\u2820\u283f\u289f\u28fd\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2866\u2800\u28e7\u2800\u2809\u2800\u2800\u28a0\u2832\u28dc\u28e3\u289e\u28e3\u289f\r\n\u28dd\u285a\u28ae\u283c\u2870\u2800\u2800\u2800\u2800\u286d\u28e6\u2840\u2808\u283b\u28ff\u28ff\u28ff\u28ff\u28d6\u2832\u28b6\u28f6\u28f6\u28f7\u28f6\u28f7\u28fe\u28ff\u281f\u28eb\u28ff\u28ff\u28ff\u28ff\u289f\u2811\u28e0\u28fc\u28a3\u2800\u2800\u2800\u2864\u2873\u285d\u28a6\u28a7\u28db\u28ae\u28df\r\n\u28ce\u285d\u28ce\u2833\u28cd\u2873\u2800\u2800\u2800\u28bd\u287d\u28ff\u28e6\u2840\u2808\u283b\u28ff\u28ff\u28ff\u28ff\u28f6\u28ed\u28d9\u283f\u283f\u289f\u28ed\u28f6\u28ff\u28ff\u28ff\u28ff\u289f\u2805\u28e2\u28f6\u28ff\u28ef\u2867\u2800\u2800\u28b0\u28a3\u28b3\u28d9\u28ae\u28f3\u2879\u28ae\u28fb\r\n\u2808\u2818\u28dc\u28ab\u2874\u28ad\u2827\u2844\u2800\u28aa\u28bf\u28ff\u28ff\u28ff\u28e6\u2840\u2808\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u289f\u2859\u28a1\u28fc\u28ff\u28ff\u28ff\u282f\u2801\u2880\u286c\u2853\u28cf\u2836\u28f9\u2856\u2847\u2809\u288b\u2877\r\n\u2810\u2802\u280a\u2813\u2808\u2883\u2819\u2836\u2844\u2800\u2818\u28bb\u28ff\u28ff\u28ff\u28ff\u28e6\u2840\u280a\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u281f\u2805\u28c1\u28f4\u28ff\u28ff\u28ff\u28ff\u284f\u2801\u2880\u285c\u2836\u2819\u284c\u280b\u2811\u2819\u2809\u2812\u2803\u2819\r\n\u2800\u2800\u2800\u28a0\u2854\u28af\u2842\u2800\u2809\u2820\u28f6\u2844\u2818\u289f\u28ff\u28ff\u28ff\u28ff\u28e6\u2848\u28ee\u287b\u28ff\u28ff\u28ff\u28ff\u28df\u285d\u28a1\u28f4\u28ff\u28ff\u28ff\u287f\u283f\u2809\u28a0\u28f6\u2808\u2809\u2880\u28de\u2873\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2860\u28d6\u2873\u285e\u28a7\u28af\u2844\u2800\u2800\u2800\u2819\u2823\u2806\u2809\u28be\u28ff\u28ff\u28ff\u28ff\u28ee\u287b\u28ee\u287b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2809\u2800\u2800\u2800\u2801\u2800\u28a0\u28db\u2874\u28bb\u28dc\u28f3\u2844\u2800\u2800\u2836\u28c4\r\n\u287e\u28f5\u28eb\u289e\u287d\u28cb\u2876\u28f9\u2800\u2800\u2880\u2800\u2800\u2800\u2800\u2800\u281b\u28be\u28ff\u28ff\u28ff\u28f7\u28cc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u280b\u2801\u2800\u2800\u2880\u2840\u2800\u28a0\u28b3\u2875\u28fa\u28dd\u28ae\u2857\u28fd\u28f3\u28c6\u2840\u2800\r\n\u287f\u28f6\u28db\u28fe\u28f9\u28dd\u2873\u2807\u2800\u28f4\u288b\u2836\u2800\u2800\u2800\u28e0\u28a4\u2800\u2808\u281b\u283f\u28ff\u28ff\u28f7\u28fe\u28ff\u28ff\u283f\u281b\u2809\u28a0\u2804\u2800\u2800\u2812\u28ad\u2872\u2844\u2800\u28bb\u287c\u28e7\u28fb\u28be\u28f9\u28d7\u28ef\u28de\u28f7\u28e6\r\n\u28ff\u28f3\u28df\u28be\u28f3\u28af\u285f\u2800\u2800\u2808\u2800\u2800\u2880\u28a4\u28de\u28f1\u28db\u2876\u28c0\u2800\u2802\u2819\u28ff\u28ff\u28ff\u285f\u2801\u2800\u2880\u287c\u28ed\u28bb\u28e4\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28f7\u28af\u2877\u28ef\u2877\u28df\u28fe\u28fd\u28fe\u28bf\r\n\u28ef\u2877\u28ef\u28bf\u28ed\u28df\u2802\u2800\u2800\u2800\u28a0\u2854\u28ef\u28be\u287c\u28a7\u2873\u28dd\u28f3\u28a6\u2840\u2800\u2839\u28f7\u281b\u2800\u2800\u28e0\u289f\u28fc\u28e3\u289f\u28ee\u289f\u28e6\u2840\u2800\u2800\u2800\u2800\u28a9\u28ff\u28fd\u2877\u28df\u28ff\u28fb\u28fe\u28bf\u28ff\r\n\u28ff\u28fd\u287f\u28ef\u28f7\u280b\u2800\u2800\u28a0\u28fc\u28f3\u283f\u28fd\u28be\u287d\u28af\u287d\u28fe\u28f1\u281b\u2816\u2800\u2800\u2808\u2800\u2810\u283e\u2831\u28ef\u28b6\u28eb\u28bf\u287c\u28ef\u2877\u28df\u28e7\u28c4\u2800\u2800\u2810\u28ff\u28fe\u28bf\u28ff\u28fb\u28ff\u28ff\u28ff\u28ff\r\n\u28ff\u28df\u28ff\u28ff\u285d\u2800\u28e0\u28f6\u28ff\u28f3\u28ff\u28fb\u28fd\u28ef\u281f\u2837\u2809\u2801\u2800\u2800\u2800\u28a0\u2800\u2800\u2800\u2804\u2800\u2800\u2800\u2808\u2819\u282b\u289f\u28f7\u287f\u28ff\u28fb\u28fd\u28f7\u28e4\u2840\u2818\u28ff\u28ff\u28fb\u28ff\u28ff\u28fd\u28ff\u28ff\r\n\r\n\r\nTelegram : https://t.me/GoldenEthereumportal\r\n\r\nTwitter : https://twitter.com/TheGoldEthereum\r\n\r\nWebsite : http://www.goldenethereum.vip\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: Unlicensed\r\npragma solidity 0.8.18;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom( address sender, address recipient, uint256 amount) external returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n    address private _previousOwner;\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    constructor() {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n}\r\n\r\ninterface IUniswapV2Factory {\r\n    function createPair(address tokenA, address tokenB)\r\n        external\r\n        returns (address pair);\r\n}\r\n\r\ninterface IUniswapV2Router02 {\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external;\r\n\r\n    function factory() external pure returns (address);\r\n    function WETH() external pure returns (address);\r\n}\r\n\r\ncontract GoldenEthereum is Context, IERC20, Ownable {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) private _balance;\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    mapping(address => bool) private _walletExcluded;\r\n    uint256 private constant MAX = ~uint256(0);\r\n    uint8 private constant _decimals = 18;\r\n    uint256 private constant _totalSupply = 10**7 * 10**_decimals;\r\n    //Swap Threshold (0.04%)\r\n    uint256 private constant minSwap = 4000 * 10**_decimals;\r\n    //Define 1%\r\n    uint256 private constant onePercent = 100000 * 10**_decimals;\r\n    //Max Tx at Launch\r\n    uint256 public maxTxAmount = onePercent * 2;\r\n\r\n    uint256 private launchBlock;\r\n    uint256 private buyValue = 0;\r\n\r\n    uint256 private _tax;\r\n    uint256 public buyTax = 25;\r\n    uint256 public sellTax = 45;\r\n    \r\n    string private constant _name = \"Golden Ethereum\";\r\n    string private constant _symbol = \"GLE\";\r\n\r\n    IUniswapV2Router02 private uniswapV2Router;\r\n    address public uniswapV2Pair;\r\n    address payable public treasuryAddress;\r\n\r\n    bool private launch = false;\r\n\r\n    constructor(address[] memory wallets) {\r\n        uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\r\n        uniswapV2Pair = IUniswapV2Factory(uniswapV2Router.factory()).createPair(address(this), uniswapV2Router.WETH());\r\n        treasuryAddress = payable(wallets[0]);\r\n        _balance[msg.sender] = _totalSupply;\r\n        for (uint256 i = 0; i < wallets.length; i++) {\r\n            _walletExcluded[wallets[i]] = true;\r\n        }\r\n        _walletExcluded[msg.sender] = true;\r\n        _walletExcluded[address(this)] = true;\r\n\r\n        emit Transfer(address(0), _msgSender(), _totalSupply);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function totalSupply() public pure override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) public view override returns (uint256) {\r\n        return _balance[account];\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)public override returns (bool){\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) public view override returns (uint256){\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 amount) public override returns (bool){\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    function _approve(address owner, address spender, uint256 amount) private {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n\r\n    function enableTrading() external onlyOwner {\r\n        launch = true;\r\n        launchBlock = block.number;\r\n    }\r\n\r\n    function addExcludedWallet(address wallet) external onlyOwner {\r\n        _walletExcluded[wallet] = true;\r\n    }\r\n\r\n    function removeLimits() external onlyOwner {\r\n        maxTxAmount = _totalSupply;\r\n    }\r\n\r\n    function changeTax(uint256 newBuyTax, uint256 newSellTax) external onlyOwner {\r\n        buyTax = newBuyTax;\r\n        sellTax = newSellTax;\r\n    }\r\n\r\n    function changeBuyValue(uint256 newBuyValue) external onlyOwner {\r\n        buyValue = newBuyValue;\r\n    }\r\n\r\n    function _tokenTransfer(address from, address to, uint256 amount) private {\r\n        uint256 taxTokens = (amount * _tax) / 100;\r\n        uint256 transferAmount = amount - taxTokens;\r\n\r\n        _balance[from] = _balance[from] - amount;\r\n        _balance[to] = _balance[to] + transferAmount;\r\n        _balance[address(this)] = _balance[address(this)] + taxTokens;\r\n\r\n        emit Transfer(from, to, transferAmount);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint256 amount) private {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n\r\n        if (_walletExcluded[from] || _walletExcluded[to]) {\r\n            _tax = 0;\r\n        } else {\r\n            require(launch, \"Trading not open\");\r\n            require(amount <= maxTxAmount, \"MaxTx Enabled at launch\");\r\n            if (block.number < launchBlock + buyValue + 0) {_tax=99;} else {\r\n                if (from == uniswapV2Pair) {\r\n                    _tax = buyTax;\r\n                } else if (to == uniswapV2Pair) {\r\n                    uint256 tokensToSwap = balanceOf(address(this));\r\n                    if (tokensToSwap > minSwap) { //Sets Max Internal Swap\r\n                        if (tokensToSwap > onePercent * 4) { \r\n                            tokensToSwap = onePercent * 4;\r\n                        }\r\n                        swapTokensForEth(tokensToSwap);\r\n                    }\r\n                    _tax = sellTax;\r\n                } else {\r\n                    _tax = 0;\r\n                }\r\n            }\r\n        }\r\n        _tokenTransfer(from, to, amount);\r\n    }\r\n\r\n    function manualSendBalance() external {\r\n        require(_msgSender() == treasuryAddress);\r\n        uint256 contractETHBalance = address(this).balance;\r\n        treasuryAddress.transfer(contractETHBalance);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        treasuryAddress.transfer(contractBalance);\r\n    } \r\n\r\n    function manualSwapTokens() external {\r\n        require(_msgSender() == treasuryAddress);\r\n        uint256 contractBalance = balanceOf(address(this));\r\n        swapTokensForEth(contractBalance);\r\n    }\r\n\r\n\r\n    function swapTokensForEth(uint256 tokenAmount) private {\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(this);\r\n        path[1] = uniswapV2Router.WETH();\r\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\r\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n            tokenAmount,\r\n            0,\r\n            path,\r\n            treasuryAddress,\r\n            block.timestamp\r\n        );\r\n    }\r\n    receive() external payable {}\r\n}", "ABI": "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"addExcludedWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyValue\",\"type\":\"uint256\"}],\"name\":\"changeBuyValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBuyTax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSellTax\",\"type\":\"uint256\"}],\"name\":\"changeTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSendBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualSwapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]", "ContractName": "GoldenEthereum", "CompilerVersion": "v0.8.18+commit.87f61d96", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a9efadb590728e5c2d2ce691f786c0e7a7266cd9", "EVMVersion": "Default", "Library": "", "LicenseType": "Unlicense", "Proxy": "0", "Implementation": "", "SwarmSource": "ipfs://ab97b0c4611a1d23732b5cb4fb897b46c671d3a8d40329e665d4bb0807fa1293"}