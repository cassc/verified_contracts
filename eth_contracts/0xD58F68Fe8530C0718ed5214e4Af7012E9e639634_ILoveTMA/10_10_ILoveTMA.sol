// SPDX-License-Identifier: MIT

/*
███████╗███╗░░██╗████████╗███████╗██████╗░████████╗░█████╗░██╗███╗░░██╗  ███╗░░██╗░█████╗░████████╗
██╔════╝████╗░██║╚══██╔══╝██╔════╝██╔══██╗╚══██╔══╝██╔══██╗██║████╗░██║  ████╗░██║██╔══██╗╚══██╔══╝
█████╗░░██╔██╗██║░░░██║░░░█████╗░░██████╔╝░░░██║░░░███████║██║██╔██╗██║  ██╔██╗██║██║░░██║░░░██║░░░
██╔══╝░░██║╚████║░░░██║░░░██╔══╝░░██╔══██╗░░░██║░░░██╔══██║██║██║╚████║  ██║╚████║██║░░██║░░░██║░░░
███████╗██║░╚███║░░░██║░░░███████╗██║░░██║░░░██║░░░██║░░██║██║██║░╚███║  ██║░╚███║╚█████╔╝░░░██║░░░
╚══════╝╚═╝░░╚══╝░░░╚═╝░░░╚══════╝╚═╝░░╚═╝░░░╚═╝░░░╚═╝░░╚═╝╚═╝╚═╝░░╚══╝  ╚═╝░░╚══╝░╚════╝░░░░╚═╝░░░

░█████╗░███╗░░██╗██╗░░░░░██╗░░░██╗  ██╗░░░██╗░█████╗░██╗░░░██╗██████╗░░██████╗███████╗██╗░░░░░███████╗░░░  
██╔══██╗████╗░██║██║░░░░░╚██╗░██╔╝  ╚██╗░██╔╝██╔══██╗██║░░░██║██╔══██╗██╔════╝██╔════╝██║░░░░░██╔════╝░░░  
██║░░██║██╔██╗██║██║░░░░░░╚████╔╝░  ░╚████╔╝░██║░░██║██║░░░██║██████╔╝╚█████╗░█████╗░░██║░░░░░█████╗░░░░░  
██║░░██║██║╚████║██║░░░░░░░╚██╔╝░░  ░░╚██╔╝░░██║░░██║██║░░░██║██╔══██╗░╚═══██╗██╔══╝░░██║░░░░░██╔══╝░░██╗  
╚█████╔╝██║░╚███║███████╗░░░██║░░░  ░░░██║░░░╚█████╔╝╚██████╔╝██║░░██║██████╔╝███████╗███████╗██║░░░░░╚█║  
░╚════╝░╚═╝░░╚══╝╚══════╝░░░╚═╝░░░  ░░░╚═╝░░░░╚════╝░░╚═════╝░╚═╝░░╚═╝╚═════╝░╚══════╝╚══════╝╚═╝░░░░░░╚╝  

██████╗░██╗░░░██╗████████╗  ███████╗██╗░░░██╗███████╗██████╗░██╗░░░██╗░█████╗░███╗░░██╗███████╗
██╔══██╗██║░░░██║╚══██╔══╝  ██╔════╝██║░░░██║██╔════╝██╔══██╗╚██╗░██╔╝██╔══██╗████╗░██║██╔════╝
██████╦╝██║░░░██║░░░██║░░░  █████╗░░╚██╗░██╔╝█████╗░░██████╔╝░╚████╔╝░██║░░██║██╔██╗██║█████╗░░
██╔══██╗██║░░░██║░░░██║░░░  ██╔══╝░░░╚████╔╝░██╔══╝░░██╔══██╗░░╚██╔╝░░██║░░██║██║╚████║██╔══╝░░
██████╦╝╚██████╔╝░░░██║░░░  ███████╗░░╚██╔╝░░███████╗██║░░██║░░░██║░░░╚█████╔╝██║░╚███║███████╗
╚═════╝░░╚═════╝░░░░╚═╝░░░  ╚══════╝░░░╚═╝░░░╚══════╝╚═╝░░╚═╝░░░╚═╝░░░░╚════╝░╚═╝░░╚══╝╚══════╝
*/

pragma solidity ^0.8.17;

import "@openzeppelin/contracts/token/ERC1155/ERC1155.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract ILoveTMA is ERC1155, Ownable {
    string public name;
    string public symbol;

    address public creatorAddress;

    constructor() ERC1155("ipfs://bafkreih3lejmwhi4f662tezwnn7w7fvvljrg7a7n5nflppstbzq7slmaze") {
        name = "I Love TMA";
        symbol = "ILTMA";
    }

    //// mint function ////
    function adminMint(
        uint256 _mintAmount
    ) external onlyOwner {
        require(creatorAddress != address(0), "Set creator address!");
        _mint(creatorAddress, 0, _mintAmount, "");
    }

    //// SBT functions ////
    function setCreatorAddress(
        address _creatorAddress
    ) external onlyOwner {
        creatorAddress = _creatorAddress;
    }

    function _beforeTokenTransfer(
        address operator,
        address from,
        address to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bytes memory data
    ) internal override(ERC1155) {
        require(
            operator == owner()
            || from == creatorAddress
            || from == address(0),
         "this is SBT");
        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);
    }
}